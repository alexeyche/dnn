!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACC	spikework/gram.h	/^    enum EInnerProductMode { MUL, ACC };$/;"	e	enum:dnn::GramProcessor::EInnerProductMode
ALIGN_CENTER	dnn/contrib/spdlog/details/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_DEFAULT	dnn/contrib/spdlog/details/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_LEFT	dnn/contrib/spdlog/details/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_NUMERIC	dnn/contrib/spdlog/details/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ALIGN_RIGHT	dnn/contrib/spdlog/details/format.h	/^    ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_CENTER, ALIGN_NUMERIC$/;"	e	enum:fmt::Alignment
ASCII	dnn/contrib/rapidjson/encodings.h	/^struct ASCII {$/;"	s
ASSERT_FIELDS	dnn/io/serialize.h	216;"	d
A_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class A_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Accept	dnn/contrib/rapidjson/document.h	/^    bool Accept(Handler& handler) const {$/;"	f	class:GenericValue
ActFunction	dnn/act_functions/act_function.h	/^class ActFunction : public ActFunctionBase {$/;"	c	namespace:dnn
ActFunctionBase	dnn/act_functions/act_function.h	/^class ActFunctionBase : public SerializableBase {$/;"	c	namespace:dnn
ActFunctionInterface	dnn/act_functions/act_function.h	/^struct ActFunctionInterface {$/;"	s	namespace:dnn
ActVector	dnn/util/act_vector.h	/^class ActVector : private vector<T> {$/;"	c	namespace:dnn
AdaptIntegrateAndFire	dnn/neurons/adapt_integrate_and_fire.h	/^class AdaptIntegrateAndFire : public SpikeNeuron<AdaptIntegrateAndFireC, AdaptIntegrateAndFireState> {$/;"	c	namespace:dnn
AdaptIntegrateAndFireC	dnn/neurons/adapt_integrate_and_fire.h	/^    AdaptIntegrateAndFireC() $/;"	f	struct:dnn::AdaptIntegrateAndFireC
AdaptIntegrateAndFireC	dnn/neurons/adapt_integrate_and_fire.h	/^struct AdaptIntegrateAndFireC : public Serializable<Protos::AdaptIntegrateAndFireC> {$/;"	s	namespace:dnn
AdaptIntegrateAndFireState	dnn/neurons/adapt_integrate_and_fire.h	/^    AdaptIntegrateAndFireState() $/;"	f	struct:dnn::AdaptIntegrateAndFireState
AdaptIntegrateAndFireState	dnn/neurons/adapt_integrate_and_fire.h	/^struct AdaptIntegrateAndFireState : public Serializable<Protos::AdaptIntegrateAndFireState>  {$/;"	s	namespace:dnn
AddChunk	dnn/contrib/rapidjson/allocators.h	/^    void AddChunk(size_t capacity) {$/;"	f	class:MemoryPoolAllocator
AddConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	s	namespace:internal
AddMember	dnn/contrib/rapidjson/document.h	/^    AddMember(StringRefType name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AlgoStat	shapelets/shapelets_algo.h	/^        AlgoStat() : numberOfPruned(0) {}$/;"	f	struct:dnn::shapelets::ShapeletsAlgo::AlgoStat
AlgoStat	shapelets/shapelets_algo.h	/^    struct AlgoStat : public Printable {$/;"	s	class:dnn::shapelets::ShapeletsAlgo
AlignSpec	dnn/contrib/spdlog/details/format.h	/^    AlignSpec(unsigned width, wchar_t fill, Alignment align = ALIGN_DEFAULT)$/;"	f	struct:fmt::AlignSpec
AlignSpec	dnn/contrib/spdlog/details/format.h	/^struct AlignSpec : WidthSpec {$/;"	s	namespace:fmt
AlignTypeSpec	dnn/contrib/spdlog/details/format.h	/^    AlignTypeSpec(unsigned width, wchar_t fill) : AlignSpec(width, fill) {}$/;"	f	struct:fmt::AlignTypeSpec
AlignTypeSpec	dnn/contrib/spdlog/details/format.h	/^struct AlignTypeSpec : AlignSpec {$/;"	s	namespace:fmt
Alignment	dnn/contrib/spdlog/details/format.h	/^enum Alignment {$/;"	g	namespace:fmt
AllocatorType	dnn/contrib/rapidjson/document.h	/^    typedef Allocator AllocatorType;                        \/\/!< Allocator type from template parameter.$/;"	t	class:GenericDocument
AllocatorType	dnn/contrib/rapidjson/document.h	/^    typedef Allocator AllocatorType;                \/\/!< Allocator type from template parameter.$/;"	t	class:GenericValue
AndExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct AndExpr : AndExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
AndExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct AndExprCond<true, true> : TrueType {};$/;"	s	namespace:internal
AndExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct AndExprCond : FalseType {};$/;"	s	namespace:internal
AppendDecimal64	dnn/contrib/rapidjson/internal/biginteger.h	/^    void AppendDecimal64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
Apply	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Apply	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Arg	dnn/contrib/spdlog/details/format.h	/^struct Arg : Value {$/;"	s	namespace:fmt::internal
ArgArray	dnn/contrib/spdlog/details/format.h	/^struct ArgArray {$/;"	s	namespace:fmt::internal
ArgConverter	dnn/contrib/spdlog/details/format.cc	/^    ArgConverter(fmt::internal::Arg &arg, wchar_t type)$/;"	f	class:fmt::__anon32::ArgConverter
ArgConverter	dnn/contrib/spdlog/details/format.cc	/^class ArgConverter : public fmt::internal::ArgVisitor<ArgConverter<T>, void> {$/;"	c	namespace:fmt::__anon32	file:
ArgFormatter	dnn/contrib/spdlog/details/format.cc	/^    ArgFormatter(BasicFormatter<Char> &f, FormatSpec &s, const Char *fmt)$/;"	f	class:fmt::internal::ArgFormatter
ArgFormatter	dnn/contrib/spdlog/details/format.cc	/^class ArgFormatter : public BasicArgFormatter<ArgFormatter<Char>, Char> {$/;"	c	namespace:fmt::internal	file:
ArgList	dnn/contrib/spdlog/details/format.h	/^    ArgList() : types_(0) {}$/;"	f	class:fmt::ArgList
ArgList	dnn/contrib/spdlog/details/format.h	/^    ArgList(ULongLong types, const internal::Arg *args)$/;"	f	class:fmt::ArgList
ArgList	dnn/contrib/spdlog/details/format.h	/^    ArgList(ULongLong types, const internal::Value *values)$/;"	f	class:fmt::ArgList
ArgList	dnn/contrib/spdlog/details/format.h	/^class ArgList {$/;"	c	namespace:fmt
ArgMap	dnn/contrib/spdlog/details/format.h	/^class ArgMap {$/;"	c	namespace:fmt::internal
ArgVisitor	dnn/contrib/spdlog/details/format.h	/^class ArgVisitor {$/;"	c	namespace:fmt::internal
Array	dnn/contrib/rapidjson/document.h	/^    struct Array {$/;"	s	class:GenericValue
ArrayWriter	dnn/contrib/spdlog/details/format.h	/^typedef BasicArrayWriter<char> ArrayWriter;$/;"	t	namespace:fmt
AutoUTF	dnn/contrib/rapidjson/encodings.h	/^struct AutoUTF {$/;"	s
AutoUTFInputStream	dnn/contrib/rapidjson/encodedstream.h	/^    AutoUTFInputStream(InputByteStream& is, UTFType type = kUTF8) : is_(&is), type_(type), hasBOM_(false) {$/;"	f	class:AutoUTFInputStream
AutoUTFInputStream	dnn/contrib/rapidjson/encodedstream.h	/^class AutoUTFInputStream {$/;"	c
AutoUTFOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^    AutoUTFOutputStream(OutputByteStream& os, UTFType type, bool putBOM) : os_(&os), type_(type) {$/;"	f	class:AutoUTFOutputStream
AutoUTFOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^class AutoUTFOutputStream {$/;"	c
B	dnn/learning_rules/optimal_stdp.h	/^    double B;$/;"	m	struct:dnn::OptimalStdpState
BLACK	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
BLUE	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
BOOL	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
BUFFER_SIZE	dnn/contrib/spdlog/details/format.h	/^    enum { BUFFER_SIZE = std::numeric_limits<ULongLong>::digits10 + 3 };$/;"	e	enum:fmt::FormatInt::__anon31
B_calc	dnn/learning_rules/optimal_stdp.cpp	/^inline double OptimalStdp::B_calc() {$/;"	f	class:dnn::OptimalStdp
B_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class B_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Barrier	dnn/util/barrier.h	/^    explicit Barrier(std::size_t count) : _count{count}, _fail(false) { }$/;"	f	class:Barrier
Barrier	dnn/util/barrier.h	/^class Barrier$/;"	c
Base	dnn/contrib/rapidjson/prettywriter.h	/^    typedef Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> Base;$/;"	t	class:PrettyWriter
Base	dnn/contrib/rapidjson/reader.h	/^        typedef NumberStream<InputStream, false> Base;$/;"	t	class:GenericReader::NumberStream
BaseReaderHandler	dnn/contrib/rapidjson/reader.h	/^struct BaseReaderHandler {$/;"	s
BaseType	dnn/contrib/rapidjson/document.h	/^    typedef std::iterator<std::random_access_iterator_tag,ValueType> BaseType;$/;"	t	class:GenericMemberIterator
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate0 < R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate1 < Param1, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate2 < Param1, Param2, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate3 < Param1, Param2, Param3, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate4 < Param1, Param2, Param3, Param4, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate5 < Param1, Param2, Param3, Param4, Param5, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate6 < Param1, Param2, Param3, Param4, Param5, Param6, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate7 < Param1, Param2, Param3, Param4, Param5, Param6, Param7, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate8 < Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BasicArgFormatter	dnn/contrib/spdlog/details/format.cc	/^    BasicArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::internal::BasicArgFormatter
BasicArgFormatter	dnn/contrib/spdlog/details/format.cc	/^class BasicArgFormatter : public ArgVisitor<Impl, void> {$/;"	c	namespace:fmt::internal	file:
BasicArrayWriter	dnn/contrib/spdlog/details/format.h	/^    BasicArrayWriter(Char *array, std::size_t size)$/;"	f	class:fmt::BasicArrayWriter
BasicArrayWriter	dnn/contrib/spdlog/details/format.h	/^class BasicArrayWriter : public BasicWriter<Char> {$/;"	c	namespace:fmt
BasicCStringRef	dnn/contrib/spdlog/details/format.h	/^    BasicCStringRef(const Char *s) : data_(s) {}$/;"	f	class:fmt::BasicCStringRef
BasicCStringRef	dnn/contrib/spdlog/details/format.h	/^    BasicCStringRef(const std::basic_string<Char> &s) : data_(s.c_str()) {}$/;"	f	class:fmt::BasicCStringRef
BasicCStringRef	dnn/contrib/spdlog/details/format.h	/^class BasicCStringRef {$/;"	c	namespace:fmt
BasicCharTraits	dnn/contrib/spdlog/details/format.h	/^class BasicCharTraits {$/;"	c	namespace:fmt::internal
BasicData	dnn/contrib/spdlog/details/format.cc	/^template struct fmt::internal::BasicData<void>;$/;"	m	class:fmt::internal	typeref:struct:fmt::internal::	file:
BasicFormatter	dnn/contrib/spdlog/details/format.h	/^    explicit BasicFormatter(BasicWriter<Char> &w) : writer_(w) {}$/;"	f	class:fmt::BasicFormatter
BasicFormatter	dnn/contrib/spdlog/details/format.h	/^class BasicFormatter : private internal::FormatterBase {$/;"	c	namespace:fmt
BasicMemoryWriter	dnn/contrib/spdlog/details/format.h	/^    BasicMemoryWriter(BasicMemoryWriter &&other)$/;"	f	class:fmt::BasicMemoryWriter
BasicMemoryWriter	dnn/contrib/spdlog/details/format.h	/^    explicit BasicMemoryWriter(const Allocator& alloc = Allocator())$/;"	f	class:fmt::BasicMemoryWriter
BasicMemoryWriter	dnn/contrib/spdlog/details/format.h	/^class BasicMemoryWriter : public BasicWriter<Char> {$/;"	c	namespace:fmt
BasicStringRef	dnn/contrib/spdlog/details/format.h	/^    BasicStringRef(const Char *s)$/;"	f	class:fmt::BasicStringRef
BasicStringRef	dnn/contrib/spdlog/details/format.h	/^    BasicStringRef(const Char *s, std::size_t size) : data_(s), size_(size) {}$/;"	f	class:fmt::BasicStringRef
BasicStringRef	dnn/contrib/spdlog/details/format.h	/^    BasicStringRef(const std::basic_string<Char> &s)$/;"	f	class:fmt::BasicStringRef
BasicStringRef	dnn/contrib/spdlog/details/format.h	/^class BasicStringRef {$/;"	c	namespace:fmt
BasicWriter	dnn/contrib/spdlog/details/format.h	/^    explicit BasicWriter(Buffer<Char> &b) : buffer_(b) {}$/;"	f	class:fmt::BasicWriter
BasicWriter	dnn/contrib/spdlog/details/format.h	/^class BasicWriter {$/;"	c	namespace:fmt
Begin	dnn/contrib/rapidjson/document.h	/^    ConstValueIterator Begin() const { return const_cast<GenericValue&>(*this).Begin(); }$/;"	f	class:GenericValue
Begin	dnn/contrib/rapidjson/document.h	/^    ValueIterator Begin() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements; }$/;"	f	class:GenericValue
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger(const BigInteger& rhs) : count_(rhs.count_) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger(const char* decimals, size_t length) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    explicit BigInteger(uint64_t u) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^class BigInteger {$/;"	c	namespace:internal
Binary	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	e	enum:dnn::Stream::Repr
Bool	dnn/contrib/rapidjson/document.h	/^    bool Bool(bool b) { new (stack_.template Push<ValueType>()) ValueType(b); return true; }$/;"	f	class:GenericDocument
Bool	dnn/contrib/rapidjson/prettywriter.h	/^    bool Bool(bool b)           { PrettyPrefix(b ? kTrueType : kFalseType); return Base::WriteBool(b); }$/;"	f	class:PrettyWriter
Bool	dnn/contrib/rapidjson/reader.h	/^    bool Bool(bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Bool	dnn/contrib/rapidjson/writer.h	/^    bool Bool(bool b)           { Prefix(b ? kTrueType : kFalseType); return WriteBool(b); }$/;"	f	class:Writer
BoolExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C> struct BoolExpr : SelectIf<C,TrueType,FalseType>::Type {};$/;"	s	namespace:internal
BoolType	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond> struct BoolType {$/;"	s	namespace:internal
Bottom	dnn/contrib/rapidjson/internal/stack.h	/^    T* Bottom() { return (T*)stack_; }$/;"	f	class:internal::Stack
Buffer	dnn/contrib/spdlog/details/format.h	/^    Buffer(T *ptr = 0, std::size_t capacity = 0)$/;"	f	class:fmt::Buffer
Buffer	dnn/contrib/spdlog/details/format.h	/^class Buffer {$/;"	c	namespace:fmt
Builder	dnn/sim/builder.h	/^	Builder(const Constants &_c) : c(_c), input_stream(nullptr) {$/;"	f	class:dnn::Builder
Builder	dnn/sim/builder.h	/^class Builder {$/;"	c	namespace:dnn
C	dnn/learning_rules/optimal_stdp.h	/^    ActVector<double> C;$/;"	m	struct:dnn::OptimalStdpState
C	shapelets/dataset.h	/^    size_t C() const {$/;"	f	class:dnn::shapelets::Dataset
CHAR	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
CHAR_FLAG	dnn/contrib/spdlog/details/format.h	/^    CHAR_FLAG = 0x10  \/\/ Argument has char type - used in error reporting.$/;"	e	enum:fmt::__anon29
CHECK_OVERFLOW_OP	dnn/contrib/kiss_fft/_kiss_fft_guts.h	58;"	d
CHECK_OVERFLOW_OP	dnn/contrib/kiss_fft/_kiss_fft_guts.h	97;"	d
COPY	dnn/contrib/rapidjson/encodings.h	130;"	d
COPY	dnn/contrib/rapidjson/encodings.h	152;"	d
COPY	dnn/contrib/rapidjson/encodings.h	159;"	d
COPY	dnn/contrib/rapidjson/encodings.h	178;"	d
CSTRING	dnn/contrib/spdlog/details/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
CStringRef	dnn/contrib/spdlog/details/format.h	/^typedef BasicCStringRef<char> CStringRef;$/;"	t	namespace:fmt
CUSTOM	dnn/contrib/spdlog/details/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
CYAN	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
C_ADD	dnn/contrib/kiss_fft/_kiss_fft_guts.h	100;"	d
C_ADD	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_ADD( cpx_type & c,const cpx_type & a,const cpx_type & b) { c=a+b;}$/;"	f	class:kissfft
C_ADDTO	dnn/contrib/kiss_fft/_kiss_fft_guts.h	112;"	d
C_ADDTO	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_ADDTO( cpx_type & c,const cpx_type & a) { c+=a;}$/;"	f	class:kissfft
C_FIXDIV	dnn/contrib/kiss_fft/_kiss_fft_guts.h	76;"	d
C_FIXDIV	dnn/contrib/kiss_fft/_kiss_fft_guts.h	90;"	d
C_FIXDIV	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_FIXDIV( cpx_type & ,int ) {} \/\/ NO-OP for float types$/;"	f	class:kissfft
C_MUL	dnn/contrib/kiss_fft/_kiss_fft_guts.h	69;"	d
C_MUL	dnn/contrib/kiss_fft/_kiss_fft_guts.h	87;"	d
C_MUL	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_MUL( cpx_type & c,const cpx_type & a,const cpx_type & b) { c=a*b;}$/;"	f	class:kissfft
C_MULBYSCALAR	dnn/contrib/kiss_fft/_kiss_fft_guts.h	80;"	d
C_MULBYSCALAR	dnn/contrib/kiss_fft/_kiss_fft_guts.h	91;"	d
C_MULBYSCALAR	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_MULBYSCALAR(cpx_type & c,const scalar_type & a) {c*=a;}$/;"	f	class:kissfft
C_SUB	dnn/contrib/kiss_fft/_kiss_fft_guts.h	106;"	d
C_SUB	dnn/contrib/kiss_fft/kissfft.hh	/^        void C_SUB( cpx_type & c,const cpx_type & a,const cpx_type & b) { c=a-b;}$/;"	f	class:kissfft
C_SUBFROM	dnn/contrib/kiss_fft/_kiss_fft_guts.h	119;"	d
C_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class C_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Ca	dnn/neurons/adapt_integrate_and_fire.h	/^    double Ca;$/;"	m	struct:dnn::AdaptIntegrateAndFireState
Capacity	dnn/contrib/rapidjson/allocators.h	/^    size_t Capacity() const {$/;"	f	class:MemoryPoolAllocator
Capacity	dnn/contrib/rapidjson/document.h	/^    SizeType Capacity() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.capacity; }$/;"	f	class:GenericValue
Ch	dnn/contrib/rapidjson/document.h	/^    typedef CharType Ch; \/\/!< character type of the string$/;"	t	struct:GenericStringRef
Ch	dnn/contrib/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;                       \/\/!< Character type derived from Encoding.$/;"	t	class:GenericDocument
Ch	dnn/contrib/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;               \/\/!< Character type derived from Encoding.$/;"	t	class:GenericValue
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFInputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFOutputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedOutputStream
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:ASCII
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:AutoUTF
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF16
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF32
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF8
Ch	dnn/contrib/rapidjson/filereadstream.h	/^    typedef char Ch;    \/\/!< Character type (byte).$/;"	t	class:FileReadStream
Ch	dnn/contrib/rapidjson/filestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileStream
Ch	dnn/contrib/rapidjson/filewritestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileWriteStream
Ch	dnn/contrib/rapidjson/memorybuffer.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:GenericMemoryBuffer
Ch	dnn/contrib/rapidjson/memorystream.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:MemoryStream
Ch	dnn/contrib/rapidjson/prettywriter.h	/^    typedef typename Base::Ch Ch;$/;"	t	class:PrettyWriter
Ch	dnn/contrib/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericInsituStringStream
Ch	dnn/contrib/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericStringStream
Ch	dnn/contrib/rapidjson/reader.h	/^        typedef CharType Ch;$/;"	t	class:GenericReader::StackStream
Ch	dnn/contrib/rapidjson/reader.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:BaseReaderHandler
Ch	dnn/contrib/rapidjson/reader.h	/^    typedef typename SourceEncoding::Ch Ch; \/\/!< SourceEncoding character type$/;"	t	class:GenericReader
Ch	dnn/contrib/rapidjson/stringbuffer.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStringBuffer
Ch	dnn/contrib/rapidjson/writer.h	/^    typedef typename SourceEncoding::Ch Ch;$/;"	t	class:Writer
Char	dnn/contrib/spdlog/details/format.h	/^    typedef char Char;  \/\/ For FMT_VARIADIC_CTOR.$/;"	t	class:fmt::SystemError
CharConverter	dnn/contrib/spdlog/details/format.cc	/^    explicit CharConverter(fmt::internal::Arg &arg) : arg_(arg) {}$/;"	f	class:fmt::__anon32::CharConverter
CharConverter	dnn/contrib/spdlog/details/format.cc	/^class CharConverter : public fmt::internal::ArgVisitor<CharConverter, void> {$/;"	c	namespace:fmt::__anon32	file:
CharPtr	dnn/contrib/spdlog/details/format.h	/^    typedef stdext::checked_array_iterator<Char*> CharPtr;$/;"	t	class:fmt::internal::BasicCharTraits
CharPtr	dnn/contrib/spdlog/details/format.h	/^    typedef typename internal::CharTraits<Char>::CharPtr CharPtr;$/;"	t	class:fmt::BasicWriter
CharTraits	dnn/contrib/spdlog/details/format.h	/^class CharTraits<char> : public BasicCharTraits<char> {$/;"	c	namespace:fmt::internal
CharTraits	dnn/contrib/spdlog/details/format.h	/^class CharTraits<wchar_t> : public BasicCharTraits<wchar_t> {$/;"	c	namespace:fmt::internal
CharType	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(CharType (&str)[N]) \/* = delete *\/;$/;"	m	struct:GenericStringRef
CheckWithinHalfULP	dnn/contrib/rapidjson/internal/strtod.h	/^inline int CheckWithinHalfULP(double b, const BigInteger& d, int dExp, bool* adjustToNegative) {$/;"	f	namespace:internal
ChunkHeader	dnn/contrib/rapidjson/allocators.h	/^    struct ChunkHeader {$/;"	s	class:MemoryPoolAllocator
Clear	dnn/contrib/rapidjson/allocators.h	/^    void Clear() {$/;"	f	class:MemoryPoolAllocator
Clear	dnn/contrib/rapidjson/document.h	/^    void Clear() {$/;"	f	class:GenericValue
Clear	dnn/contrib/rapidjson/error/error.h	/^    void Clear() { Set(kParseErrorNone); }$/;"	f	struct:ParseResult
Clear	dnn/contrib/rapidjson/internal/stack.h	/^    void Clear() { stackTop_ = stack_; }$/;"	f	class:internal::Stack
Clear	dnn/contrib/rapidjson/memorybuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	struct:GenericMemoryBuffer
Clear	dnn/contrib/rapidjson/stringbuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	class:GenericStringBuffer
ClearStack	dnn/contrib/rapidjson/document.h	/^    void ClearStack() {$/;"	f	class:GenericDocument
ClearStack	dnn/contrib/rapidjson/reader.h	/^    void ClearStack() { stack_.Clear(); }$/;"	f	class:GenericReader
ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^        explicit ClearStackOnExit(GenericDocument& d) : d_(d) {}$/;"	f	struct:GenericDocument::ClearStackOnExit
ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericDocument
ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^        explicit ClearStackOnExit(GenericReader& r) : r_(r) {}$/;"	f	struct:GenericReader::ClearStackOnExit
ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericReader
ClosurePtr	dnn/util/fast_delegate.h	/^class ClosurePtr : public DelegateMemento {$/;"	c	namespace:fastdelegate::detail
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate0
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate1
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate2
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate3
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate4
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate5
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate6
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate7
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate8
Code	dnn/contrib/rapidjson/error/error.h	/^    ParseErrorCode Code() const { return code_; }$/;"	f	struct:ParseResult
ColonToken	dnn/contrib/rapidjson/reader.h	/^        ColonToken,$/;"	e	enum:GenericReader::Token
Color	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	g	namespace:fmt
CommaToken	dnn/contrib/rapidjson/reader.h	/^        CommaToken,$/;"	e	enum:GenericReader::Token
Compare	dnn/contrib/rapidjson/internal/biginteger.h	/^    int Compare(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
Conditional	dnn/contrib/spdlog/details/format.h	/^    typedef typename Conditional<$/;"	t	struct:fmt::internal::ArgArray
Conditional	dnn/contrib/spdlog/details/format.h	/^struct Conditional {$/;"	s	namespace:fmt::internal
Conditional	dnn/contrib/spdlog/details/format.h	/^struct Conditional<false, T, F> {$/;"	s	namespace:fmt::internal
Conn	dnn/sim/network.h	/^	Conn(SpikeNeuronBase &_neuron, size_t _syn_id) : neuron(_neuron), syn_id(_syn_id) {}$/;"	f	class:dnn::Conn
Conn	dnn/sim/network.h	/^class Conn : public Printable {$/;"	c	namespace:dnn
Connection	dnn/connections/connection.h	/^class Connection : public ConnectionBase {$/;"	c	namespace:dnn
ConnectionBase	dnn/connections/connection.h	/^	ConnectionBase() {}$/;"	f	class:dnn::ConnectionBase
ConnectionBase	dnn/connections/connection.h	/^class ConnectionBase : public SerializableBase {$/;"	c	namespace:dnn
ConnectionRecipe	dnn/connections/connection.h	/^	ConnectionRecipe() : inhibitory(false), amplitude(1.0), exists(false) {}$/;"	f	struct:dnn::ConnectionRecipe
ConnectionRecipe	dnn/connections/connection.h	/^struct ConnectionRecipe {$/;"	s	namespace:dnn
ConstIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator<true,Encoding,Allocator>  ConstIterator;$/;"	t	class:GenericMemberIterator
ConstMemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<true,Encoding,Allocator>::Iterator ConstMemberIterator;  \/\/!< Constant member iterator for iterating in object.$/;"	t	class:GenericValue
ConstValueIterator	dnn/contrib/rapidjson/document.h	/^    typedef const GenericValue* ConstValueIterator; \/\/!< Constant value iterator for iterating in array.$/;"	t	class:GenericValue
Constants	dnn/base/constants.h	/^	Constants(const string& s, OptMods mods = OptMods(), ReadMod mod = FromFile) {$/;"	f	struct:dnn::Constants
Constants	dnn/base/constants.h	/^struct Constants : public Printable {$/;"	s	namespace:dnn
ConvProcessor	spikework/conv.h	/^    ConvProcessor() {}$/;"	f	class:dnn::ConvProcessor
ConvProcessor	spikework/conv.h	/^class ConvProcessor : public IOProcessor {$/;"	c	namespace:dnn
Convert	dnn/util/fast_delegate.h	/^	inline static GenericClass *Convert(X *pthis, XFuncType function_to_bind,$/;"	f	struct:fastdelegate::detail::SimplifyMemFunc
CopyFrom	dnn/contrib/rapidjson/document.h	/^    GenericValue& CopyFrom(const GenericValue<Encoding, SourceAllocator>& rhs, Allocator& allocator) {$/;"	f	class:GenericValue
CopyFrom	dnn/util/fast_delegate.h	/^	inline void CopyFrom (DerivedClass *pParent, const DelegateMemento &right) {$/;"	f	class:fastdelegate::detail::ClosurePtr
CopyFrom	dnn/util/fast_delegate.h	/^	inline void CopyFrom (DerivedClass *pParent, const DelegateMemento &x) {$/;"	f	class:fastdelegate::detail::ClosurePtr
CountDecimalDigit32	dnn/contrib/rapidjson/internal/dtoa.h	/^inline unsigned CountDecimalDigit32(uint32_t n) {$/;"	f	namespace:internal
CrtAllocator	dnn/contrib/rapidjson/allocators.h	/^class CrtAllocator {$/;"	c
CustomValue	dnn/contrib/spdlog/details/format.h	/^    struct CustomValue {$/;"	s	struct:fmt::internal::Value
DEBUG_LEVEL	dnn/util/log/log.h	/^    enum ELogLevel {INFO_LEVEL, DEBUG_LEVEL};$/;"	e	enum:dnn::Log::ELogLevel
DIGITS	dnn/contrib/spdlog/details/format.cc	/^const char fmt::internal::BasicData<T>::DIGITS[] =$/;"	m	class:fmt::internal::BasicData	file:
DIVSCALAR	dnn/contrib/kiss_fft/_kiss_fft_guts.h	73;"	d
DOUBLE	dnn/contrib/spdlog/details/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
D_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class D_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Data	dnn/contrib/rapidjson/document.h	/^    union Data {$/;"	u	class:GenericValue
Dataset	shapelets/dataset.cpp	/^Dataset::Dataset(vector<Ptr<TimeSeries>> &_ts)$/;"	f	class:dnn::shapelets::Dataset
Dataset	shapelets/dataset.h	/^class Dataset {$/;"	c	namespace:dnn::shapelets
Decode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:AutoUTF
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:ASCII
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF16
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF32
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF8
Default	dnn/contrib/rapidjson/reader.h	/^    bool Default() { return true; }$/;"	f	struct:BaseReaderHandler
DefaultVoid	dnn/util/fast_delegate.h	/^typedef const void * DefaultVoid;$/;"	t	namespace:fastdelegate::detail
DefaultVoid	dnn/util/fast_delegate.h	/^typedef void DefaultVoid;$/;"	t	namespace:fastdelegate::detail
DefaultVoidToVoid	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid { typedef T type; };$/;"	s	namespace:fastdelegate::detail
DefaultVoidToVoid	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid<DefaultVoid> {	typedef void type; };$/;"	s	namespace:fastdelegate::detail
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento (const DelegateMemento &right)  :$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento() : m_pthis(0), m_pFunction(0) {};$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento() : m_pthis(0), m_pFunction(0), m_pStaticFunction(0) {};$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^class DelegateMemento {$/;"	c	namespace:fastdelegate
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate0
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate1
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate2
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate3
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate4
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate5
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate6
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate7
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate8
Destroy	dnn/contrib/rapidjson/document.h	/^    void Destroy() {$/;"	f	class:GenericDocument
Destroy	dnn/contrib/rapidjson/internal/stack.h	/^    void Destroy() {$/;"	f	class:internal::Stack
DetectType	dnn/contrib/rapidjson/encodedstream.h	/^    void DetectType() {$/;"	f	class:AutoUTFInputStream
Determ	dnn/act_functions/determ.h	/^class Determ : public ActFunction<DetermC> {$/;"	c	namespace:dnn
DetermC	dnn/act_functions/determ.h	/^    DetermC() : treshold(15.0) {}$/;"	f	struct:dnn::DetermC
DetermC	dnn/act_functions/determ.h	/^struct DetermC : public Serializable<Protos::DetermC> {$/;"	s	namespace:dnn
Difference	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool Difference(const BigInteger& rhs, BigInteger* out) const {$/;"	f	class:internal::BigInteger
DifferenceOfGaussians	dnn/connections/difference_of_gaussians.h	/^class DifferenceOfGaussians : public Connection<DifferenceOfGaussiansC> {$/;"	c	namespace:dnn
DifferenceOfGaussiansC	dnn/connections/difference_of_gaussians.h	/^    DifferenceOfGaussiansC() : a(3.0), b(3.0), r(1), dimension(2), apply_amplitude(true) {}$/;"	f	struct:dnn::DifferenceOfGaussiansC
DifferenceOfGaussiansC	dnn/connections/difference_of_gaussians.h	/^struct DifferenceOfGaussiansC : public Serializable<Protos::DifferenceOfGaussiansC> {$/;"	s	namespace:dnn
DifferenceType	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::difference_type DifferenceType;$/;"	t	class:GenericMemberIterator
DigitGen	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void DigitGen(const DiyFp& W, const DiyFp& Mp, uint64_t delta, char* buffer, int* len, int* K) {$/;"	f	namespace:internal
DisableIf	dnn/contrib/rapidjson/internal/meta.h	/^struct DisableIf : DisableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
DisableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	s	namespace:internal
DisableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct DisableIfCond<true, T> { \/* empty *\/ };$/;"	s	namespace:internal
DistAlgorithm	shapelets/dist.h	/^class DistAlgorithm {$/;"	c	namespace:dnn::shapelets
Distribution	dnn/util/distributions.h	/^class Distribution : public Printable {$/;"	c	namespace:dnn
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp() {}$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp(uint64_t fp, int exp) : f(fp), e(exp) {}$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    explicit DiyFp(double d) {$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^struct DiyFp {$/;"	s	namespace:internal
DnnSimOpts	tools/dnn_sim/dnn_sim.cpp	/^    DnnSimOpts() : jobs(1), precalc(false), Tmax(-1.0) {}$/;"	f	struct:DnnSimOpts
DnnSimOpts	tools/dnn_sim/dnn_sim.cpp	/^struct DnnSimOpts {$/;"	s	file:
Document	dnn/contrib/rapidjson/document.h	/^typedef GenericDocument<UTF8<> > Document;$/;"	t
Double	dnn/contrib/rapidjson/document.h	/^    bool Double(double d) { new (stack_.template Push<ValueType>()) ValueType(d); return true; }$/;"	f	class:GenericDocument
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double() {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double(double d) : d(d) {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double(uint64_t u) : u(u) {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^class Double {$/;"	c	namespace:internal
Double	dnn/contrib/rapidjson/prettywriter.h	/^    bool Double(double d)       { PrettyPrefix(kNumberType); return Base::WriteDouble(d); }$/;"	f	class:PrettyWriter
Double	dnn/contrib/rapidjson/reader.h	/^    bool Double(double) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Double	dnn/contrib/rapidjson/writer.h	/^    bool Double(double d)       { Prefix(kNumberType); return WriteDouble(d); }$/;"	f	class:Writer
DoubleMatrix	dnn/util/matrix.h	/^    DoubleMatrix() : nrow_v(0), ncol_v(0) {$/;"	f	class:dnn::DoubleMatrix
DoubleMatrix	dnn/util/matrix.h	/^    DoubleMatrix(const vector<double> &v) {$/;"	f	class:dnn::DoubleMatrix
DoubleMatrix	dnn/util/matrix.h	/^    DoubleMatrix(size_t _nrow, size_t _ncol) {$/;"	f	class:dnn::DoubleMatrix
DoubleMatrix	dnn/util/matrix.h	/^class DoubleMatrix : public Serializable<Protos::DoubleMatrix> {$/;"	c	namespace:dnn
EInnerProductMode	spikework/gram.h	/^    enum EInnerProductMode { MUL, ACC };$/;"	g	class:dnn::GramProcessor
ELogLevel	dnn/util/log/log.h	/^    enum ELogLevel {INFO_LEVEL, DEBUG_LEVEL};$/;"	g	class:dnn::Log
ERR_INVALID_ARG	dnn/contrib/pbjson/pbjson.hpp	38;"	d
ERR_INVALID_JSON	dnn/contrib/pbjson/pbjson.hpp	41;"	d
ERR_INVALID_PB	dnn/contrib/pbjson/pbjson.hpp	39;"	d
ERR_UNKNOWN_FIELD	dnn/contrib/pbjson/pbjson.hpp	40;"	d
EffectiveSignificandSize	dnn/contrib/rapidjson/internal/ieee754.h	/^    static unsigned EffectiveSignificandSize(int order) {$/;"	f	class:internal::Double
Empty	dnn/contrib/rapidjson/document.h	/^    bool Empty() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size == 0; }$/;"	f	class:GenericValue
Empty	dnn/contrib/rapidjson/internal/stack.h	/^    bool Empty() const { return stackTop_ == stack_; }$/;"	f	class:internal::Stack
EmptySpec	dnn/contrib/spdlog/details/format.h	/^struct EmptySpec {};$/;"	s	namespace:fmt
EmptyState	dnn/weight_normalizations/weight_normalization.h	/^struct EmptyState : public Serializable<Protos::EmptyState> {$/;"	s	namespace:dnn
EnableIf	dnn/contrib/rapidjson/internal/meta.h	/^struct EnableIf : EnableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
EnableIf	dnn/contrib/spdlog/details/format.h	/^struct EnableIf {};$/;"	s	namespace:fmt::internal
EnableIf	dnn/contrib/spdlog/details/format.h	/^struct EnableIf<true, T> {$/;"	s	namespace:fmt::internal
EnableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	s	namespace:internal
EnableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct EnableIfCond<false, T> { \/* empty *\/ };$/;"	s	namespace:internal
Encode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodedInputStream	dnn/contrib/rapidjson/encodedstream.h	/^    EncodedInputStream(InputByteStream& is) : is_(is) { $/;"	f	class:EncodedInputStream
EncodedInputStream	dnn/contrib/rapidjson/encodedstream.h	/^class EncodedInputStream {$/;"	c
EncodedOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^    EncodedOutputStream(OutputByteStream& os, bool putBOM = true) : os_(os) { $/;"	f	class:EncodedOutputStream
EncodedOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^class EncodedOutputStream {$/;"	c
EncodingType	dnn/contrib/rapidjson/document.h	/^    typedef Encoding EncodingType;                  \/\/!< Encoding type from template parameter.$/;"	t	class:GenericValue
End	dnn/contrib/rapidjson/document.h	/^    ConstValueIterator End() const { return const_cast<GenericValue&>(*this).End(); }$/;"	f	class:GenericValue
End	dnn/contrib/rapidjson/document.h	/^    ValueIterator End() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements + data_.a.size; }$/;"	f	class:GenericValue
EndArray	dnn/contrib/rapidjson/document.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericDocument
EndArray	dnn/contrib/rapidjson/prettywriter.h	/^    bool EndArray(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndArray	dnn/contrib/rapidjson/reader.h	/^    bool EndArray(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndArray	dnn/contrib/rapidjson/writer.h	/^    bool EndArray(SizeType elementCount = 0) {$/;"	f	class:Writer
EndMarker	dnn/io/serialize.h	/^    enum EndMarker { end };$/;"	g	class:dnn::SerializableBase
EndObject	dnn/contrib/rapidjson/document.h	/^    bool EndObject(SizeType memberCount) {$/;"	f	class:GenericDocument
EndObject	dnn/contrib/rapidjson/prettywriter.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndObject	dnn/contrib/rapidjson/reader.h	/^    bool EndObject(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndObject	dnn/contrib/rapidjson/writer.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:Writer
EpspKernel	spikework/kernel.h	/^class EpspKernel : public Kernel {$/;"	c	namespace:dnn
Erase	dnn/contrib/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) {$/;"	f	class:GenericValue
Erase	dnn/contrib/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) {$/;"	f	class:GenericValue
EraseMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {$/;"	f	class:GenericValue
EraseMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) {$/;"	f	class:GenericValue
ExpDistribution	dnn/util/distributions.h	/^    ExpDistribution(double _gain, double _rate) : gain(_gain), rate(_rate) {}$/;"	f	class:dnn::ExpDistribution
ExpDistribution	dnn/util/distributions.h	/^class ExpDistribution : public Distribution<double> {$/;"	c	namespace:dnn
ExpThreshold	dnn/act_functions/exp_threshold.h	/^class ExpThreshold : public ActFunction<ExpThresholdC> {$/;"	c	namespace:dnn
ExpThresholdC	dnn/act_functions/exp_threshold.h	/^    ExpThresholdC() $/;"	f	struct:dnn::ExpThresholdC
ExpThresholdC	dnn/act_functions/exp_threshold.h	/^struct ExpThresholdC : public Serializable<Protos::ExpThresholdC> {$/;"	s	namespace:dnn
Expand	dnn/contrib/rapidjson/internal/stack.h	/^    void Expand(size_t count) {$/;"	f	class:internal::Stack
Exponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    int Exponent() const { return ((u & kExponentMask) >> kSignificandSize) - kExponentBias; }$/;"	f	class:internal::Double
FASTDELEGATEBIND_H	dnn/util/fast_delegate_bind.h	19;"	d
FASTDELEGATEDECLARE	dnn/util/fast_delegate.h	191;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	105;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	110;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	115;"	d
FASTDELEGATE_GCC_BUG_8271	dnn/util/fast_delegate.h	120;"	d
FASTDELEGATE_H	dnn/util/fast_delegate.h	49;"	d
FASTDELEGATE_USESTATICFUNCTIONHACK	dnn/util/fast_delegate.h	195;"	d
FASTDELEGATE_USESTATICFUNCTIONHACK	dnn/util/fast_delegate.h	67;"	d
FASTDLGT_HASINHERITANCE_KEYWORDS	dnn/util/fast_delegate.h	99;"	d
FASTDLGT_ISMSVC	dnn/util/fast_delegate.h	81;"	d
FASTDLGT_MICROSOFT_MFP	dnn/util/fast_delegate.h	95;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	1997;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	1999;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	2103;"	d
FASTDLGT_VC6	dnn/util/fast_delegate.h	84;"	d
FFTProcessor	spikework/fft.h	/^    FFTProcessor(bool _inverse = false) : inverse(_inverse) {}$/;"	f	class:dnn::FFTProcessor
FFTProcessor	spikework/fft.h	/^class FFTProcessor : public IOProcessor {$/;"	c	namespace:dnn
FMT_ADD_ARG_NAME	dnn/contrib/spdlog/details/format.h	3036;"	d
FMT_ARG_N	dnn/contrib/spdlog/details/format.h	3027;"	d
FMT_ASSERT	dnn/contrib/spdlog/details/format.h	183;"	d
FMT_BUILTIN_CLZ	dnn/contrib/spdlog/details/format.h	61;"	d
FMT_BUILTIN_CLZ	dnn/contrib/spdlog/details/format.h	721;"	d
FMT_BUILTIN_CLZLL	dnn/contrib/spdlog/details/format.h	725;"	d
FMT_BUILTIN_CLZLL	dnn/contrib/spdlog/details/format.h	81;"	d
FMT_CAPTURE	dnn/contrib/spdlog/details/format.h	3132;"	d
FMT_CAPTURE_ARG_	dnn/contrib/spdlog/details/format.h	3114;"	d
FMT_CAPTURE_ARG_W_	dnn/contrib/spdlog/details/format.h	3116;"	d
FMT_CAPTURE_W	dnn/contrib/spdlog/details/format.h	3134;"	d
FMT_CATCH	dnn/contrib/spdlog/details/format.cc	67;"	d	file:
FMT_CONCAT	dnn/contrib/spdlog/details/format.h	3030;"	d
FMT_CONVERTIBLE_TO_INT	dnn/contrib/spdlog/details/format.h	934;"	d
FMT_DEFINE_INT_FORMATTERS	dnn/contrib/spdlog/details/format.h	1617;"	d
FMT_DELETED_OR_UNDEFINED	dnn/contrib/spdlog/details/format.h	/^void arg(StringRef, const internal::NamedArg<Char>&) FMT_DELETED_OR_UNDEFINED;$/;"	m	namespace:fmt
FMT_DELETED_OR_UNDEFINED	dnn/contrib/spdlog/details/format.h	/^void arg(WStringRef, const internal::NamedArg<Char>&) FMT_DELETED_OR_UNDEFINED;$/;"	m	namespace:fmt
FMT_DELETED_OR_UNDEFINED	dnn/contrib/spdlog/details/format.h	171;"	d
FMT_DISALLOW_COPY_AND_ASSIGN	dnn/contrib/spdlog/details/format.h	172;"	d
FMT_DISPATCH	dnn/contrib/spdlog/details/format.h	1136;"	d
FMT_EXCEPTIONS	dnn/contrib/spdlog/details/format.cc	56;"	d	file:
FMT_EXCEPTIONS	dnn/contrib/spdlog/details/format.cc	59;"	d	file:
FMT_EXCEPTIONS	dnn/contrib/spdlog/details/format.cc	62;"	d	file:
FMT_EXPAND	dnn/contrib/spdlog/details/format.h	3021;"	d
FMT_FORMAT_H_	dnn/contrib/spdlog/details/format.h	29;"	d
FMT_FOR_EACH	dnn/contrib/spdlog/details/format.h	3033;"	d
FMT_FOR_EACH1	dnn/contrib/spdlog/details/format.h	1876;"	d
FMT_FOR_EACH10	dnn/contrib/spdlog/details/format.h	1893;"	d
FMT_FOR_EACH2	dnn/contrib/spdlog/details/format.h	1877;"	d
FMT_FOR_EACH3	dnn/contrib/spdlog/details/format.h	1879;"	d
FMT_FOR_EACH4	dnn/contrib/spdlog/details/format.h	1881;"	d
FMT_FOR_EACH5	dnn/contrib/spdlog/details/format.h	1883;"	d
FMT_FOR_EACH6	dnn/contrib/spdlog/details/format.h	1885;"	d
FMT_FOR_EACH7	dnn/contrib/spdlog/details/format.h	1887;"	d
FMT_FOR_EACH8	dnn/contrib/spdlog/details/format.h	1889;"	d
FMT_FOR_EACH9	dnn/contrib/spdlog/details/format.h	1891;"	d
FMT_FOR_EACH_	dnn/contrib/spdlog/details/format.h	3031;"	d
FMT_FUNC	dnn/contrib/spdlog/details/format.cc	82;"	d	file:
FMT_GCC_EXTENSION	dnn/contrib/spdlog/details/format.h	88;"	d
FMT_GCC_VERSION	dnn/contrib/spdlog/details/format.h	87;"	d
FMT_GEN	dnn/contrib/spdlog/details/format.h	1698;"	d
FMT_GEN1	dnn/contrib/spdlog/details/format.h	1699;"	d
FMT_GEN10	dnn/contrib/spdlog/details/format.h	1708;"	d
FMT_GEN11	dnn/contrib/spdlog/details/format.h	1709;"	d
FMT_GEN12	dnn/contrib/spdlog/details/format.h	1710;"	d
FMT_GEN13	dnn/contrib/spdlog/details/format.h	1711;"	d
FMT_GEN14	dnn/contrib/spdlog/details/format.h	1712;"	d
FMT_GEN15	dnn/contrib/spdlog/details/format.h	1713;"	d
FMT_GEN2	dnn/contrib/spdlog/details/format.h	1700;"	d
FMT_GEN3	dnn/contrib/spdlog/details/format.h	1701;"	d
FMT_GEN4	dnn/contrib/spdlog/details/format.h	1702;"	d
FMT_GEN5	dnn/contrib/spdlog/details/format.h	1703;"	d
FMT_GEN6	dnn/contrib/spdlog/details/format.h	1704;"	d
FMT_GEN7	dnn/contrib/spdlog/details/format.h	1705;"	d
FMT_GEN8	dnn/contrib/spdlog/details/format.h	1706;"	d
FMT_GEN9	dnn/contrib/spdlog/details/format.h	1707;"	d
FMT_GET_ARG_NAME	dnn/contrib/spdlog/details/format.h	3037;"	d
FMT_GNUC_LIBSTD_VERSION	dnn/contrib/spdlog/details/format.h	111;"	d
FMT_HAS_BUILTIN	dnn/contrib/spdlog/details/format.h	121;"	d
FMT_HAS_CPP_ATTRIBUTE	dnn/contrib/spdlog/details/format.h	127;"	d
FMT_HAS_FEATURE	dnn/contrib/spdlog/details/format.h	115;"	d
FMT_HAS_GXX_CXX11	dnn/contrib/spdlog/details/format.h	99;"	d
FMT_HEADER_ONLY	dnn/contrib/spdlog/details/format.h	31;"	d
FMT_MAKE_ARG	dnn/contrib/spdlog/details/format.h	1807;"	d
FMT_MAKE_ARG_TYPE	dnn/contrib/spdlog/details/format.h	1806;"	d
FMT_MAKE_REF_char	dnn/contrib/spdlog/details/format.h	1808;"	d
FMT_MAKE_REF_wchar_t	dnn/contrib/spdlog/details/format.h	1809;"	d
FMT_MAKE_STR_VALUE	dnn/contrib/spdlog/details/format.h	1068;"	d
FMT_MAKE_TEMPLATE_ARG	dnn/contrib/spdlog/details/format.h	1805;"	d
FMT_MAKE_VALUE	dnn/contrib/spdlog/details/format.h	1020;"	d
FMT_MAKE_VALUE_	dnn/contrib/spdlog/details/format.h	1016;"	d
FMT_MAKE_WSTR_VALUE	dnn/contrib/spdlog/details/format.h	1080;"	d
FMT_NARG	dnn/contrib/spdlog/details/format.h	3025;"	d
FMT_NARG_	dnn/contrib/spdlog/details/format.h	3026;"	d
FMT_NOEXCEPT	dnn/contrib/spdlog/details/format.h	/^                          fmt::StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt::internal
FMT_NOEXCEPT	dnn/contrib/spdlog/details/format.h	/^                         fmt::StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt::internal
FMT_NOEXCEPT	dnn/contrib/spdlog/details/format.h	/^void report_system_error(int error_code, StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt
FMT_NOEXCEPT	dnn/contrib/spdlog/details/format.h	/^void report_windows_error(int error_code, StringRef message) FMT_NOEXCEPT;$/;"	m	namespace:fmt
FMT_NOEXCEPT	dnn/contrib/spdlog/details/format.h	161;"	d
FMT_POWERS_OF_10	dnn/contrib/spdlog/details/format.cc	595;"	d	file:
FMT_RSEQ_N	dnn/contrib/spdlog/details/format.h	3028;"	d
FMT_SNPRINTF	dnn/contrib/spdlog/details/format.cc	109;"	d	file:
FMT_SPECIALIZE_MAKE_UNSIGNED	dnn/contrib/spdlog/details/format.h	696;"	d
FMT_SWPRINTF	dnn/contrib/spdlog/details/format.cc	122;"	d	file:
FMT_THROW	dnn/contrib/spdlog/details/format.cc	75;"	d	file:
FMT_TRY	dnn/contrib/spdlog/details/format.cc	66;"	d	file:
FMT_USE_RVALUE_REFERENCES	dnn/contrib/spdlog/details/format.h	145;"	d
FMT_USE_VARIADIC_TEMPLATES	dnn/contrib/spdlog/details/format.h	136;"	d
FMT_USE_WINDOWS_H	dnn/contrib/spdlog/details/format.h	787;"	d
FMT_USE_WINDOWS_H	dnn/contrib/spdlog/details/format.h	789;"	d
FMT_VARIADIC	dnn/contrib/spdlog/details/format.h	3108;"	d
FMT_VARIADIC_	dnn/contrib/spdlog/details/format.h	3040;"	d
FMT_VARIADIC_CTOR	dnn/contrib/spdlog/details/format.h	1821;"	d
FMT_VARIADIC_VOID	dnn/contrib/spdlog/details/format.h	1813;"	d
FMT_VARIADIC_W	dnn/contrib/spdlog/details/format.h	3111;"	d
FRACBITS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	46;"	d
FRACBITS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	50;"	d
Factory	dnn/base/factory.cpp	/^Factory::Factory() : registration_is_on(true) {$/;"	f	class:dnn::Factory
Factory	dnn/base/factory.h	/^class Factory {$/;"	c	namespace:dnn
FalseToken	dnn/contrib/rapidjson/reader.h	/^        FalseToken,$/;"	e	enum:GenericReader::Token
FalseType	dnn/contrib/rapidjson/internal/meta.h	/^typedef BoolType<false> FalseType;$/;"	t	namespace:internal
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate() : BaseType() { }$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)(  ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(Y * pthis,$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(const Y *pthis,$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R (  ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6, Param7 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8 ) >$/;"	c	namespace:fastdelegate
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0() { clear(); }$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(DesiredRetType (*function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(Y *pthis, DesiredRetType (X::* function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(const FastDelegate0 &x) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(const Y *pthis, DesiredRetType (X::* function_to_bind)() const) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^class FastDelegate0 {$/;"	c	namespace:fastdelegate
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1() { clear(); }$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(DesiredRetType (*function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(const FastDelegate1 &x) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) const) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^class FastDelegate1 {$/;"	c	namespace:fastdelegate
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2() { clear(); }$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(const FastDelegate2 &x) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) const) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^class FastDelegate2 {$/;"	c	namespace:fastdelegate
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3() { clear(); }$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(const FastDelegate3 &x) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^class FastDelegate3 {$/;"	c	namespace:fastdelegate
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4() { clear(); }$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(const FastDelegate4 &x) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^class FastDelegate4 {$/;"	c	namespace:fastdelegate
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5() { clear(); }$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(const FastDelegate5 &x) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^class FastDelegate5 {$/;"	c	namespace:fastdelegate
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6() { clear(); }$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(const FastDelegate6 &x) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^class FastDelegate6 {$/;"	c	namespace:fastdelegate
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7() { clear(); }$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(const FastDelegate7 &x) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^class FastDelegate7 {$/;"	c	namespace:fastdelegate
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8() { clear(); }$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(const FastDelegate8 &x) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^class FastDelegate8 {$/;"	c	namespace:fastdelegate
FastPath	dnn/contrib/rapidjson/internal/strtod.h	/^inline double FastPath(double significand, int exp) {$/;"	f	namespace:internal
FileReadStream	dnn/contrib/rapidjson/filereadstream.h	/^    FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false) { $/;"	f	class:FileReadStream
FileReadStream	dnn/contrib/rapidjson/filereadstream.h	/^class FileReadStream {$/;"	c
FileStream	dnn/contrib/rapidjson/filestream.h	/^    FileStream(std::FILE* fp) : fp_(fp), current_('\\0'), count_(0) { Read(); }$/;"	f	class:FileStream
FileStream	dnn/contrib/rapidjson/filestream.h	/^class FileStream {$/;"	c
FileWriteStream	dnn/contrib/rapidjson/filewritestream.h	/^    FileWriteStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferEnd_(buffer + bufferSize), current_(buffer_) { $/;"	f	class:FileWriteStream
FileWriteStream	dnn/contrib/rapidjson/filewritestream.h	/^class FileWriteStream {$/;"	c
FilterMatch	mpl/mpl.h	/^	FilterMatch() : fi(0), s(0.0), t(0) {}$/;"	f	struct:dnn::mpl::FilterMatch
FilterMatch	mpl/mpl.h	/^	FilterMatch(size_t _fi, double _s, double _t) : fi(_fi), s(_s), t(_t) {}$/;"	f	struct:dnn::mpl::FilterMatch
FilterMatch	mpl/mpl.h	/^struct FilterMatch : public Serializable<Protos::FilterMatch>  {$/;"	s	namespace:dnn::mpl
FindMember	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator FindMember(const Ch* name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) {$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    template <typename SourceAllocator> ConstMemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FixedBuffer	dnn/contrib/spdlog/details/format.h	/^    FixedBuffer(Char *array, std::size_t size) : fmt::Buffer<Char>(array, size) {}$/;"	f	class:fmt::internal::FixedBuffer
FixedBuffer	dnn/contrib/spdlog/details/format.h	/^class FixedBuffer : public fmt::Buffer<Char> {$/;"	c	namespace:fmt::internal
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:AutoUTFInputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:EncodedInputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { os_->Flush(); } $/;"	f	class:AutoUTFOutputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { os_.Flush(); }$/;"	f	class:EncodedOutputStream
Flush	dnn/contrib/rapidjson/filereadstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:FileReadStream
Flush	dnn/contrib/rapidjson/filestream.h	/^    void Flush() { fflush(fp_); }$/;"	f	class:FileStream
Flush	dnn/contrib/rapidjson/filewritestream.h	/^    void Flush() {$/;"	f	class:FileWriteStream
Flush	dnn/contrib/rapidjson/memorybuffer.h	/^    void Flush() {}$/;"	f	struct:GenericMemoryBuffer
Flush	dnn/contrib/rapidjson/memorystream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Flush	dnn/contrib/rapidjson/rapidjson.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Flush	dnn/contrib/rapidjson/rapidjson.h	/^    void Flush() {}$/;"	f	struct:GenericInsituStringStream
Flush	dnn/contrib/rapidjson/stringbuffer.h	/^    void Flush() {}$/;"	f	class:GenericStringBuffer
FormatError	dnn/contrib/spdlog/details/format.h	/^    explicit FormatError(CStringRef message)$/;"	f	class:fmt::FormatError
FormatError	dnn/contrib/spdlog/details/format.h	/^class FormatError : public std::runtime_error {$/;"	c	namespace:fmt
FormatFunc	dnn/contrib/spdlog/details/format.cc	/^typedef void(*FormatFunc)(fmt::Writer &, int, fmt::StringRef);$/;"	t	namespace:fmt::__anon32	file:
FormatFunc	dnn/contrib/spdlog/details/format.h	/^    typedef void(*FormatFunc)($/;"	t	struct:fmt::internal::Value
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(LongLong value) {$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(ULongLong value) : str_(format_decimal(value)) {}$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(int value) {$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(long value) {$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(unsigned long value) : str_(format_decimal(value)) {}$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^    explicit FormatInt(unsigned value) : str_(format_decimal(value)) {}$/;"	f	class:fmt::FormatInt
FormatInt	dnn/contrib/spdlog/details/format.h	/^class FormatInt {$/;"	c	namespace:fmt
FormatSigned	dnn/contrib/spdlog/details/format.h	/^    void FormatSigned(LongLong value) {$/;"	f	class:fmt::FormatInt
FormatSpec	dnn/contrib/spdlog/details/format.h	/^    FormatSpec($/;"	f	struct:fmt::FormatSpec
FormatSpec	dnn/contrib/spdlog/details/format.h	/^struct FormatSpec : AlignSpec {$/;"	s	namespace:fmt
FormatterBase	dnn/contrib/spdlog/details/format.h	/^class FormatterBase {$/;"	c	namespace:fmt::internal
Free	dnn/contrib/rapidjson/allocators.h	/^    static void Free(void *ptr) { (void)ptr; } \/\/ Do nothing$/;"	f	class:MemoryPoolAllocator
Free	dnn/contrib/rapidjson/allocators.h	/^    static void Free(void *ptr) { std::free(ptr); }$/;"	f	class:CrtAllocator
FromFile	dnn/base/constants.h	/^	enum ReadMod {FromString, FromFile};$/;"	e	enum:dnn::Constants::ReadMod
FromString	dnn/base/constants.h	/^	enum ReadMod {FromString, FromFile};$/;"	e	enum:dnn::Constants::ReadMod
FullAdd	dnn/contrib/rapidjson/internal/biginteger.h	/^    static Type FullAdd(Type a, Type b, bool inCarry, bool* outCarry) {$/;"	f	class:internal::BigInteger
GREEN	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
GenericClass	dnn/util/fast_delegate.h	/^	class GenericClass {};$/;"	c	namespace:fastdelegate::detail
GenericClass	dnn/util/fast_delegate.h	/^	class __single_inheritance GenericClass;$/;"	m	namespace:fastdelegate::detail	typeref:class:fastdelegate::detail::__single_inheritance
GenericDocument	dnn/contrib/rapidjson/document.h	/^    GenericDocument(Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) : $/;"	f	class:GenericDocument
GenericDocument	dnn/contrib/rapidjson/document.h	/^class GenericDocument : public GenericValue<Encoding, Allocator> {$/;"	c
GenericFuncPtr	dnn/util/fast_delegate.h	/^	typedef void (*GenericFuncPtr)(); \/\/ arbitrary code pointer$/;"	t	class:fastdelegate::DelegateMemento
GenericInsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^    GenericInsituStringStream(Ch *src) : src_(src), dst_(0), head_(src) {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^struct GenericInsituStringStream {$/;"	s
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)();$/;"	t	class:fastdelegate::FastDelegate0
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
GenericMemFuncType	dnn/util/fast_delegate.h	/^	typedef void (detail::GenericClass::*GenericMemFuncType)(); \/\/ arbitrary MFP.$/;"	t	class:fastdelegate::DelegateMemento
GenericMember	dnn/contrib/rapidjson/document.h	/^struct GenericMember { $/;"	s
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    GenericMemberIterator() : ptr_() {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    GenericMemberIterator(const NonConstIterator & it) : ptr_(it.ptr_) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    explicit GenericMemberIterator(Pointer p) : ptr_(p) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^class GenericMemberIterator$/;"	c
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^struct GenericMemberIterator<false,Encoding,Allocator> {$/;"	s
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^struct GenericMemberIterator<true,Encoding,Allocator> {$/;"	s
GenericMemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^    GenericMemoryBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^struct GenericMemoryBuffer {$/;"	s
GenericReader	dnn/contrib/rapidjson/reader.h	/^    GenericReader(StackAllocator* stackAllocator = 0, size_t stackCapacity = kDefaultStackCapacity) : stack_(stackAllocator, stackCapacity), parseResult_() {}$/;"	f	class:GenericReader
GenericReader	dnn/contrib/rapidjson/reader.h	/^class GenericReader {$/;"	c
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer(GenericStringBuffer&& rhs) : stack_(std::move(rhs.stack_)) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^class GenericStringBuffer {$/;"	c
GenericStringRef	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(const CharType* str, SizeType len)$/;"	f	struct:GenericStringRef
GenericStringRef	dnn/contrib/rapidjson/document.h	/^    explicit GenericStringRef(const CharType* str)$/;"	f	struct:GenericStringRef
GenericStringRef	dnn/contrib/rapidjson/document.h	/^struct GenericStringRef {$/;"	s
GenericStringStream	dnn/contrib/rapidjson/rapidjson.h	/^    GenericStringStream(const Ch *src) : src_(src), head_(src) {}$/;"	f	struct:GenericStringStream
GenericStringStream	dnn/contrib/rapidjson/rapidjson.h	/^struct GenericStringStream {$/;"	s
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch*s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const std::basic_string<Ch>& s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^GenericValue<Encoding,Allocator>::GenericValue(const GenericValue<Encoding,SourceAllocator>& rhs, Allocator& allocator)$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^class GenericValue {$/;"	c
GenericVirtualClass	dnn/util/fast_delegate.h	/^struct GenericVirtualClass : virtual public GenericClass$/;"	s	namespace:fastdelegate::detail
GetAllocator	dnn/contrib/rapidjson/document.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:GenericDocument
GetAllocator	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:internal::Stack
GetBool	dnn/contrib/rapidjson/document.h	/^    bool GetBool() const { RAPIDJSON_ASSERT(IsBool()); return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
GetBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^    const Ch* GetBuffer() const {$/;"	f	struct:GenericMemoryBuffer
GetCachedPower	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower(int e, int* K) {$/;"	f	namespace:internal
GetCachedPower10	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower10(int exp, int *outExp) {$/;"	f	namespace:internal
GetCachedPowerByIndex	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPowerByIndex(size_t index) {$/;"	f	namespace:internal
GetCapacity	dnn/contrib/rapidjson/internal/stack.h	/^    size_t GetCapacity() const { return static_cast<size_t>(stackEnd_ - stack_); }$/;"	f	class:internal::Stack
GetClosureMemPtr	dnn/util/fast_delegate.h	/^	inline GenericMemFunc GetClosureMemPtr() const { return reinterpret_cast<GenericMemFunc>(m_pFunction); }$/;"	f	class:fastdelegate::detail::ClosurePtr
GetClosureThis	dnn/util/fast_delegate.h	/^	inline GenericClass *GetClosureThis() const { return m_pthis; }$/;"	f	class:fastdelegate::detail::ClosurePtr
GetCount	dnn/contrib/rapidjson/internal/biginteger.h	/^    size_t GetCount() const { return count_; }$/;"	f	class:internal::BigInteger
GetDigit	dnn/contrib/rapidjson/internal/biginteger.h	/^    Type GetDigit(size_t index) const { RAPIDJSON_ASSERT(index < count_); return digits_[index]; }$/;"	f	class:internal::BigInteger
GetDigitsLut	dnn/contrib/rapidjson/internal/itoa.h	/^inline const char* GetDigitsLut() {$/;"	f	namespace:internal
GetDouble	dnn/contrib/rapidjson/document.h	/^    double GetDouble() const {$/;"	f	class:GenericValue
GetErrorOffset	dnn/contrib/rapidjson/document.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericDocument
GetErrorOffset	dnn/contrib/rapidjson/reader.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericReader
GetInt	dnn/contrib/rapidjson/document.h	/^    int GetInt() const          { RAPIDJSON_ASSERT(flags_ & kIntFlag);   return data_.n.i.i;   }$/;"	f	class:GenericValue
GetInt64	dnn/contrib/rapidjson/document.h	/^    int64_t GetInt64() const    { RAPIDJSON_ASSERT(flags_ & kInt64Flag); return data_.n.i64; }$/;"	f	class:GenericValue
GetLength	dnn/contrib/rapidjson/document.h	/^        inline SizeType GetLength() const       { return  (SizeType)(MaxSize -  str[LenPos]); }$/;"	f	struct:GenericValue::ShortString
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate0
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate1
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate2
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate3
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate4
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate5
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate6
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate7
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate8
GetParseError	dnn/contrib/rapidjson/document.h	/^    ParseErrorCode GetParseError() const { return parseResult_.Code(); }$/;"	f	class:GenericDocument
GetParseErrorCode	dnn/contrib/rapidjson/reader.h	/^    ParseErrorCode GetParseErrorCode() const { return parseResult_.Code(); }$/;"	f	class:GenericReader
GetParseErrorFunc	dnn/contrib/rapidjson/error/error.h	/^typedef const RAPIDJSON_ERROR_CHARTYPE* (*GetParseErrorFunc)(ParseErrorCode);$/;"	t
GetParseError_En	dnn/contrib/rapidjson/error/en.h	/^inline const RAPIDJSON_ERROR_CHARTYPE* GetParseError_En(ParseErrorCode parseErrorCode) {$/;"	f
GetRange	dnn/contrib/rapidjson/encodings.h	/^    static unsigned char GetRange(unsigned char c) {$/;"	f	struct:UTF8
GetSize	dnn/contrib/rapidjson/internal/stack.h	/^    size_t GetSize() const { return static_cast<size_t>(stackTop_ - stack_); }$/;"	f	class:internal::Stack
GetSize	dnn/contrib/rapidjson/memorybuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	struct:GenericMemoryBuffer
GetSize	dnn/contrib/rapidjson/stringbuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	class:GenericStringBuffer
GetStackCapacity	dnn/contrib/rapidjson/document.h	/^    size_t GetStackCapacity() const { return stack_.GetCapacity(); }$/;"	f	class:GenericDocument
GetStaticFunction	dnn/util/fast_delegate.h	/^	inline UnvoidStaticFuncPtr GetStaticFunction() const {$/;"	f	class:fastdelegate::detail::ClosurePtr
GetString	dnn/contrib/rapidjson/document.h	/^    const Ch* GetString() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? data_.ss.str : data_.s.str); }$/;"	f	class:GenericValue
GetString	dnn/contrib/rapidjson/stringbuffer.h	/^    const Ch* GetString() const {$/;"	f	class:GenericStringBuffer
GetStringLength	dnn/contrib/rapidjson/document.h	/^    SizeType GetStringLength() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? (data_.ss.GetLength()) : data_.s.length); }$/;"	f	class:GenericValue
GetThis	dnn/util/fast_delegate.h	/^	GenericVirtualClass * GetThis() { return this; }$/;"	f	struct:fastdelegate::detail::GenericVirtualClass
GetType	dnn/contrib/rapidjson/document.h	/^    Type GetType()  const { return static_cast<Type>(flags_ & kTypeMask); }$/;"	f	class:GenericValue
GetType	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFInputStream
GetType	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFOutputStream
GetUint	dnn/contrib/rapidjson/document.h	/^    unsigned GetUint() const    { RAPIDJSON_ASSERT(flags_ & kUintFlag);  return data_.n.u.u;   }$/;"	f	class:GenericValue
GetUint64	dnn/contrib/rapidjson/document.h	/^    uint64_t GetUint64() const  { RAPIDJSON_ASSERT(flags_ & kUint64Flag); return data_.n.u64; }$/;"	f	class:GenericValue
GlobalCtx	dnn/sim/global_ctx.h	/^	GlobalCtx() {}$/;"	f	class:dnn::GlobalCtx
GlobalCtx	dnn/sim/global_ctx.h	/^class GlobalCtx {$/;"	c	namespace:dnn
GramProcessor	spikework/gram.h	/^    GramProcessor() : text(false) {}$/;"	f	class:dnn::GramProcessor
GramProcessor	spikework/gram.h	/^class GramProcessor : public IOProcessor {$/;"	c	namespace:dnn
Grisu2	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void Grisu2(double value, char* buffer, int* length, int* K) {$/;"	f	namespace:internal
GrisuRound	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void GrisuRound(char* buffer, int len, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t wp_w) {$/;"	f	namespace:internal
HALF_OF	dnn/contrib/kiss_fft/_kiss_fft_guts.h	130;"	d
HALF_OF	dnn/contrib/kiss_fft/_kiss_fft_guts.h	134;"	d
HALF_OF	dnn/contrib/kiss_fft/_kiss_fft_guts.h	138;"	d
HALF_OF	dnn/contrib/kiss_fft/kissfft.hh	/^        scalar_type HALF_OF( const scalar_type & a) { return a*.5;}$/;"	f	class:kissfft
HASH_FLAG	dnn/contrib/spdlog/details/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
H_PRETTY_PRINT	dnn/util/pretty_print.h	12;"	d
H_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class H_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
HandleError	dnn/contrib/rapidjson/reader.h	/^    void HandleError(IterativeParsingState src, InputStream& is) {$/;"	f	class:GenericReader
HasBOM	dnn/contrib/rapidjson/encodedstream.h	/^    bool HasBOM() const { return hasBOM_; }$/;"	f	class:AutoUTFInputStream
HasMember	dnn/contrib/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	dnn/contrib/rapidjson/document.h	/^    bool HasMember(const GenericValue<Encoding, SourceAllocator>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasParseError	dnn/contrib/rapidjson/document.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericDocument
HasParseError	dnn/contrib/rapidjson/reader.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericReader
Host	dnn/contrib/rapidjson/internal/meta.h	/^    struct Host {$/;"	s	struct:internal::IsBaseOfImpl
I	dnn/contrib/rapidjson/document.h	/^        struct I {$/;"	s	union:GenericValue::Number
INFO_LEVEL	dnn/util/log/log.h	/^    enum ELogLevel {INFO_LEVEL, DEBUG_LEVEL};$/;"	e	enum:dnn::Log::ELogLevel
INLINE_BUFFER_SIZE	dnn/contrib/spdlog/details/format.h	/^enum { INLINE_BUFFER_SIZE = 500 };$/;"	e	enum:fmt::internal::__anon24
INT	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	273;"	d
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	51;"	d
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	62;"	d
INT16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	177;"	d
INT16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	176;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	274;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	52;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	63;"	d
INT32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	179;"	d
INT32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	178;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	275;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	53;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	64;"	d
INT64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	181;"	d
INT64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	180;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	272;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	50;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	61;"	d
INT8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	175;"	d
INT8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	174;"	d
INTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	286;"	d
INTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	75;"	d
INTMAX_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	228;"	d
INTMAX_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	227;"	d
INTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	218;"	d
INTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	222;"	d
INTPTR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	217;"	d
INTPTR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	221;"	d
INT_FAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	205;"	d
INT_FAST16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	204;"	d
INT_FAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	207;"	d
INT_FAST32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	206;"	d
INT_FAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	209;"	d
INT_FAST64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	208;"	d
INT_FAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	203;"	d
INT_FAST8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	202;"	d
INT_LEAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	191;"	d
INT_LEAST16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	190;"	d
INT_LEAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	193;"	d
INT_LEAST32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	192;"	d
INT_LEAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	195;"	d
INT_LEAST64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	194;"	d
INT_LEAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	189;"	d
INT_LEAST8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	188;"	d
IOProcessor	spikework/io_processor.h	/^	IOProcessor() : tee(false), dt(1.0) {}$/;"	f	class:dnn::IOProcessor
IOProcessor	spikework/io_processor.h	/^class IOProcessor : public Processor {$/;"	c	namespace:dnn
I_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class I_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
IndexSlice	dnn/util/util.h	/^    IndexSlice(size_t _from, size_t _to) : from(_from), to(_to) {}$/;"	f	struct:dnn::IndexSlice
IndexSlice	dnn/util/util.h	/^struct IndexSlice {$/;"	s	namespace:dnn
Input	dnn/inputs/input.h	/^class Input : public InputBase {$/;"	c	namespace:dnn
InputBase	dnn/inputs/input.h	/^class InputBase : public SerializableBase {$/;"	c	namespace:dnn
InputInterface	dnn/inputs/input.h	/^struct InputInterface {$/;"	s	namespace:dnn
InputTimeSeries	dnn/inputs/input_time_series.h	/^class InputTimeSeries : public Input<InputTimeSeriesC, InputTimeSeriesState> {$/;"	c	namespace:dnn
InputTimeSeriesC	dnn/inputs/input_time_series.h	/^    InputTimeSeriesC() : dt(1.0) {}$/;"	f	struct:dnn::InputTimeSeriesC
InputTimeSeriesC	dnn/inputs/input_time_series.h	/^struct InputTimeSeriesC : public Serializable<Protos::InputTimeSeriesC> {$/;"	s	namespace:dnn
InputTimeSeriesState	dnn/inputs/input_time_series.h	/^    InputTimeSeriesState() : index(0), _t(0) {}$/;"	f	struct:dnn::InputTimeSeriesState
InputTimeSeriesState	dnn/inputs/input_time_series.h	/^struct InputTimeSeriesState : public Serializable<Protos::InputTimeSeriesState> {$/;"	s	namespace:dnn
InsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^typedef GenericInsituStringStream<UTF8<> > InsituStringStream;$/;"	t
Int	dnn/contrib/rapidjson/document.h	/^    bool Int(int i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int	dnn/contrib/rapidjson/prettywriter.h	/^    bool Int(int i)             { PrettyPrefix(kNumberType); return Base::WriteInt(i); }$/;"	f	class:PrettyWriter
Int	dnn/contrib/rapidjson/reader.h	/^    bool Int(int) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int	dnn/contrib/rapidjson/writer.h	/^    bool Int(int i)             { Prefix(kNumberType); return WriteInt(i); }$/;"	f	class:Writer
Int	dnn/util/pretty_print.h	/^        template <std::size_t I> struct Int { };$/;"	s	struct:pretty_print::print_container_helper::printer
Int64	dnn/contrib/rapidjson/document.h	/^    bool Int64(int64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int64	dnn/contrib/rapidjson/prettywriter.h	/^    bool Int64(int64_t i64)     { PrettyPrefix(kNumberType); return Base::WriteInt64(i64); }$/;"	f	class:PrettyWriter
Int64	dnn/contrib/rapidjson/reader.h	/^    bool Int64(int64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int64	dnn/contrib/rapidjson/writer.h	/^    bool Int64(int64_t i64)     { Prefix(kNumberType); return WriteInt64(i64); }$/;"	f	class:Writer
IntChecker	dnn/contrib/spdlog/details/format.cc	/^struct IntChecker {$/;"	s	namespace:fmt::__anon32	file:
IntChecker	dnn/contrib/spdlog/details/format.cc	/^struct IntChecker<true> {$/;"	s	namespace:fmt::__anon32	file:
IntFormatSpec	dnn/contrib/spdlog/details/format.h	/^    IntFormatSpec(T val, const SpecT &spec = SpecT())$/;"	f	class:fmt::IntFormatSpec
IntFormatSpec	dnn/contrib/spdlog/details/format.h	/^class IntFormatSpec : public SpecT {$/;"	c	namespace:fmt
IntTraits	dnn/contrib/spdlog/details/format.h	/^struct IntTraits {$/;"	s	namespace:fmt::internal
IntegerExponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }$/;"	f	class:internal::Double
IntegerSignificand	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }$/;"	f	class:internal::Double
InterfacedPtr	dnn/util/interfaced_ptr.h	/^	InterfacedPtr() : _ptr(nullptr) {$/;"	f	class:dnn::InterfacedPtr
InterfacedPtr	dnn/util/interfaced_ptr.h	/^	InterfacedPtr(T *ptr_to_set) : _ptr(ptr_to_set) {$/;"	f	class:dnn::InterfacedPtr
InterfacedPtr	dnn/util/interfaced_ptr.h	/^class InterfacedPtr {$/;"	c	namespace:dnn
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction() const {$/;"	f	class:fastdelegate::FastDelegate0
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1) const {$/;"	f	class:fastdelegate::FastDelegate1
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2) const {$/;"	f	class:fastdelegate::FastDelegate2
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3) const {$/;"	f	class:fastdelegate::FastDelegate3
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const {$/;"	f	class:fastdelegate::FastDelegate4
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const {$/;"	f	class:fastdelegate::FastDelegate5
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const {$/;"	f	class:fastdelegate::FastDelegate6
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const {$/;"	f	class:fastdelegate::FastDelegate7
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const {$/;"	f	class:fastdelegate::FastDelegate8
IsArray	dnn/contrib/rapidjson/document.h	/^    bool IsArray()  const { return flags_ == kArrayFlag; }$/;"	f	class:GenericValue
IsBaseOf	dnn/contrib/rapidjson/internal/meta.h	/^template <typename B, typename D> struct IsBaseOf$/;"	s	namespace:internal
IsBaseOfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template<typename B, typename D> struct IsBaseOfImpl {$/;"	s	namespace:internal
IsBool	dnn/contrib/rapidjson/document.h	/^    bool IsBool()   const { return (flags_ & kBoolFlag) != 0; }$/;"	f	class:GenericValue
IsComplete	dnn/contrib/rapidjson/writer.h	/^    bool IsComplete() const {$/;"	f	class:Writer
IsConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsConst : FalseType {};$/;"	s	namespace:internal
IsConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsConst<const T> : TrueType {};$/;"	s	namespace:internal
IsConvertibleToInt	dnn/contrib/spdlog/details/format.h	/^class IsConvertibleToInt {$/;"	c	namespace:fmt::internal
IsDouble	dnn/contrib/rapidjson/document.h	/^    bool IsDouble() const { return (flags_ & kDoubleFlag) != 0; }$/;"	f	class:GenericValue
IsEqual	dnn/util/fast_delegate.h	/^	inline bool IsEqual (const DelegateMemento &x) const{$/;"	f	class:fastdelegate::DelegateMemento
IsEqualToStaticFuncPtr	dnn/util/fast_delegate.h	/^	inline bool IsEqualToStaticFuncPtr(StaticFuncPtr funcptr){$/;"	f	class:fastdelegate::detail::ClosurePtr
IsError	dnn/contrib/rapidjson/error/error.h	/^    bool IsError() const { return code_ != kParseErrorNone; }$/;"	f	struct:ParseResult
IsFalse	dnn/contrib/rapidjson/document.h	/^    bool IsFalse()  const { return flags_ == kFalseFlag; }$/;"	f	class:GenericValue
IsGenericValue	dnn/contrib/rapidjson/document.h	/^template <typename T> struct IsGenericValue : IsGenericValueImpl<T>::Type {};$/;"	s	namespace:internal
IsGenericValueImpl	dnn/contrib/rapidjson/document.h	/^struct IsGenericValueImpl : FalseType {};$/;"	s	namespace:internal
IsGenericValueImpl	dnn/contrib/rapidjson/document.h	/^template <typename T> struct IsGenericValueImpl<T, typename Void<typename T::EncodingType>::Type, typename Void<typename T::AllocatorType>::Type>$/;"	s	namespace:internal
IsInf	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsInf() const { return (u & kExponentMask) == kExponentMask && Significand() == 0; }$/;"	f	class:internal::Double
IsInt	dnn/contrib/rapidjson/document.h	/^    bool IsInt()    const { return (flags_ & kIntFlag) != 0; }$/;"	f	class:GenericValue
IsInt64	dnn/contrib/rapidjson/document.h	/^    bool IsInt64()  const { return (flags_ & kInt64Flag) != 0; }$/;"	f	class:GenericValue
IsLess	dnn/util/fast_delegate.h	/^	inline bool IsLess(const DelegateMemento &right) const {$/;"	f	class:fastdelegate::DelegateMemento
IsMoreConst	dnn/contrib/rapidjson/internal/meta.h	/^struct IsMoreConst$/;"	s	namespace:internal
IsNan	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsNan() const { return (u & kExponentMask) == kExponentMask && Significand() != 0; }$/;"	f	class:internal::Double
IsNormal	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsNormal() const { return (u & kExponentMask) != 0 || Significand() == 0; }$/;"	f	class:internal::Double
IsNull	dnn/contrib/rapidjson/document.h	/^    bool IsNull()   const { return flags_ == kNullFlag; }$/;"	f	class:GenericValue
IsNumber	dnn/contrib/rapidjson/document.h	/^    bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }$/;"	f	class:GenericValue
IsObject	dnn/contrib/rapidjson/document.h	/^    bool IsObject() const { return flags_ == kObjectFlag; }$/;"	f	class:GenericValue
IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;"	s	namespace:internal
IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;"	s	namespace:internal
IsSame	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T, typename U> struct IsSame : FalseType {};$/;"	s	namespace:internal
IsSame	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsSame<T, T> : TrueType {};$/;"	s	namespace:internal
IsString	dnn/contrib/rapidjson/document.h	/^    bool IsString() const { return (flags_ & kStringFlag) != 0; }$/;"	f	class:GenericValue
IsTrue	dnn/contrib/rapidjson/document.h	/^    bool IsTrue()   const { return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
IsUint	dnn/contrib/rapidjson/document.h	/^    bool IsUint()   const { return (flags_ & kUintFlag) != 0; }$/;"	f	class:GenericValue
IsUint64	dnn/contrib/rapidjson/document.h	/^    bool IsUint64() const { return (flags_ & kUint64Flag) != 0; }$/;"	f	class:GenericValue
IsZero	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool IsZero() const { return count_ == 1 && digits_[0] == 0; }$/;"	f	class:internal::BigInteger
IsZeroInt	dnn/contrib/spdlog/details/format.cc	/^class IsZeroInt : public fmt::internal::ArgVisitor<IsZeroInt, bool> {$/;"	c	namespace:fmt::__anon32	file:
IterativeParse	dnn/contrib/rapidjson/reader.h	/^    ParseResult IterativeParse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParsingArrayFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingArrayFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingArrayInitialState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingArrayInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingElementDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingElementState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingErrorState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingErrorState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingKeyValueDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingKeyValueDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberKeyState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberKeyState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberValueState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberValueState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingObjectFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectInitialState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingObjectInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingStartState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingStartState = 0,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingState	dnn/contrib/rapidjson/reader.h	/^    enum IterativeParsingState {$/;"	g	class:GenericReader
IterativeParsingValueState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingValueState,$/;"	e	enum:GenericReader::IterativeParsingState
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator Iterator;$/;"	t	class:GenericMemberIterator
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef const GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Json	dnn/util/json.h	/^class Json {$/;"	c	namespace:dnn
JsonToProtobuf	dnn/util/json.h	/^	static void JsonToProtobuf(const Value &v, ProtoMessage m) {$/;"	f	class:dnn::Json
KISS_FFTND_H	dnn/contrib/kiss_fft/kiss_fftnd.h	2;"	d
KISS_FFT_COS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	128;"	d
KISS_FFT_COS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	132;"	d
KISS_FFT_COS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	136;"	d
KISS_FFT_FREE	dnn/contrib/kiss_fft/kiss_fft.h	30;"	d
KISS_FFT_FREE	dnn/contrib/kiss_fft/kiss_fft.h	33;"	d
KISS_FFT_H	dnn/contrib/kiss_fft/kiss_fft.h	2;"	d
KISS_FFT_MALLOC	dnn/contrib/kiss_fft/kiss_fft.h	29;"	d
KISS_FFT_MALLOC	dnn/contrib/kiss_fft/kiss_fft.h	32;"	d
KISS_FFT_SIN	dnn/contrib/kiss_fft/_kiss_fft_guts.h	129;"	d
KISS_FFT_SIN	dnn/contrib/kiss_fft/_kiss_fft_guts.h	133;"	d
KISS_FFT_SIN	dnn/contrib/kiss_fft/_kiss_fft_guts.h	137;"	d
KISS_FFT_TMP_ALLOC	dnn/contrib/kiss_fft/_kiss_fft_guts.h	159;"	d
KISS_FFT_TMP_ALLOC	dnn/contrib/kiss_fft/_kiss_fft_guts.h	162;"	d
KISS_FFT_TMP_FREE	dnn/contrib/kiss_fft/_kiss_fft_guts.h	160;"	d
KISS_FFT_TMP_FREE	dnn/contrib/kiss_fft/_kiss_fft_guts.h	163;"	d
KISS_FTR_H	dnn/contrib/kiss_fft/kiss_fftr.h	2;"	d
KISS_NDR_H	dnn/contrib/kiss_fft/kiss_fftndr.h	2;"	d
KNOWN_TYPES	generate_protos.py	/^KNOWN_TYPES = {$/;"	v
Kernel	spikework/kernel.h	/^    Kernel() : fun(nullptr) {}$/;"	f	class:dnn::Kernel
Kernel	spikework/kernel.h	/^class Kernel {$/;"	c	namespace:dnn
KernelFun	spikework/kernel.h	/^    typedef std::function<double(double)> KernelFun;$/;"	t	class:dnn::Kernel
KernelProcessor	spikework/kernel.cpp	/^KernelProcessor::KernelProcessor() : kernel_length(100), kernel_dt(1.0) {$/;"	f	class:dnn::KernelProcessor
KernelProcessor	spikework/kernel.h	/^class KernelProcessor : public IOProcessor {$/;"	c	namespace:dnn
Key	dnn/contrib/rapidjson/document.h	/^    bool Key(const Ch* str, SizeType length, bool copy) { return String(str, length, copy); }$/;"	f	class:GenericDocument
Key	dnn/contrib/rapidjson/prettywriter.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
Key	dnn/contrib/rapidjson/prettywriter.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:PrettyWriter
Key	dnn/contrib/rapidjson/reader.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
Key	dnn/contrib/rapidjson/writer.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:Writer
Key	dnn/contrib/rapidjson/writer.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:Writer
LAST_INTEGER_TYPE	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
LAST_NUMERIC_TYPE	dnn/contrib/spdlog/details/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
LLH	dnn/learning_rules/srm_methods.h	/^    static inline double LLH(const SRMNeuron &n) {$/;"	f	class:dnn::SRMMethods
LLH_formula	dnn/learning_rules/srm_methods.h	/^	static inline double LLH_formula(const double &fired, const double &p) {$/;"	f	class:dnn::SRMMethods
LLH_given_Y	dnn/learning_rules/srm_methods.h	/^    static inline double LLH_given_Y(const SRMNeuron &n, const double &fired) {$/;"	f	class:dnn::SRMMethods
LONG_DOUBLE	dnn/contrib/spdlog/details/format.h	/^        DOUBLE, LONG_DOUBLE, LAST_NUMERIC_TYPE = LONG_DOUBLE,$/;"	e	enum:fmt::internal::Value::Type
LONG_LONG	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
L_DEBUG	dnn/util/log/log.h	55;"	d
L_INFO	dnn/util/log/log.h	53;"	d
Layer	dnn/layers/layer.h	/^class Layer {$/;"	c	namespace:dnn
Layer	dnn/sim/builder.h	/^	struct Layer {$/;"	s	class:dnn::Builder
Layer	dnn/sim/layer.h	/^struct Layer {$/;"	s
LeakyIntegrateAndFire	dnn/neurons/leaky_integrate_and_fire.h	/^class LeakyIntegrateAndFire : public SpikeNeuron<LeakyIntegrateAndFireC, LeakyIntegrateAndFireState> {$/;"	c	namespace:dnn
LeakyIntegrateAndFireC	dnn/neurons/leaky_integrate_and_fire.h	/^    LeakyIntegrateAndFireC() $/;"	f	struct:dnn::LeakyIntegrateAndFireC
LeakyIntegrateAndFireC	dnn/neurons/leaky_integrate_and_fire.h	/^struct LeakyIntegrateAndFireC : public Serializable<Protos::LeakyIntegrateAndFireC> {$/;"	s	namespace:dnn
LeakyIntegrateAndFireState	dnn/neurons/leaky_integrate_and_fire.h	/^    LeakyIntegrateAndFireState() $/;"	f	struct:dnn::LeakyIntegrateAndFireState
LeakyIntegrateAndFireState	dnn/neurons/leaky_integrate_and_fire.h	/^struct LeakyIntegrateAndFireState : public Serializable<Protos::LeakyIntegrateAndFireState>  {$/;"	s	namespace:dnn
LearningRule	dnn/learning_rules/learning_rule.h	/^class LearningRule : public LearningRuleBase {$/;"	c	namespace:dnn
LearningRuleBase	dnn/learning_rules/learning_rule.h	/^class LearningRuleBase : public SerializableBase {$/;"	c	namespace:dnn
LearningRuleInfo	dnn/learning_rules/learning_rule.h	/^struct LearningRuleInfo : public Serializable<Protos::LearningRuleInfo> {$/;"	s	namespace:dnn
LearningRuleInterface	dnn/learning_rules/learning_rule.h	/^struct LearningRuleInterface {$/;"	s	namespace:dnn
LeftBracketToken	dnn/contrib/rapidjson/reader.h	/^        LeftBracketToken = 0,$/;"	e	enum:GenericReader::Token
LeftCurlyBracketToken	dnn/contrib/rapidjson/reader.h	/^        LeftCurlyBracketToken,$/;"	e	enum:GenericReader::Token
LenPos	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon18
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() const { return length_; }$/;"	f	class:GenericReader::StackStream
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() { return 0; }$/;"	f	class:GenericReader::NumberStream
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() { return stackStream.Length(); }$/;"	f	class:GenericReader::NumberStream
Level	dnn/contrib/rapidjson/writer.h	/^        Level(bool inArray_) : valueCount(0), inArray(inArray_) {}$/;"	f	struct:Writer::Level
Level	dnn/contrib/rapidjson/writer.h	/^    struct Level {$/;"	s	class:Writer
Log	dnn/util/log/log.h	/^    Log()$/;"	f	class:dnn::Log
Log	dnn/util/log/log.h	/^class Log {$/;"	c	namespace:dnn
LongLong	dnn/contrib/spdlog/details/format.h	/^FMT_GCC_EXTENSION typedef long long LongLong;$/;"	t	namespace:fmt
M	dnn/neurons/srm_neuron.h	/^    double M;$/;"	m	struct:dnn::SRMNeuronState
MAGENTA	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
MAX	dnn/contrib/kiss_fft/kiss_fftndr.c	17;"	d	file:
MAXFACTORS	dnn/contrib/kiss_fft/_kiss_fft_guts.h	22;"	d
MAX_PACKED_ARGS	dnn/contrib/spdlog/details/format.h	/^    enum { MAX_PACKED_ARGS = 16 };$/;"	e	enum:fmt::ArgList::__anon28
MINUS_FLAG	dnn/contrib/spdlog/details/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
MIN_DIST	shapelets/dist.cpp	/^const double DistAlgorithm::MIN_DIST = 0.0;$/;"	m	class:dnn::shapelets::DistAlgorithm	file:
MIN_DIST	shapelets/dist.h	/^    static const double MIN_DIST;$/;"	m	class:dnn::shapelets::DistAlgorithm
MPLReturn	mpl/mpl.h	/^	struct MPLReturn {$/;"	s	class:dnn::mpl::MatchingPursuit
MUL	spikework/gram.h	/^    enum EInnerProductMode { MUL, ACC };$/;"	e	enum:dnn::GramProcessor::EInnerProductMode
M_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class M_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate0<FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)() const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate0<FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)()) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate1<Param1, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate1<Param1, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate3<Param1, Param2, Param3, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate3<Param1, Param2, Param3, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate4<Param1, Param2, Param3, Param4, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate4<Param1, Param2, Param3, Param4, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate5<Param1, Param2, Param3, Param4, Param5, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate5<Param1, Param2, Param3, Param4, Param5, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate6<Param1, Param2, Param3, Param4, Param5, Param6, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate6<Param1, Param2, Param3, Param4, Param5, Param6, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate7<Param1, Param2, Param3, Param4, Param5, Param6, Param7, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate7<Param1, Param2, Param3, Param4, Param5, Param6, Param7, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate8<Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate8<Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	namespace:fastdelegate
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue() {}$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue(const NamedArg<Char_> &value) {$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue(const T &value,$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue(long value) {$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue(typename WCharHelper<wchar_t, Char>::Supported value) {$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^    MakeValue(unsigned long value) {$/;"	f	class:fmt::internal::MakeValue
MakeValue	dnn/contrib/spdlog/details/format.h	/^class MakeValue : public Arg {$/;"	c	namespace:fmt::internal
Malloc	dnn/contrib/rapidjson/allocators.h	/^    void* Malloc(size_t size) { return std::malloc(size); }$/;"	f	class:CrtAllocator
Malloc	dnn/contrib/rapidjson/allocators.h	/^    void* Malloc(size_t size) {$/;"	f	class:MemoryPoolAllocator
MapType	dnn/contrib/spdlog/details/format.h	/^    typedef std::map<fmt::BasicStringRef<Char>, internal::Arg> MapType;$/;"	t	class:fmt::internal::ArgMap
MatchingPursuit	mpl/mpl.cpp	/^MatchingPursuit::MatchingPursuit(const MatchingPursuitConfig &_c) : c(_c) {$/;"	f	class:dnn::mpl::MatchingPursuit
MatchingPursuit	mpl/mpl.h	/^class MatchingPursuit {$/;"	c	namespace:dnn::mpl
MatchingPursuitConfig	mpl/mpl.h	/^	MatchingPursuitConfig() :$/;"	f	struct:dnn::mpl::MatchingPursuitConfig
MatchingPursuitConfig	mpl/mpl.h	/^struct MatchingPursuitConfig : public Serializable<Protos::MatchingPursuitConfig> {$/;"	s	namespace:dnn::mpl
MaxChars	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon18
MaxSize	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon18
MaybeAddConst	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;"	s	namespace:internal
Member	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;"	t	class:GenericValue
MemberBegin	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberBegin	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberCount	dnn/contrib/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;"	f	class:GenericValue
MemberEnd	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \/\/!< Member iterator for iterating in object.$/;"	t	class:GenericValue
MemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;"	t
MemoryBuffer	dnn/contrib/spdlog/details/format.h	/^    MemoryBuffer(MemoryBuffer &&other) {$/;"	f	class:fmt::internal::MemoryBuffer
MemoryBuffer	dnn/contrib/spdlog/details/format.h	/^    explicit MemoryBuffer(const Allocator &alloc = Allocator())$/;"	f	class:fmt::internal::MemoryBuffer
MemoryBuffer	dnn/contrib/spdlog/details/format.h	/^class MemoryBuffer : private Allocator, public Buffer<T> {$/;"	c	namespace:fmt::internal
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    MemoryPoolAllocator(size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) : $/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    MemoryPoolAllocator(void *buffer, size_t size, size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) :$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^class MemoryPoolAllocator {$/;"	c
MemoryStream	dnn/contrib/rapidjson/memorystream.h	/^    MemoryStream(const Ch *src, size_t size) : src_(src), begin_(src), end_(src + size), size_(size) {}$/;"	f	struct:MemoryStream
MemoryStream	dnn/contrib/rapidjson/memorystream.h	/^struct MemoryStream {$/;"	s
MemoryWriter	dnn/contrib/spdlog/details/format.h	/^typedef BasicMemoryWriter<char> MemoryWriter;$/;"	t	namespace:fmt
MicrosoftVirtualMFP	dnn/util/fast_delegate.h	/^struct MicrosoftVirtualMFP {$/;"	s	namespace:fastdelegate::detail
Min3	dnn/contrib/rapidjson/internal/strtod.h	/^inline T Min3(T a, T b, T c) {$/;"	f	namespace:internal
MinMax	dnn/weight_normalizations/min_max.h	/^class MinMax : public WeightNormalization<MinMaxC> {$/;"	c	namespace:dnn
MinMaxC	dnn/weight_normalizations/min_max.h	/^    MinMaxC() $/;"	f	struct:dnn::MinMaxC
MinMaxC	dnn/weight_normalizations/min_max.h	/^struct MinMaxC : public Serializable<Protos::MinMaxC> {$/;"	s	namespace:dnn
MplInit	mpl/mpl.cpp	/^MplInit::MplInit() {$/;"	f	class:dnn::mpl::MplInit
MplInit	mpl/mpl.h	/^class MplInit {$/;"	c	namespace:dnn::mpl
MulAdd64	dnn/contrib/rapidjson/internal/biginteger.h	/^    static uint64_t MulAdd64(uint64_t a, uint64_t b, uint64_t k, uint64_t* outHigh) {$/;"	f	class:internal::BigInteger
MultiplyPow5	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& MultiplyPow5(unsigned exp) {$/;"	f	class:internal::BigInteger
N	dnn/contrib/rapidjson/reader.h	1042;"	d
N	dnn/contrib/rapidjson/reader.h	1056;"	d
N	shapelets/dataset.h	/^    size_t N() const {$/;"	f	class:dnn::shapelets::Dataset
N16	dnn/contrib/rapidjson/reader.h	1043;"	d
N16	dnn/contrib/rapidjson/reader.h	1057;"	d
NAMED_ARG	dnn/contrib/spdlog/details/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
NOMINMAX	dnn/contrib/spdlog/details/format.cc	46;"	d	file:
NOMINMAX	dnn/contrib/spdlog/details/format.cc	48;"	d	file:
NONE	dnn/contrib/spdlog/details/format.h	/^        NONE, NAMED_ARG,$/;"	e	enum:fmt::internal::Value::Type
N_left	shapelets/orderline.h	/^        size_t N_left;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
N_right	shapelets/orderline.h	/^        size_t N_right;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
NamedArg	dnn/contrib/spdlog/details/format.h	/^    NamedArg(BasicStringRef<Char> name, const T &value)$/;"	f	struct:fmt::internal::NamedArg
NamedArg	dnn/contrib/spdlog/details/format.h	/^struct NamedArg : Arg {$/;"	s	namespace:fmt::internal
Network	dnn/sim/network.h	/^	Network(vector<InterfacedPtr<SpikeNeuronBase>>& neurons) : spikes_list(neurons.size()) {$/;"	f	class:dnn::Network
Network	dnn/sim/network.h	/^class Network : public Printable {$/;"	c	namespace:dnn
NextPositiveDouble	dnn/contrib/rapidjson/internal/ieee754.h	/^    double NextPositiveDouble() const {$/;"	f	class:internal::Double
No	dnn/contrib/rapidjson/internal/meta.h	/^    typedef char (&No) [2];$/;"	t	struct:internal::IsBaseOfImpl
NonConstIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;"	t	class:GenericMemberIterator
NonLinearMinMax	dnn/weight_normalizations/nonlinear_min_max.h	/^class NonLinearMinMax : public WeightNormalization<NonLinearMinMaxC> {$/;"	c	namespace:dnn
NonLinearMinMaxC	dnn/weight_normalizations/nonlinear_min_max.h	/^    NonLinearMinMaxC() $/;"	f	struct:dnn::NonLinearMinMaxC
NonLinearMinMaxC	dnn/weight_normalizations/nonlinear_min_max.h	/^struct NonLinearMinMaxC : public Serializable<Protos::NonLinearMinMaxC> {$/;"	s	namespace:dnn
NormalDistribution	dnn/util/distributions.h	/^    NormalDistribution(double _mu, double _sigma) : mu(_mu), sigma(_sigma) {}$/;"	f	class:dnn::NormalDistribution
NormalDistribution	dnn/util/distributions.h	/^class NormalDistribution : public Distribution<double> {$/;"	c	namespace:dnn
Normalize	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp Normalize() const {$/;"	f	struct:internal::DiyFp
NormalizeBoundary	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp NormalizeBoundary() const {$/;"	f	struct:internal::DiyFp
NormalizedBoundaries	dnn/contrib/rapidjson/internal/diyfp.h	/^    void NormalizedBoundaries(DiyFp* minus, DiyFp* plus) const {$/;"	f	struct:internal::DiyFp
NotExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C> struct NotExpr  : SelectIf<C,FalseType,TrueType>::Type {};$/;"	s	namespace:internal
Null	dnn/contrib/rapidjson/document.h	/^    bool Null() { new (stack_.template Push<ValueType>()) ValueType(); return true; }$/;"	f	class:GenericDocument
Null	dnn/contrib/rapidjson/prettywriter.h	/^    bool Null()                 { PrettyPrefix(kNullType);   return Base::WriteNull(); }$/;"	f	class:PrettyWriter
Null	dnn/contrib/rapidjson/reader.h	/^    bool Null() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Null	dnn/contrib/rapidjson/writer.h	/^    bool Null()                 { Prefix(kNullType);   return WriteNull(); }$/;"	f	class:Writer
Null	dnn/contrib/spdlog/details/format.h	/^struct Null {};$/;"	s	namespace:fmt::internal
NullToken	dnn/contrib/rapidjson/reader.h	/^        NullToken,$/;"	e	enum:GenericReader::Token
Number	dnn/contrib/rapidjson/document.h	/^    union Number {$/;"	u	class:GenericValue
NumberStream	dnn/contrib/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : NumberStream<InputStream, false>(reader, is), stackStream(reader.stack_) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	dnn/contrib/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& s) : is(s) { (void)reader;  }$/;"	f	class:GenericReader::NumberStream
NumberStream	dnn/contrib/rapidjson/reader.h	/^    class NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberStream	dnn/contrib/rapidjson/reader.h	/^    class NumberStream<InputStream, true> : public NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberToken	dnn/contrib/rapidjson/reader.h	/^        NumberToken,$/;"	e	enum:GenericReader::Token
Object	dnn/base/base.h	/^class Object {$/;"	c	namespace:dnn
Object	dnn/contrib/rapidjson/document.h	/^    struct Object {$/;"	s	class:GenericValue
ObjectEmpty	dnn/contrib/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;"	f	class:GenericValue
Offset	dnn/contrib/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;"	f	struct:ParseResult
OptMods	dnn/base/base.h	/^typedef map<string, string> OptMods;$/;"	t	namespace:dnn
OptimalStdp	dnn/learning_rules/optimal_stdp.h	/^class OptimalStdp : public LearningRule<OptimalStdpC, OptimalStdpState, SRMNeuron> {$/;"	c	namespace:dnn
OptimalStdpC	dnn/learning_rules/optimal_stdp.h	/^    OptimalStdpC()$/;"	f	struct:dnn::OptimalStdpC
OptimalStdpC	dnn/learning_rules/optimal_stdp.h	/^struct OptimalStdpC : public Serializable<Protos::OptimalStdpC> {$/;"	s	namespace:dnn
OptimalStdpState	dnn/learning_rules/optimal_stdp.h	/^    OptimalStdpState()$/;"	f	struct:dnn::OptimalStdpState
OptimalStdpState	dnn/learning_rules/optimal_stdp.h	/^struct OptimalStdpState : public Serializable<Protos::OptimalStdpState>  {$/;"	s	namespace:dnn
OptionParser	dnn/util/option_parser.h	/^	OptionParser(const vector<string> &args) : opts(args) {}$/;"	f	class:dnn::OptionParser
OptionParser	dnn/util/option_parser.h	/^	OptionParser(int argc, char **argv) {$/;"	f	class:dnn::OptionParser
OptionParser	dnn/util/option_parser.h	/^class OptionParser {$/;"	c	namespace:dnn
OrExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct OrExpr  : OrExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
OrExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct OrExprCond<false, false> : FalseType {};$/;"	s	namespace:internal
OrExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct OrExprCond : TrueType {};$/;"	s	namespace:internal
Orderline	shapelets/orderline.h	/^    Orderline() : _all_min(true) {}$/;"	f	class:dnn::shapelets::Orderline
Orderline	shapelets/orderline.h	/^class Orderline : public Printable {$/;"	c	namespace:dnn::shapelets
Override	dnn/contrib/rapidjson/reader.h	/^    typedef typename internal::SelectIf<internal::IsSame<Derived, void>, BaseReaderHandler, Derived>::Type Override;$/;"	t	struct:BaseReaderHandler
P	dnn/io/stream.cpp	53;"	d	file:
PBJSON_HPP_	dnn/contrib/pbjson/pbjson.hpp	31;"	d
PCG_128BIT_CONSTANT	dnn/util/random/pcg_extras.hpp	84;"	d
PCG_DEFINE_CONSTANT	dnn/util/random/pcg_random.hpp	129;"	d
PCG_EXTRAS_HPP_INCLUDED	dnn/util/random/pcg_extras.hpp	36;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	58;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	60;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	65;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	67;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	69;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	72;"	d
PCG_NOINLINE	dnn/util/random/pcg_extras.hpp	60;"	d
PCG_NOINLINE	dnn/util/random/pcg_extras.hpp	62;"	d
PCG_RAND_HPP_INCLUDED	dnn/util/random/pcg_random.hpp	76;"	d
PCG_UINT128_HPP_INCLUDED	dnn/util/random/pcg_uint128.hpp	39;"	d
PI	dnn/util/util.h	25;"	d
PLUS_FLAG	dnn/contrib/spdlog/details/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
POINTER	dnn/contrib/spdlog/details/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
POWERS_OF_10_32	dnn/contrib/spdlog/details/format.cc	/^const uint32_t fmt::internal::BasicData<T>::POWERS_OF_10_32[] = {$/;"	m	class:fmt::internal::BasicData	file:
POWERS_OF_10_64	dnn/contrib/spdlog/details/format.cc	/^const uint64_t fmt::internal::BasicData<T>::POWERS_OF_10_64[] = {$/;"	m	class:fmt::internal::BasicData	file:
PRIX16	dnn/contrib/rapidjson/msinttypes/inttypes.h	114;"	d
PRIX32	dnn/contrib/rapidjson/msinttypes/inttypes.h	127;"	d
PRIX64	dnn/contrib/rapidjson/msinttypes/inttypes.h	140;"	d
PRIX8	dnn/contrib/rapidjson/msinttypes/inttypes.h	101;"	d
PRIXFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	122;"	d
PRIXFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	135;"	d
PRIXFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	148;"	d
PRIXFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	109;"	d
PRIXLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	118;"	d
PRIXLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	131;"	d
PRIXLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	144;"	d
PRIXLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	105;"	d
PRIXMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	153;"	d
PRIXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	158;"	d
PRId16	dnn/contrib/rapidjson/msinttypes/inttypes.h	70;"	d
PRId32	dnn/contrib/rapidjson/msinttypes/inttypes.h	77;"	d
PRId64	dnn/contrib/rapidjson/msinttypes/inttypes.h	84;"	d
PRId8	dnn/contrib/rapidjson/msinttypes/inttypes.h	63;"	d
PRIdFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	74;"	d
PRIdFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	81;"	d
PRIdFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	88;"	d
PRIdFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	67;"	d
PRIdLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	72;"	d
PRIdLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	79;"	d
PRIdLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	86;"	d
PRIdLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	65;"	d
PRIdMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	91;"	d
PRIdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	94;"	d
PRIi16	dnn/contrib/rapidjson/msinttypes/inttypes.h	71;"	d
PRIi32	dnn/contrib/rapidjson/msinttypes/inttypes.h	78;"	d
PRIi64	dnn/contrib/rapidjson/msinttypes/inttypes.h	85;"	d
PRIi8	dnn/contrib/rapidjson/msinttypes/inttypes.h	64;"	d
PRIiFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	75;"	d
PRIiFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	82;"	d
PRIiFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	89;"	d
PRIiFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	68;"	d
PRIiLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	73;"	d
PRIiLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	80;"	d
PRIiLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	87;"	d
PRIiLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	66;"	d
PRIiMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	92;"	d
PRIiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	95;"	d
PRIo16	dnn/contrib/rapidjson/msinttypes/inttypes.h	111;"	d
PRIo32	dnn/contrib/rapidjson/msinttypes/inttypes.h	124;"	d
PRIo64	dnn/contrib/rapidjson/msinttypes/inttypes.h	137;"	d
PRIo8	dnn/contrib/rapidjson/msinttypes/inttypes.h	98;"	d
PRIoFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	119;"	d
PRIoFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	132;"	d
PRIoFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	145;"	d
PRIoFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	106;"	d
PRIoLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	115;"	d
PRIoLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	128;"	d
PRIoLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	141;"	d
PRIoLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	102;"	d
PRIoMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	150;"	d
PRIoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	155;"	d
PRIu16	dnn/contrib/rapidjson/msinttypes/inttypes.h	112;"	d
PRIu32	dnn/contrib/rapidjson/msinttypes/inttypes.h	125;"	d
PRIu64	dnn/contrib/rapidjson/msinttypes/inttypes.h	138;"	d
PRIu8	dnn/contrib/rapidjson/msinttypes/inttypes.h	99;"	d
PRIuFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	120;"	d
PRIuFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	133;"	d
PRIuFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	146;"	d
PRIuFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	107;"	d
PRIuLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	116;"	d
PRIuLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	129;"	d
PRIuLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	142;"	d
PRIuLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	103;"	d
PRIuMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	151;"	d
PRIuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	156;"	d
PRIx16	dnn/contrib/rapidjson/msinttypes/inttypes.h	113;"	d
PRIx32	dnn/contrib/rapidjson/msinttypes/inttypes.h	126;"	d
PRIx64	dnn/contrib/rapidjson/msinttypes/inttypes.h	139;"	d
PRIx8	dnn/contrib/rapidjson/msinttypes/inttypes.h	100;"	d
PRIxFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	121;"	d
PRIxFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	134;"	d
PRIxFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	147;"	d
PRIxFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	108;"	d
PRIxLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	117;"	d
PRIxLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	130;"	d
PRIxLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	143;"	d
PRIxLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	104;"	d
PRIxMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	152;"	d
PRIxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	157;"	d
PTRDIFF_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	235;"	d
PTRDIFF_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	238;"	d
PTRDIFF_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	234;"	d
PTRDIFF_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	237;"	d
Pair	dnn/contrib/spdlog/details/format.h	/^    typedef typename MapType::value_type Pair;$/;"	t	class:fmt::internal::ArgMap
Parent	dnn/inputs/input_time_series.h	/^    typedef Input<InputTimeSeriesC, InputTimeSeriesState> Parent;$/;"	t	class:dnn::InputTimeSeries
Parse	dnn/contrib/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;"	f	class:GenericDocument
Parse	dnn/contrib/rapidjson/reader.h	/^    ParseResult Parse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseArray	dnn/contrib/rapidjson/reader.h	/^    void ParseArray(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseErrorCode	dnn/contrib/rapidjson/error/error.h	/^enum ParseErrorCode {$/;"	g
ParseFalse	dnn/contrib/rapidjson/reader.h	/^    void ParseFalse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFlag	dnn/contrib/rapidjson/reader.h	/^enum ParseFlag {$/;"	g
ParseHex4	dnn/contrib/rapidjson/reader.h	/^    unsigned ParseHex4(InputStream& is) {$/;"	f	class:GenericReader
ParseInsitu	dnn/contrib/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;"	f	class:GenericDocument
ParseNull	dnn/contrib/rapidjson/reader.h	/^    void ParseNull(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseNumber	dnn/contrib/rapidjson/reader.h	/^    void ParseNumber(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseObject	dnn/contrib/rapidjson/reader.h	/^    void ParseObject(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseResult	dnn/contrib/rapidjson/error/error.h	/^    ParseResult() : code_(kParseErrorNone), offset_(0) {}$/;"	f	struct:ParseResult
ParseResult	dnn/contrib/rapidjson/error/error.h	/^    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}$/;"	f	struct:ParseResult
ParseResult	dnn/contrib/rapidjson/error/error.h	/^struct ParseResult {$/;"	s
ParseStream	dnn/contrib/rapidjson/document.h	/^    GenericDocument& ParseStream(InputStream& is) {$/;"	f	class:GenericDocument
ParseString	dnn/contrib/rapidjson/reader.h	/^    void ParseString(InputStream& is, Handler& handler, bool isKey = false) {$/;"	f	class:GenericReader
ParseStringToStream	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE void ParseStringToStream(InputStream& is, OutputStream& os) {$/;"	f	class:GenericReader
ParseTrue	dnn/contrib/rapidjson/reader.h	/^    void ParseTrue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseUint64	dnn/contrib/rapidjson/internal/biginteger.h	/^    static uint64_t ParseUint64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
ParseValue	dnn/contrib/rapidjson/reader.h	/^    void ParseValue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFOutputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedOutputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:AutoUTFInputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:EncodedInputStream
Peek	dnn/contrib/rapidjson/filereadstream.h	/^    Ch Peek() const { return *current_; }$/;"	f	class:FileReadStream
Peek	dnn/contrib/rapidjson/filestream.h	/^    char Peek() const { return current_; }$/;"	f	class:FileStream
Peek	dnn/contrib/rapidjson/filewritestream.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Peek	dnn/contrib/rapidjson/memorystream.h	/^    Ch Peek() const { return (src_ == end_) ? '\\0' : *src_; }$/;"	f	struct:MemoryStream
Peek	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Peek() const { return *src_; }$/;"	f	struct:GenericStringStream
Peek	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Peek() { return *src_; }$/;"	f	struct:GenericInsituStringStream
Peek	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Peek() const { return is.Peek(); }$/;"	f	class:GenericReader::NumberStream
Peek4	dnn/contrib/rapidjson/filereadstream.h	/^    const Ch* Peek4() const {$/;"	f	class:FileReadStream
Peek4	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* Peek4() const {$/;"	f	struct:MemoryStream
PlainType	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator> PlainType;$/;"	t	class:GenericMemberIterator
Pointer	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::pointer         Pointer;$/;"	t	class:GenericMemberIterator
Pop	dnn/contrib/rapidjson/internal/stack.h	/^    T* Pop(size_t count) {$/;"	f	class:internal::Stack
Pop	dnn/contrib/rapidjson/memorybuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Pop	dnn/contrib/rapidjson/rapidjson.h	/^    void Pop(size_t count) { dst_ -= count; }$/;"	f	struct:GenericInsituStringStream
Pop	dnn/contrib/rapidjson/reader.h	/^        Ch* Pop() {$/;"	f	class:GenericReader::StackStream
Pop	dnn/contrib/rapidjson/reader.h	/^        const char* Pop() { return 0; }$/;"	f	class:GenericReader::NumberStream
Pop	dnn/contrib/rapidjson/reader.h	/^        const char* Pop() {$/;"	f	class:GenericReader::NumberStream
Pop	dnn/contrib/rapidjson/stringbuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	class:GenericStringBuffer
PopBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PopBack() {$/;"	f	class:GenericValue
Pow10	dnn/contrib/rapidjson/internal/pow10.h	/^inline double Pow10(int n) {$/;"	f	namespace:internal
PowMinMax	dnn/weight_normalizations/pow_min_max.h	/^class PowMinMax : public WeightNormalization<PowMinMaxC> {$/;"	c	namespace:dnn
PowMinMaxC	dnn/weight_normalizations/pow_min_max.h	/^    PowMinMaxC() $/;"	f	struct:dnn::PowMinMaxC
PowMinMaxC	dnn/weight_normalizations/pow_min_max.h	/^struct PowMinMaxC : public Serializable<Protos::PowMinMaxC> {$/;"	s	namespace:dnn
PrecisionHandler	dnn/contrib/spdlog/details/format.cc	/^class PrecisionHandler :$/;"	c	namespace:fmt::__anon32	file:
Predict	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Predict(IterativeParsingState state, Token token) {$/;"	f	class:GenericReader
Prefix	dnn/contrib/rapidjson/writer.h	/^    void Prefix(Type type) {$/;"	f	class:Writer
Prettify	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* Prettify(char* buffer, int length, int k) {$/;"	f	namespace:internal
PrettyPrefix	dnn/contrib/rapidjson/prettywriter.h	/^    void PrettyPrefix(Type type) {$/;"	f	class:PrettyWriter
PrettyWriter	dnn/contrib/rapidjson/prettywriter.h	/^    PrettyWriter(OutputStream& os, StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	dnn/contrib/rapidjson/prettywriter.h	/^class PrettyWriter : public Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> {$/;"	c
PreviousPositiveDouble	dnn/contrib/rapidjson/internal/ieee754.h	/^    double PreviousPositiveDouble() const {$/;"	f	class:internal::Double
Printable	dnn/base/base.h	/^class Printable: public Object {$/;"	c	namespace:dnn
PrintfArgFormatter	dnn/contrib/spdlog/details/format.cc	/^    PrintfArgFormatter(BasicWriter<Char> &w, FormatSpec &s)$/;"	f	class:fmt::internal::PrintfArgFormatter
PrintfArgFormatter	dnn/contrib/spdlog/details/format.cc	/^class PrintfArgFormatter :$/;"	c	namespace:fmt::internal	file:
PrintfFormatter	dnn/contrib/spdlog/details/format.h	/^class PrintfFormatter : private FormatterBase {$/;"	c	namespace:fmt::internal
ProbePtrType	dnn/util/fast_delegate.h	/^	typedef GenericVirtualClass * (GenericVirtualClass::*ProbePtrType)();$/;"	t	struct:fastdelegate::detail::GenericVirtualClass
ProcessMode	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	g	class:dnn::SerializableBase
ProcessingInput	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	e	enum:dnn::SerializableBase::ProcessMode
ProcessingOutput	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	e	enum:dnn::SerializableBase::ProcessMode
Processor	spikework/processor.h	/^class Processor {$/;"	c	namespace:dnn
Projection	shapelets/projection.h	/^    Projection(size_t _ts_id, size_t _class_id, size_t _length, double _dist)$/;"	f	struct:dnn::shapelets::Projection
Projection	shapelets/projection.h	/^struct Projection {$/;"	s	namespace:dnn::shapelets
ProtoMessage	dnn/core.h	/^typedef google::protobuf::Message* ProtoMessage;$/;"	t
ProtoMessage	dnn/io/serialize.h	/^typedef google::protobuf::Message* ProtoMessage;$/;"	t
ProtoType	dnn/io/serialize.h	/^    typedef Proto ProtoType;$/;"	t	class:dnn::Serializable
ProtoType	dnn/io/serialize.h	/^    typedef Protos::EmptyProto ProtoType;$/;"	t	class:dnn::SerializableBase
Ptr	dnn/util/ptr.h	/^	Ptr() : _ptr(nullptr) {$/;"	f	class:dnn::Ptr
Ptr	dnn/util/ptr.h	/^	Ptr(T *ptr_to_set) : _ptr(ptr_to_set) {		$/;"	f	class:dnn::Ptr
Ptr	dnn/util/ptr.h	/^class Ptr {$/;"	c	namespace:dnn
Push	dnn/contrib/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* Push(size_t count = 1) {$/;"	f	class:internal::Stack
Push	dnn/contrib/rapidjson/memorybuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Push	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* Push(size_t count) { Ch* begin = dst_; dst_ += count; return begin; }$/;"	f	struct:GenericInsituStringStream
Push	dnn/contrib/rapidjson/stringbuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	class:GenericStringBuffer
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    PushBack(T value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/internal/biginteger.h	/^    void PushBack(Type digit) {$/;"	f	class:internal::BigInteger
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch c) { Encoding::Put(os_, c);  }$/;"	f	class:EncodedOutputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch c) { putFunc_(*os_, c); }$/;"	f	class:AutoUTFOutputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFInputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedInputStream
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:ASCII
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:UTF8
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16BE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16LE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32BE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32LE
Put	dnn/contrib/rapidjson/filereadstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:FileReadStream
Put	dnn/contrib/rapidjson/filestream.h	/^    void Put(char c) { fputc(c, fp_); }$/;"	f	class:FileStream
Put	dnn/contrib/rapidjson/filewritestream.h	/^    void Put(char c) { $/;"	f	class:FileWriteStream
Put	dnn/contrib/rapidjson/memorybuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	struct:GenericMemoryBuffer
Put	dnn/contrib/rapidjson/memorystream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Put	dnn/contrib/rapidjson/rapidjson.h	/^    void Put(Ch c) { RAPIDJSON_ASSERT(dst_ != 0); *dst_++ = c; }$/;"	f	struct:GenericInsituStringStream
Put	dnn/contrib/rapidjson/rapidjson.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Put	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Put(Ch c) {$/;"	f	class:GenericReader::StackStream
Put	dnn/contrib/rapidjson/stringbuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutBOM	dnn/contrib/rapidjson/encodedstream.h	/^    void PutBOM() { $/;"	f	class:AutoUTFOutputStream
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:ASCII
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16BE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16LE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32BE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32LE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF8
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutBegin	dnn/contrib/rapidjson/filereadstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutBegin	dnn/contrib/rapidjson/filestream.h	/^    char* PutBegin() { return 0; }$/;"	f	class:FileStream
PutBegin	dnn/contrib/rapidjson/filewritestream.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutBegin	dnn/contrib/rapidjson/memorystream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutBegin	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutBegin	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* PutBegin() { return dst_ = src_; }$/;"	f	struct:GenericInsituStringStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutEnd	dnn/contrib/rapidjson/filereadstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutEnd	dnn/contrib/rapidjson/filestream.h	/^    size_t PutEnd(char*) { return 0; }$/;"	f	class:FileStream
PutEnd	dnn/contrib/rapidjson/filewritestream.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutEnd	dnn/contrib/rapidjson/memorystream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutEnd	dnn/contrib/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch* begin) { return static_cast<size_t>(dst_ - begin); }$/;"	f	struct:GenericInsituStringStream
PutEnd	dnn/contrib/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutFunc	dnn/contrib/rapidjson/encodedstream.h	/^    typedef void (*PutFunc)(OutputByteStream&, Ch);$/;"	t	class:AutoUTFOutputStream
PutN	dnn/contrib/rapidjson/filewritestream.h	/^    void PutN(char c, size_t n) {$/;"	f	class:FileWriteStream
PutN	dnn/contrib/rapidjson/filewritestream.h	/^inline void PutN(FileWriteStream& stream, char c, size_t n) {$/;"	f
PutN	dnn/contrib/rapidjson/memorybuffer.h	/^inline void PutN(MemoryBuffer& memoryBuffer, char c, size_t n) {$/;"	f
PutN	dnn/contrib/rapidjson/rapidjson.h	/^inline void PutN(Stream& stream, Ch c, size_t n) {$/;"	f
PutN	dnn/contrib/rapidjson/stringbuffer.h	/^inline void PutN(GenericStringBuffer<UTF8<> >& stream, char c, size_t n) {$/;"	f
RAPIDJSON_64BIT	dnn/contrib/rapidjson/rapidjson.h	202;"	d
RAPIDJSON_64BIT	dnn/contrib/rapidjson/rapidjson.h	204;"	d
RAPIDJSON_ALIGN	dnn/contrib/rapidjson/rapidjson.h	219;"	d
RAPIDJSON_ALLOCATORS_H_	dnn/contrib/rapidjson/allocators.h	22;"	d
RAPIDJSON_ASSERT	dnn/contrib/rapidjson/rapidjson.h	315;"	d
RAPIDJSON_BIGENDIAN	dnn/contrib/rapidjson/rapidjson.h	144;"	d
RAPIDJSON_BIGINTEGER_H_	dnn/contrib/rapidjson/internal/biginteger.h	22;"	d
RAPIDJSON_DELETE	dnn/contrib/rapidjson/rapidjson.h	458;"	d
RAPIDJSON_DIAG_OFF	dnn/contrib/rapidjson/rapidjson.h	381;"	d
RAPIDJSON_DIAG_POP	dnn/contrib/rapidjson/rapidjson.h	387;"	d
RAPIDJSON_DIAG_PRAGMA	dnn/contrib/rapidjson/rapidjson.h	380;"	d
RAPIDJSON_DIAG_PUSH	dnn/contrib/rapidjson/rapidjson.h	386;"	d
RAPIDJSON_DISABLEIF	dnn/contrib/rapidjson/internal/meta.h	167;"	d
RAPIDJSON_DISABLEIF_RETURN	dnn/contrib/rapidjson/internal/meta.h	176;"	d
RAPIDJSON_DIYFP_H_	dnn/contrib/rapidjson/internal/diyfp.h	26;"	d
RAPIDJSON_DOCUMENT_H_	dnn/contrib/rapidjson/document.h	22;"	d
RAPIDJSON_DO_JOIN	dnn/contrib/rapidjson/rapidjson.h	331;"	d
RAPIDJSON_DO_JOIN2	dnn/contrib/rapidjson/rapidjson.h	332;"	d
RAPIDJSON_DO_STRINGIFY	dnn/contrib/rapidjson/rapidjson.h	367;"	d
RAPIDJSON_DTOA_	dnn/contrib/rapidjson/internal/dtoa.h	26;"	d
RAPIDJSON_ENABLEIF	dnn/contrib/rapidjson/internal/meta.h	163;"	d
RAPIDJSON_ENABLEIF_RETURN	dnn/contrib/rapidjson/internal/meta.h	171;"	d
RAPIDJSON_ENCODEDSTREAM_H_	dnn/contrib/rapidjson/encodedstream.h	22;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodedstream.h	282;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodedstream.h	99;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodings.h	560;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodings.h	583;"	d
RAPIDJSON_ENCODINGS_H_	dnn/contrib/rapidjson/encodings.h	22;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	163;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	165;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	173;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	175;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	181;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	183;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	186;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	188;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	190;"	d
RAPIDJSON_ERROR_CHARTYPE	dnn/contrib/rapidjson/error/error.h	38;"	d
RAPIDJSON_ERROR_EN_H__	dnn/contrib/rapidjson/error/en.h	22;"	d
RAPIDJSON_ERROR_ERROR_H__	dnn/contrib/rapidjson/error/error.h	22;"	d
RAPIDJSON_ERROR_STRING	dnn/contrib/rapidjson/error/error.h	51;"	d
RAPIDJSON_FILEREADSTREAM_H_	dnn/contrib/rapidjson/filereadstream.h	22;"	d
RAPIDJSON_FILESTREAM_H_	dnn/contrib/rapidjson/filestream.h	22;"	d
RAPIDJSON_FILEWRITESTREAM_H_	dnn/contrib/rapidjson/filewritestream.h	22;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	132;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	134;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	136;"	d
RAPIDJSON_GNUC	dnn/contrib/rapidjson/rapidjson.h	373;"	d
RAPIDJSON_HAS_CXX11_NOEXCEPT	dnn/contrib/rapidjson/rapidjson.h	428;"	d
RAPIDJSON_HAS_CXX11_RVALUE_REFS	dnn/contrib/rapidjson/rapidjson.h	416;"	d
RAPIDJSON_HAS_CXX11_TYPETRAITS	dnn/contrib/rapidjson/rapidjson.h	444;"	d
RAPIDJSON_HAS_STDSTRING	dnn/contrib/rapidjson/document.h	44;"	d
RAPIDJSON_IEEE754_	dnn/contrib/rapidjson/internal/ieee754.h	22;"	d
RAPIDJSON_INTERNAL_META_H_	dnn/contrib/rapidjson/internal/meta.h	22;"	d
RAPIDJSON_INTERNAL_STACK_H_	dnn/contrib/rapidjson/internal/stack.h	22;"	d
RAPIDJSON_INTERNAL_STRFUNC_H_	dnn/contrib/rapidjson/internal/strfunc.h	22;"	d
RAPIDJSON_ITOA_	dnn/contrib/rapidjson/internal/itoa.h	22;"	d
RAPIDJSON_JOIN	dnn/contrib/rapidjson/rapidjson.h	330;"	d
RAPIDJSON_LITTLEENDIAN	dnn/contrib/rapidjson/rapidjson.h	143;"	d
RAPIDJSON_MEMORYBUFFER_H_	dnn/contrib/rapidjson/memorybuffer.h	22;"	d
RAPIDJSON_MEMORYSTREAM_H_	dnn/contrib/rapidjson/memorystream.h	22;"	d
RAPIDJSON_MULTILINEMACRO_BEGIN	dnn/contrib/rapidjson/rapidjson.h	357;"	d
RAPIDJSON_MULTILINEMACRO_END	dnn/contrib/rapidjson/rapidjson.h	358;"	d
RAPIDJSON_NAMESPACE	dnn/contrib/rapidjson/rapidjson.h	88;"	d
RAPIDJSON_NAMESPACE_BEGIN	dnn/contrib/rapidjson/rapidjson.h	91;"	d
RAPIDJSON_NAMESPACE_END	dnn/contrib/rapidjson/rapidjson.h	94;"	d
RAPIDJSON_NEW	dnn/contrib/rapidjson/rapidjson.h	454;"	d
RAPIDJSON_NOEXCEPT	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(const CharType (&str)[N]) RAPIDJSON_NOEXCEPT$/;"	m	struct:GenericStringRef
RAPIDJSON_NOEXCEPT	dnn/contrib/rapidjson/rapidjson.h	437;"	d
RAPIDJSON_NOTHING	dnn/contrib/rapidjson/reader.h	54;"	d
RAPIDJSON_NO_INT64DEFINE	dnn/contrib/rapidjson/rapidjson.h	122;"	d
RAPIDJSON_NO_SIZETYPEDEFINE	dnn/contrib/rapidjson/rapidjson.h	285;"	d
RAPIDJSON_PARSE_DEFAULT_FLAGS	dnn/contrib/rapidjson/reader.h	136;"	d
RAPIDJSON_PARSE_ERROR	dnn/contrib/rapidjson/reader.h	115;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN	dnn/contrib/rapidjson/reader.h	56;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN_VOID	dnn/contrib/rapidjson/reader.h	61;"	d
RAPIDJSON_PARSE_ERROR_NORETURN	dnn/contrib/rapidjson/reader.h	96;"	d
RAPIDJSON_POW10_	dnn/contrib/rapidjson/internal/pow10.h	22;"	d
RAPIDJSON_PRAGMA	dnn/contrib/rapidjson/rapidjson.h	379;"	d
RAPIDJSON_PRETTYWRITER_H_	dnn/contrib/rapidjson/prettywriter.h	22;"	d
RAPIDJSON_RAPIDJSON_H_	dnn/contrib/rapidjson/rapidjson.h	22;"	d
RAPIDJSON_READER_H_	dnn/contrib/rapidjson/reader.h	22;"	d
RAPIDJSON_REMOVEFPTR_	dnn/contrib/rapidjson/internal/meta.h	159;"	d
RAPIDJSON_SIMD	dnn/contrib/rapidjson/rapidjson.h	262;"	d
RAPIDJSON_STATIC_ASSERT	dnn/contrib/rapidjson/rapidjson.h	346;"	d
RAPIDJSON_STATIC_ASSERT_UNUSED_ATTRIBUTE	dnn/contrib/rapidjson/rapidjson.h	335;"	d
RAPIDJSON_STRINGBUFFER_H_	dnn/contrib/rapidjson/stringbuffer.h	22;"	d
RAPIDJSON_STRINGIFY	dnn/contrib/rapidjson/rapidjson.h	366;"	d
RAPIDJSON_STRTOD_	dnn/contrib/rapidjson/internal/strtod.h	22;"	d
RAPIDJSON_UINT64_C2	dnn/contrib/rapidjson/rapidjson.h	232;"	d
RAPIDJSON_VERSION_CODE	dnn/contrib/rapidjson/rapidjson.h	362;"	d
RAPIDJSON_WRITER_H_	dnn/contrib/rapidjson/writer.h	22;"	d
RED	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
REG_TYPE	dnn/base/factory.h	16;"	d
REG_TYPE_WITH_CONST	dnn/base/factory.h	19;"	d
REG_TYPE_WITH_STATE_AND_CONST	dnn/base/factory.h	23;"	d
RESET_COLOR	dnn/contrib/spdlog/details/format.cc	/^const char RESET_COLOR[] = "\\x1b[0m";$/;"	m	namespace:fmt::__anon32	file:
RETURN_ERR	dnn/contrib/pbjson/pbjson.cpp	36;"	d	file:
R_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class R_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Read	dnn/contrib/rapidjson/filereadstream.h	/^    void Read() {$/;"	f	class:FileReadStream
Read	dnn/contrib/rapidjson/filestream.h	/^    void Read() {$/;"	f	class:FileStream
ReadMod	dnn/base/constants.h	/^	enum ReadMod {FromString, FromFile};$/;"	g	struct:dnn::Constants
ReadProcessor	spikework/read.h	/^    ReadProcessor() {}$/;"	f	class:dnn::ReadProcessor
ReadProcessor	spikework/read.h	/^class ReadProcessor : public IOProcessor {$/;"	c	namespace:dnn
Reader	dnn/contrib/rapidjson/reader.h	/^typedef GenericReader<UTF8<>, UTF8<> > Reader;$/;"	t
Realloc	dnn/contrib/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) { (void)originalSize; return std::realloc(originalPtr, newSize); }$/;"	f	class:CrtAllocator
Realloc	dnn/contrib/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:MemoryPoolAllocator
Reference	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::reference       Reference;$/;"	t	class:GenericMemberIterator
RemoveAllMembers	dnn/contrib/rapidjson/document.h	/^    void RemoveAllMembers() {$/;"	f	class:GenericValue
RemoveConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	s	namespace:internal
RemoveConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	s	namespace:internal
RemoveMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) {$/;"	f	class:GenericValue
RemoveMember	dnn/contrib/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) {$/;"	f	class:GenericValue
RemoveMember	dnn/contrib/rapidjson/document.h	/^    bool RemoveMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
RemoveSfinaeTag	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	s	namespace:internal
Repr	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	g	class:dnn::Stream
Reserve	dnn/contrib/rapidjson/document.h	/^    GenericValue& Reserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
Reset	dnn/contrib/rapidjson/writer.h	/^    void Reset(OutputStream& os) {$/;"	f	class:Writer
Resize	dnn/contrib/rapidjson/internal/stack.h	/^    void Resize(size_t newCapacity) {$/;"	f	class:internal::Stack
RightBracketToken	dnn/contrib/rapidjson/reader.h	/^        RightBracketToken,$/;"	e	enum:GenericReader::Token
RightCurlyBracketToken	dnn/contrib/rapidjson/reader.h	/^        RightCurlyBracketToken,$/;"	e	enum:GenericReader::Token
RuntimeError	dnn/contrib/spdlog/details/format.h	/^    RuntimeError() : std::runtime_error("") {}$/;"	f	class:fmt::internal::RuntimeError
RuntimeError	dnn/contrib/spdlog/details/format.h	/^class RuntimeError : public std::runtime_error {$/;"	c	namespace:fmt::internal
S	dnn/contrib/spdlog/common.h	42;"	d
S	dnn/contrib/spdlog/common.h	44;"	d
SAMPPROD	dnn/contrib/kiss_fft/_kiss_fft_guts.h	47;"	d
SAMPPROD	dnn/contrib/kiss_fft/_kiss_fft_guts.h	51;"	d
SAMP_MAX	dnn/contrib/kiss_fft/_kiss_fft_guts.h	48;"	d
SAMP_MAX	dnn/contrib/kiss_fft/_kiss_fft_guts.h	52;"	d
SAMP_MIN	dnn/contrib/kiss_fft/_kiss_fft_guts.h	55;"	d
SCNX16	dnn/contrib/rapidjson/msinttypes/inttypes.h	217;"	d
SCNX32	dnn/contrib/rapidjson/msinttypes/inttypes.h	230;"	d
SCNX64	dnn/contrib/rapidjson/msinttypes/inttypes.h	243;"	d
SCNX8	dnn/contrib/rapidjson/msinttypes/inttypes.h	204;"	d
SCNXFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	225;"	d
SCNXFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	238;"	d
SCNXFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	251;"	d
SCNXFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	212;"	d
SCNXLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	221;"	d
SCNXLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	234;"	d
SCNXLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	247;"	d
SCNXLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	208;"	d
SCNXMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	256;"	d
SCNXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	262;"	d
SCNXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	267;"	d
SCNd16	dnn/contrib/rapidjson/msinttypes/inttypes.h	168;"	d
SCNd32	dnn/contrib/rapidjson/msinttypes/inttypes.h	175;"	d
SCNd64	dnn/contrib/rapidjson/msinttypes/inttypes.h	182;"	d
SCNd8	dnn/contrib/rapidjson/msinttypes/inttypes.h	161;"	d
SCNdFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	172;"	d
SCNdFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	179;"	d
SCNdFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	186;"	d
SCNdFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	165;"	d
SCNdLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	170;"	d
SCNdLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	177;"	d
SCNdLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	184;"	d
SCNdLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	163;"	d
SCNdMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	189;"	d
SCNdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	193;"	d
SCNdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	196;"	d
SCNi16	dnn/contrib/rapidjson/msinttypes/inttypes.h	169;"	d
SCNi32	dnn/contrib/rapidjson/msinttypes/inttypes.h	176;"	d
SCNi64	dnn/contrib/rapidjson/msinttypes/inttypes.h	183;"	d
SCNi8	dnn/contrib/rapidjson/msinttypes/inttypes.h	162;"	d
SCNiFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	173;"	d
SCNiFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	180;"	d
SCNiFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	187;"	d
SCNiFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	166;"	d
SCNiLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	171;"	d
SCNiLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	178;"	d
SCNiLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	185;"	d
SCNiLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	164;"	d
SCNiMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	190;"	d
SCNiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	194;"	d
SCNiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	197;"	d
SCNo16	dnn/contrib/rapidjson/msinttypes/inttypes.h	214;"	d
SCNo32	dnn/contrib/rapidjson/msinttypes/inttypes.h	227;"	d
SCNo64	dnn/contrib/rapidjson/msinttypes/inttypes.h	240;"	d
SCNo8	dnn/contrib/rapidjson/msinttypes/inttypes.h	201;"	d
SCNoFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	222;"	d
SCNoFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	235;"	d
SCNoFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	248;"	d
SCNoFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	209;"	d
SCNoLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	218;"	d
SCNoLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	231;"	d
SCNoLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	244;"	d
SCNoLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	205;"	d
SCNoMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	253;"	d
SCNoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	259;"	d
SCNoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	264;"	d
SCNu16	dnn/contrib/rapidjson/msinttypes/inttypes.h	215;"	d
SCNu32	dnn/contrib/rapidjson/msinttypes/inttypes.h	228;"	d
SCNu64	dnn/contrib/rapidjson/msinttypes/inttypes.h	241;"	d
SCNu8	dnn/contrib/rapidjson/msinttypes/inttypes.h	202;"	d
SCNuFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	223;"	d
SCNuFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	236;"	d
SCNuFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	249;"	d
SCNuFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	210;"	d
SCNuLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	219;"	d
SCNuLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	232;"	d
SCNuLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	245;"	d
SCNuLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	206;"	d
SCNuMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	254;"	d
SCNuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	260;"	d
SCNuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	265;"	d
SCNx16	dnn/contrib/rapidjson/msinttypes/inttypes.h	216;"	d
SCNx32	dnn/contrib/rapidjson/msinttypes/inttypes.h	229;"	d
SCNx64	dnn/contrib/rapidjson/msinttypes/inttypes.h	242;"	d
SCNx8	dnn/contrib/rapidjson/msinttypes/inttypes.h	203;"	d
SCNxFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	224;"	d
SCNxFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	237;"	d
SCNxFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	250;"	d
SCNxFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	211;"	d
SCNxLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	220;"	d
SCNxLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	233;"	d
SCNxLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	246;"	d
SCNxLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	207;"	d
SCNxMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	255;"	d
SCNxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	261;"	d
SCNxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	266;"	d
SERIALIZE_METHOD	dnn/io/serialize.h	265;"	d
SERIALIZE_REPEATED_METHOD	dnn/io/serialize.h	281;"	d
SIGN_FLAG	dnn/contrib/spdlog/details/format.h	/^    SIGN_FLAG = 1, PLUS_FLAG = 2, MINUS_FLAG = 4, HASH_FLAG = 8,$/;"	e	enum:fmt::__anon29
SIG_ATOMIC_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	242;"	d
SIG_ATOMIC_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	241;"	d
SINGLE_MEMFUNCPTR_SIZE	dnn/util/fast_delegate.h	/^const int SINGLE_MEMFUNCPTR_SIZE = sizeof(void (GenericClass::*)());$/;"	m	namespace:fastdelegate::detail
SIZE	dnn/contrib/spdlog/details/format.h	/^    enum { SIZE = N + (N == 0 || N >= ArgList::MAX_PACKED_ARGS ? 1 : 0) };$/;"	e	enum:fmt::internal::ArgArray::__anon30
SIZE_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	246;"	d
SIZE_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	248;"	d
SPDLOG_DEBUG	dnn/contrib/spdlog/spdlog.h	146;"	d
SPDLOG_DEBUG	dnn/contrib/spdlog/spdlog.h	148;"	d
SPDLOG_NOEXCEPT	dnn/contrib/spdlog/common.h	34;"	d
SPDLOG_NOEXCEPT	dnn/contrib/spdlog/common.h	36;"	d
SPDLOG_NOEXCEPT	dnn/contrib/spdlog/details/async_log_helper.h	/^async_msg(async_msg&& other) SPDLOG_NOEXCEPT:$/;"	m	struct:spdlog::details::async_log_helper::async_msg
SPDLOG_TRACE	dnn/contrib/spdlog/spdlog.h	140;"	d
SPDLOG_TRACE	dnn/contrib/spdlog/spdlog.h	142;"	d
SRMMethods	dnn/learning_rules/srm_methods.h	/^class SRMMethods {$/;"	c	namespace:dnn
SRMNeuron	dnn/neurons/srm_neuron.h	/^class SRMNeuron : public SpikeNeuron<SRMNeuronC, SRMNeuronState> {$/;"	c	namespace:dnn
SRMNeuronC	dnn/neurons/srm_neuron.h	/^    SRMNeuronC() $/;"	f	struct:dnn::SRMNeuronC
SRMNeuronC	dnn/neurons/srm_neuron.h	/^struct SRMNeuronC : public Serializable<Protos::SRMNeuronC> {$/;"	s	namespace:dnn
SRMNeuronState	dnn/neurons/srm_neuron.h	/^    SRMNeuronState() $/;"	f	struct:dnn::SRMNeuronState
SRMNeuronState	dnn/neurons/srm_neuron.h	/^struct SRMNeuronState : public Serializable<Protos::SRMNeuronState>  {$/;"	s	namespace:dnn
STATIC_ASSERTION_FAILURE	dnn/contrib/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	s
STDSynapse	dnn/synapses/std_synapse.h	/^class STDSynapse : public Synapse<STDSynapseC, STDSynapseState> {$/;"	c	namespace:dnn
STDSynapseC	dnn/synapses/std_synapse.h	/^    STDSynapseC() : psp_decay(2.0), amp(1.0), gamma(0.65), tau_d(400.0) {}$/;"	f	struct:dnn::STDSynapseC
STDSynapseC	dnn/synapses/std_synapse.h	/^struct STDSynapseC : public Serializable<Protos::STDSynapseC>  {$/;"	s	namespace:dnn
STDSynapseState	dnn/synapses/std_synapse.h	/^    STDSynapseState() : res(1.0) {}$/;"	f	struct:dnn::STDSynapseState
STDSynapseState	dnn/synapses/std_synapse.h	/^struct STDSynapseState : public Serializable<Protos::STDSynapseState>  {$/;"	s	namespace:dnn
STRING	dnn/contrib/spdlog/details/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
S_MUL	dnn/contrib/kiss_fft/_kiss_fft_guts.h	67;"	d
S_MUL	dnn/contrib/kiss_fft/_kiss_fft_guts.h	86;"	d
S_MUL	dnn/contrib/kiss_fft/kissfft.hh	/^        scalar_type S_MUL( const scalar_type & a,const scalar_type & b) { return a*b;}$/;"	f	class:kissfft
S_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class S_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate0
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate1
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate2
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate3
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate4
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate5
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate6
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate7
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate8
SelectIf	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C, typename T1, typename T2> struct SelectIf : SelectIfCond<C::Value, T1, T2> {};$/;"	s	namespace:internal
SelectIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C, typename T1, typename T2> struct SelectIfCond : SelectIfImpl<C>::template Apply<T1,T2> {};$/;"	s	namespace:internal
SelectIfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	namespace:internal
SelectIfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	namespace:internal
Self	dnn/io/serialize.h	/^    typedef Serializable<Proto> Self;$/;"	t	class:dnn::Serializable
Self	dnn/io/serialize.h	/^    typedef SerializableBase Self;$/;"	t	class:dnn::SerializableBase
SelfType	dnn/util/fast_delegate.h	/^  typedef FastDelegate SelfType;$/;"	t	class:fastdelegate::FastDelegate
Serializable	dnn/io/serialize.h	/^class Serializable : public SerializableBase {$/;"	c	namespace:dnn
SerializableBase	dnn/io/serialize.h	/^    SerializableBase() : mode(ProcessingOutput), messages(nullptr), header(nullptr) {$/;"	f	class:dnn::SerializableBase
SerializableBase	dnn/io/serialize.h	/^class SerializableBase  : public Object {$/;"	c	namespace:dnn
Set	dnn/contrib/rapidjson/error/error.h	/^    void Set(ParseErrorCode code, size_t offset = 0) { code_ = code; offset_ = offset; }$/;"	f	struct:ParseResult
SetArray	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetArray() {  this->~GenericValue(); new (this) GenericValue(kArrayType); return *this; }$/;"	f	class:GenericValue
SetArrayRaw	dnn/contrib/rapidjson/document.h	/^    void SetArrayRaw(GenericValue* values, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetBool	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetBool(bool b) { this->~GenericValue(); new (this) GenericValue(b); return *this; }$/;"	f	class:GenericValue
SetDouble	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetDouble(double d)       { this->~GenericValue(); new (this) GenericValue(d);    return *this; }$/;"	f	class:GenericValue
SetIndent	dnn/contrib/rapidjson/prettywriter.h	/^    PrettyWriter& SetIndent(Ch indentChar, unsigned indentCharCount) {$/;"	f	class:PrettyWriter
SetInt	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetInt(int i)             { this->~GenericValue(); new (this) GenericValue(i);    return *this; }$/;"	f	class:GenericValue
SetInt64	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetInt64(int64_t i64)     { this->~GenericValue(); new (this) GenericValue(i64);  return *this; }$/;"	f	class:GenericValue
SetLength	dnn/contrib/rapidjson/document.h	/^        inline void     SetLength(SizeType len) { str[LenPos] = (Ch)(MaxSize -  len); }$/;"	f	struct:GenericValue::ShortString
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate0
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate1
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate2
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate3
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate4
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate5
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate6
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate7
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate8
SetMementoFrom	dnn/util/fast_delegate.h	/^	void SetMementoFrom(const DelegateMemento &right)  {$/;"	f	class:fastdelegate::DelegateMemento
SetNull	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetNull() { this->~GenericValue(); new (this) GenericValue(); return *this; }$/;"	f	class:GenericValue
SetObject	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }$/;"	f	class:GenericValue
SetObjectRaw	dnn/contrib/rapidjson/document.h	/^    void SetObjectRaw(Member* members, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetParseError	dnn/contrib/rapidjson/reader.h	/^    void SetParseError(ParseErrorCode code, size_t offset) { parseResult_.Set(code, offset); }$/;"	f	class:GenericReader
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s) { this->~GenericValue(); SetStringRaw(s); return *this; }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, Allocator& allocator) { return SetString(s, internal::StrLen(s), allocator); }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length) { return SetString(StringRef(s, length)); }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length, Allocator& allocator) { this->~GenericValue(); SetStringRaw(StringRef(s, length), allocator); return *this; }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const std::basic_string<Ch>& s, Allocator& allocator) { return SetString(s.data(), s.size(), allocator); }$/;"	f	class:GenericValue
SetStringRaw	dnn/contrib/rapidjson/document.h	/^    void SetStringRaw(StringRefType s, Allocator& allocator) {$/;"	f	class:GenericValue
SetUint	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetUint(unsigned u)       { this->~GenericValue(); new (this) GenericValue(u);    return *this; }$/;"	f	class:GenericValue
SetUint64	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetUint64(uint64_t u64)   { this->~GenericValue(); new (this) GenericValue(u64);  return *this; }$/;"	f	class:GenericValue
SfinaeTag	dnn/contrib/rapidjson/internal/meta.h	/^struct SfinaeTag {};$/;"	s	namespace:internal
ShapeletInit	shapelets/shapelets_algo.cpp	/^ShapeletInit::ShapeletInit() {$/;"	f	class:dnn::shapelets::ShapeletInit
ShapeletInit	shapelets/shapelets_algo.h	/^class ShapeletInit {$/;"	c	namespace:dnn::shapelets
ShapeletsAlgo	shapelets/shapelets_algo.cpp	/^ShapeletsAlgo::ShapeletsAlgo(const ShapeletsConfig &conf)$/;"	f	class:dnn::shapelets::ShapeletsAlgo
ShapeletsAlgo	shapelets/shapelets_algo.h	/^    ShapeletsAlgo() {}$/;"	f	class:dnn::shapelets::ShapeletsAlgo
ShapeletsAlgo	shapelets/shapelets_algo.h	/^class ShapeletsAlgo {$/;"	c	namespace:dnn::shapelets
ShapeletsConfig	shapelets/shapelets_config.h	/^    ShapeletsConfig()$/;"	f	struct:dnn::shapelets::ShapeletsConfig
ShapeletsConfig	shapelets/shapelets_config.h	/^struct ShapeletsConfig : public Serializable<Protos::ShapeletsConfig> {$/;"	s	namespace:dnn::shapelets
ShortString	dnn/contrib/rapidjson/document.h	/^    struct ShortString {$/;"	s	class:GenericValue
ShrinkToFit	dnn/contrib/rapidjson/internal/stack.h	/^    void ShrinkToFit() { $/;"	f	class:internal::Stack
ShrinkToFit	dnn/contrib/rapidjson/memorybuffer.h	/^    void ShrinkToFit() { stack_.ShrinkToFit(); }$/;"	f	struct:GenericMemoryBuffer
ShrinkToFit	dnn/contrib/rapidjson/stringbuffer.h	/^    void ShrinkToFit() {$/;"	f	class:GenericStringBuffer
Sign	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool Sign() const { return (u & kSignMask) != 0; }$/;"	f	class:internal::Double
SignChecker	dnn/contrib/spdlog/details/format.h	/^struct SignChecker {$/;"	s	namespace:fmt::internal
SignChecker	dnn/contrib/spdlog/details/format.h	/^struct SignChecker<false> {$/;"	s	namespace:fmt::internal
Significand	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t Significand() const { return u & kSignificandMask; }$/;"	f	class:internal::Double
Sim	dnn/sim/sim.h	/^	Sim(const Constants &_c) : c(_c), duration(0.0) {$/;"	f	class:dnn::Sim
Sim	dnn/sim/sim.h	/^class Sim : public Printable {$/;"	c	namespace:dnn
SimConfiguration	dnn/base/constants.h	/^struct SimConfiguration : public Printable {$/;"	s	namespace:dnn
SimInfo	dnn/sim/sim_info.h	/^	SimInfo() : pastTime(0.0) {}$/;"	f	struct:dnn::SimInfo
SimInfo	dnn/sim/sim_info.h	/^struct SimInfo : public Serializable<Protos::SimInfo>  {$/;"	s	namespace:dnn
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc {$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc< SINGLE_MEMFUNCPTR_SIZE + sizeof(int) >  {$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE + 2*sizeof(int) >$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE + 3*sizeof(int) >$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE>  {$/;"	s	namespace:fastdelegate::detail
Size	dnn/contrib/rapidjson/allocators.h	/^    size_t Size() const {$/;"	f	class:MemoryPoolAllocator
Size	dnn/contrib/rapidjson/document.h	/^    SizeType Size() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size; }$/;"	f	class:GenericValue
SizeType	dnn/contrib/rapidjson/rapidjson.h	/^typedef unsigned SizeType;$/;"	t
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^template<> inline void SkipWhitespace(InsituStringStream& is) { $/;"	f
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^template<> inline void SkipWhitespace(StringStream& is) {$/;"	f
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^void SkipWhitespace(InputStream& is) {$/;"	f
SkipWhitespace_SIMD	dnn/contrib/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p) {$/;"	f
SlidingLtd	dnn/weight_normalizations/sliding_ltd.h	/^class SlidingLtd : public WeightNormalization<SlidingLtdC, SlidingLtdState> {$/;"	c	namespace:dnn
SlidingLtdC	dnn/weight_normalizations/sliding_ltd.h	/^    SlidingLtdC() $/;"	f	struct:dnn::SlidingLtdC
SlidingLtdC	dnn/weight_normalizations/sliding_ltd.h	/^struct SlidingLtdC : public Serializable<Protos::SlidingLtdC> {$/;"	s	namespace:dnn
SlidingLtdState	dnn/weight_normalizations/sliding_ltd.h	/^    SlidingLtdState() $/;"	f	struct:dnn::SlidingLtdState
SlidingLtdState	dnn/weight_normalizations/sliding_ltd.h	/^struct SlidingLtdState : public Serializable<Protos::SlidingLtdState>  {$/;"	s	namespace:dnn
SpikeNeuron	dnn/neurons/spike_neuron.h	/^class SpikeNeuron : public SpikeNeuronBase {$/;"	c	namespace:dnn
SpikeNeuronBase	dnn/neurons/spike_neuron.h	/^	SpikeNeuronBase() : input_queue_lock(ATOMIC_FLAG_INIT), _fired(false) {$/;"	f	class:dnn::SpikeNeuronBase
SpikeNeuronBase	dnn/neurons/spike_neuron.h	/^class SpikeNeuronBase : public SerializableBase {$/;"	c	namespace:dnn
SpikeNeuronInfo	dnn/neurons/spike_neuron.h	/^struct SpikeNeuronInfo : public Serializable<Protos::SpikeNeuronInfo> {$/;"	s	namespace:dnn
SpikeNeuronInterface	dnn/neurons/spike_neuron.h	/^struct SpikeNeuronInterface {$/;"	s	namespace:dnn
SpikeSequenceNeuron	dnn/neurons/spike_sequence_neuron.h	/^class SpikeSequenceNeuron : public SpikeNeuron<SpikeSequenceNeuronC, SpikeSequenceNeuronState> {$/;"	c	namespace:dnn
SpikeSequenceNeuronC	dnn/neurons/spike_sequence_neuron.h	/^    SpikeSequenceNeuronC() $/;"	f	struct:dnn::SpikeSequenceNeuronC
SpikeSequenceNeuronC	dnn/neurons/spike_sequence_neuron.h	/^struct SpikeSequenceNeuronC : public Serializable<Protos::SpikeSequenceNeuronC> {$/;"	s	namespace:dnn
SpikeSequenceNeuronState	dnn/neurons/spike_sequence_neuron.h	/^    SpikeSequenceNeuronState() $/;"	f	struct:dnn::SpikeSequenceNeuronState
SpikeSequenceNeuronState	dnn/neurons/spike_sequence_neuron.h	/^struct SpikeSequenceNeuronState : public Serializable<Protos::SpikeSequenceNeuronState>  {$/;"	s	namespace:dnn
SpikesList	dnn/util/spikes_list.h	/^	SpikesList() {}$/;"	f	struct:dnn::SpikesList
SpikesList	dnn/util/spikes_list.h	/^	SpikesList(const size_t& size) {$/;"	f	struct:dnn::SpikesList
SpikesList	dnn/util/spikes_list.h	/^struct SpikesList : public SerializableBase {$/;"	s	namespace:dnn
SpikesListInfo	dnn/util/spikes_list.h	/^struct SpikesListInfo : public Serializable<Protos::SpikesListInfo> {$/;"	s	namespace:dnn
SpikesSequence	dnn/util/spikes_list.h	/^struct SpikesSequence : public Serializable<Protos::SpikesSequence> {$/;"	s	namespace:dnn
Spikework	spikework/spikework.cpp	/^Spikework::Spikework(const vector<string> &args) {$/;"	f	class:dnn::Spikework
Spikework	spikework/spikework.h	/^class Spikework {$/;"	c	namespace:dnn
SpinningBarrier	dnn/util/spinning_barrier.h	/^    SpinningBarrier (unsigned int n) : n_ (n), nwait_ (0), step_(0), _fail(false) {}$/;"	f	class:dnn::SpinningBarrier
SpinningBarrier	dnn/util/spinning_barrier.h	/^class SpinningBarrier$/;"	c	namespace:dnn
Split	shapelets/shapelets_algo.cpp	/^    Split($/;"	f	struct:dnn::shapelets::Split
Split	shapelets/shapelets_algo.cpp	/^    Split() {}$/;"	f	struct:dnn::shapelets::Split
Split	shapelets/shapelets_algo.cpp	/^struct Split {$/;"	s	namespace:dnn::shapelets	file:
SplitStat	shapelets/orderline.h	/^        SplitStat() : gain(0.0), gap(0.0), split_dist(0.0), split_position(std::numeric_limits<size_t>::max()) {}$/;"	f	struct:dnn::shapelets::Orderline::SplitStat
SplitStat	shapelets/orderline.h	/^    struct SplitStat : public Printable {$/;"	s	class:dnn::shapelets::Orderline
Stack	dnn/contrib/rapidjson/internal/stack.h	/^    Stack(Allocator* allocator, size_t stackCapacity) : allocator_(allocator), ownAllocator_(0), stack_(0), stackTop_(0), stackEnd_(0), initialCapacity_(stackCapacity) {$/;"	f	class:internal::Stack
Stack	dnn/contrib/rapidjson/internal/stack.h	/^    Stack(Stack&& rhs)$/;"	f	class:internal::Stack
Stack	dnn/contrib/rapidjson/internal/stack.h	/^class Stack {$/;"	c	namespace:internal
Stack	spikework/spikework.h	/^    class Stack {$/;"	c	class:dnn::Spikework
StackStream	dnn/contrib/rapidjson/reader.h	/^        StackStream(internal::Stack<StackAllocator>& stack) : stack_(stack), length_(0) {}$/;"	f	class:GenericReader::StackStream
StackStream	dnn/contrib/rapidjson/reader.h	/^    class StackStream {$/;"	c	class:GenericReader
StartArray	dnn/contrib/rapidjson/document.h	/^    bool StartArray() { new (stack_.template Push<ValueType>()) ValueType(kArrayType); return true; }$/;"	f	class:GenericDocument
StartArray	dnn/contrib/rapidjson/prettywriter.h	/^    bool StartArray() {$/;"	f	class:PrettyWriter
StartArray	dnn/contrib/rapidjson/reader.h	/^    bool StartArray() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartArray	dnn/contrib/rapidjson/writer.h	/^    bool StartArray() {$/;"	f	class:Writer
StartObject	dnn/contrib/rapidjson/document.h	/^    bool StartObject() { new (stack_.template Push<ValueType>()) ValueType(kObjectType); return true; }$/;"	f	class:GenericDocument
StartObject	dnn/contrib/rapidjson/prettywriter.h	/^    bool StartObject() {$/;"	f	class:PrettyWriter
StartObject	dnn/contrib/rapidjson/reader.h	/^    bool StartObject() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartObject	dnn/contrib/rapidjson/writer.h	/^    bool StartObject() {$/;"	f	class:Writer
Stat	dnn/util/statistics.h	/^	Stat() : low_lim(-1), high_lim(-1), __counter(0) {}$/;"	f	struct:dnn::Stat
Stat	dnn/util/statistics.h	/^struct Stat : public Serializable<Protos::Stat> {$/;"	s	namespace:dnn
StaticAssertTest	dnn/contrib/rapidjson/rapidjson.h	/^template<int x> struct StaticAssertTest {};$/;"	s
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)();$/;"	t	class:fastdelegate::FastDelegate0
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
StaticSynapse	dnn/synapses/static_synapse.h	/^class StaticSynapse : public Synapse<StaticSynapseC, StaticSynapseState> {$/;"	c	namespace:dnn
StaticSynapseC	dnn/synapses/static_synapse.h	/^    StaticSynapseC() : psp_decay(15.0), amp(1.0) {}$/;"	f	struct:dnn::StaticSynapseC
StaticSynapseC	dnn/synapses/static_synapse.h	/^struct StaticSynapseC : public Serializable<Protos::StaticSynapseC>  {$/;"	s	namespace:dnn
StaticSynapseState	dnn/synapses/static_synapse.h	/^    StaticSynapseState() {}$/;"	f	struct:dnn::StaticSynapseState
StaticSynapseState	dnn/synapses/static_synapse.h	/^struct StaticSynapseState : public Serializable<Protos::StaticSynapseState>  {$/;"	s	namespace:dnn
Statistics	dnn/util/statistics.h	/^	Statistics() : low_lim(-1), high_lim(10000), _on(false) {$/;"	f	class:dnn::Statistics
Statistics	dnn/util/statistics.h	/^class Statistics : public SerializableBase {$/;"	c	namespace:dnn
StatisticsInfo	dnn/util/statistics.h	/^struct StatisticsInfo : public Serializable<Protos::StatisticsInfo> {$/;"	s	namespace:dnn
Stats	shapelets/stats.cpp	/^Stats::Stats(const Dataset &_ds) : ds(_ds) {$/;"	f	class:dnn::shapelets::Stats
Stats	shapelets/stats.h	/^class Stats {$/;"	c	namespace:dnn::shapelets
Stdp	dnn/learning_rules/stdp.h	/^class Stdp : public LearningRule<StdpC, StdpState, SpikeNeuronBase> {$/;"	c	namespace:dnn
StdpC	dnn/learning_rules/stdp.h	/^    StdpC() $/;"	f	struct:dnn::StdpC
StdpC	dnn/learning_rules/stdp.h	/^struct StdpC : public Serializable<Protos::StdpC> {$/;"	s	namespace:dnn
StdpState	dnn/learning_rules/stdp.h	/^    StdpState() $/;"	f	struct:dnn::StdpState
StdpState	dnn/learning_rules/stdp.h	/^struct StdpState : public Serializable<Protos::StdpState>  {$/;"	s	namespace:dnn
StdpTime	dnn/learning_rules/stdp_time.h	/^class StdpTime : public LearningRule<StdpTimeC, StdpTimeState, SpikeNeuronBase> {$/;"	c	namespace:dnn
StdpTimeC	dnn/learning_rules/stdp_time.h	/^    StdpTimeC() $/;"	f	struct:dnn::StdpTimeC
StdpTimeC	dnn/learning_rules/stdp_time.h	/^struct StdpTimeC : public Serializable<Protos::StdpTimeC> {$/;"	s	namespace:dnn
StdpTimeState	dnn/learning_rules/stdp_time.h	/^    StdpTimeState() $/;"	f	struct:dnn::StdpTimeState
StdpTimeState	dnn/learning_rules/stdp_time.h	/^struct StdpTimeState : public Serializable<Protos::StdpTimeState>  {$/;"	s	namespace:dnn
Stochastic	dnn/connections/stochastic.h	/^class Stochastic : public Connection<StochasticC> {$/;"	c	namespace:dnn
StochasticC	dnn/connections/stochastic.h	/^    StochasticC() : prob(0.0) {}$/;"	f	struct:dnn::StochasticC
StochasticC	dnn/connections/stochastic.h	/^struct StochasticC : public Serializable<Protos::StochasticC> {$/;"	s	namespace:dnn
StrFormatSpec	dnn/contrib/spdlog/details/format.h	/^    StrFormatSpec(const Char *str, unsigned width, FillChar fill)$/;"	f	class:fmt::StrFormatSpec
StrFormatSpec	dnn/contrib/spdlog/details/format.h	/^class StrFormatSpec : public AlignSpec {$/;"	c	namespace:fmt
StrLen	dnn/contrib/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const Ch* s) {$/;"	f	namespace:internal
Stream	dnn/io/stream.h	/^    Stream(istream &str, Repr _r = Binary, bool _destroy_stream=false)$/;"	f	class:dnn::Stream
Stream	dnn/io/stream.h	/^    Stream(ostream &str, Repr _r = Binary, bool _destroy_stream=false)$/;"	f	class:dnn::Stream
Stream	dnn/io/stream.h	/^class Stream {$/;"	c	namespace:dnn
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original), original_(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 0> {$/;"	c	namespace:internal
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 1> {$/;"	c	namespace:internal
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits {$/;"	s
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits<GenericInsituStringStream<Encoding> > {$/;"	s
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits<GenericStringStream<Encoding> > {$/;"	s
String	dnn/contrib/rapidjson/document.h	/^    bool String(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
String	dnn/contrib/rapidjson/document.h	/^    struct String {$/;"	s	class:GenericValue
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/reader.h	/^    bool String(const Ch*, SizeType, bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:Writer
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:Writer
StringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^typedef GenericStringBuffer<UTF8<> > StringBuffer;$/;"	t
StringEqual	dnn/contrib/rapidjson/document.h	/^    bool StringEqual(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str) {$/;"	f
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str, size_t length) {$/;"	f
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const std::basic_string<CharType>& str) {$/;"	f
StringRef	dnn/contrib/spdlog/details/format.h	/^typedef BasicStringRef<char> StringRef;$/;"	t	namespace:fmt
StringRefType	dnn/contrib/rapidjson/document.h	/^    typedef GenericStringRef<Ch> StringRefType;     \/\/!< Reference to a constant string$/;"	t	class:GenericValue
StringStream	dnn/contrib/rapidjson/rapidjson.h	/^typedef GenericStringStream<UTF8<> > StringStream;$/;"	t
StringToken	dnn/contrib/rapidjson/reader.h	/^        StringToken,$/;"	e	enum:GenericReader::Token
StringValue	dnn/contrib/spdlog/details/format.h	/^    struct StringValue {$/;"	s	struct:fmt::internal::Value
StrtodBigInteger	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodBigInteger(double approx, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodDiyFp	dnn/contrib/rapidjson/internal/strtod.h	/^inline bool StrtodDiyFp(const char* decimals, size_t length, size_t decimalPosition, int exp, double* result) {$/;"	f	namespace:internal
StrtodFast	dnn/contrib/rapidjson/internal/strtod.h	/^inline bool StrtodFast(double d, int p, double* result) {$/;"	f	namespace:internal
StrtodFullPrecision	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodFullPrecision(double d, int p, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodNormalPrecision	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodNormalPrecision(double d, int p) {$/;"	f	namespace:internal
SubSeqRet	mpl/mpl.h	/^	struct SubSeqRet {$/;"	s	class:dnn::mpl::MatchingPursuit
Subsequence	shapelets/subsequence.h	/^    Subsequence() : _from(0), _length(0) {}$/;"	f	class:dnn::shapelets::Subsequence
Subsequence	shapelets/subsequence.h	/^    Subsequence(Ptr<TimeSeries> referent, size_t id, size_t from, size_t length)$/;"	f	class:dnn::shapelets::Subsequence
Subsequence	shapelets/subsequence.h	/^class Subsequence : public SerializableBase {$/;"	c	namespace:dnn::shapelets
Supported	dnn/contrib/spdlog/details/format.h	/^    typedef Null<T> Supported;$/;"	t	struct:fmt::internal::WCharHelper
Supported	dnn/contrib/spdlog/details/format.h	/^    typedef T Supported;$/;"	t	struct:fmt::internal::WCharHelper
SynSpike	dnn/base/base.h	/^    SynSpike(const size_t &_n_id, const size_t &_syn_id, const double &_t)$/;"	f	struct:dnn::SynSpike
SynSpike	dnn/base/base.h	/^struct SynSpike : public Printable {$/;"	s	namespace:dnn
Synapse	dnn/synapses/synapse.h	/^class Synapse : public SynapseBase {$/;"	c	namespace:dnn
SynapseBase	dnn/synapses/synapse.h	/^	SynapseBase() : _fired(false), _potential(0.0), _weight(0.0), _dendriteDelay(0.0) {}$/;"	f	class:dnn::SynapseBase
SynapseBase	dnn/synapses/synapse.h	/^class SynapseBase : public SerializableBase {$/;"	c	namespace:dnn
SynapseInfo	dnn/synapses/synapse.h	/^struct SynapseInfo : public Serializable<Protos::SynapseInfo> {$/;"	s	namespace:dnn
SynapseInterface	dnn/synapses/synapse.h	/^struct SynapseInterface {$/;"	s	namespace:dnn
SystemError	dnn/contrib/spdlog/details/format.h	/^    SystemError() {}$/;"	f	class:fmt::SystemError
SystemError	dnn/contrib/spdlog/details/format.h	/^    SystemError(int error_code, CStringRef message) {$/;"	f	class:fmt::SystemError
SystemError	dnn/contrib/spdlog/details/format.h	/^class SystemError : public internal::RuntimeError {$/;"	c	namespace:fmt
TAIL	dnn/contrib/rapidjson/encodings.h	132;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	154;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	161;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	180;"	d
TMemoryWriter	dnn/contrib/spdlog/details/format.h	2642;"	d
TMemoryWriter	dnn/contrib/spdlog/details/format.h	2644;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	131;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	153;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	160;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	179;"	d
TRY	dnn/util/util.h	50;"	d
T_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class T_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = Encoding::Take(is_); return c; }$/;"	f	class:EncodedInputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = takeFunc_(*is_); return c; }$/;"	f	class:AutoUTFInputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false);  }$/;"	f	class:EncodedOutputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFOutputStream
Take	dnn/contrib/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:ASCII
Take	dnn/contrib/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:UTF8
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16BE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16LE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32BE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32LE
Take	dnn/contrib/rapidjson/filereadstream.h	/^    Ch Take() { Ch c = *current_; Read(); return c; }$/;"	f	class:FileReadStream
Take	dnn/contrib/rapidjson/filestream.h	/^    char Take() { char c = current_; Read(); return c; }$/;"	f	class:FileStream
Take	dnn/contrib/rapidjson/filewritestream.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Take	dnn/contrib/rapidjson/memorystream.h	/^    Ch Take() { return (src_ == end_) ? '\\0' : *src_++; }$/;"	f	struct:MemoryStream
Take	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericInsituStringStream
Take	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericStringStream
Take	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:ASCII
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16BE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16LE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32BE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF8
TakeFunc	dnn/contrib/rapidjson/encodedstream.h	/^    typedef Ch (*TakeFunc)(InputByteStream& is);$/;"	t	class:AutoUTFInputStream
TakePush	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() {$/;"	f	class:GenericReader::NumberStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false);  return 0; }$/;"	f	class:EncodedOutputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_->Tell(); }$/;"	f	class:AutoUTFInputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_.Tell(); }$/;"	f	class:EncodedInputStream
Tell	dnn/contrib/rapidjson/filereadstream.h	/^    size_t Tell() const { return count_ + static_cast<size_t>(current_ - buffer_); }$/;"	f	class:FileReadStream
Tell	dnn/contrib/rapidjson/filestream.h	/^    size_t Tell() const { return count_; }$/;"	f	class:FileStream
Tell	dnn/contrib/rapidjson/filewritestream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Tell	dnn/contrib/rapidjson/memorystream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - begin_); }$/;"	f	struct:MemoryStream
Tell	dnn/contrib/rapidjson/rapidjson.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericStringStream
Tell	dnn/contrib/rapidjson/rapidjson.h	/^    size_t Tell() { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericInsituStringStream
Tell	dnn/contrib/rapidjson/reader.h	/^        size_t Tell() { return is.Tell(); }$/;"	f	class:GenericReader::NumberStream
Text	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	e	enum:dnn::Stream::Repr
Time	dnn/base/base.h	/^    Time(double _dt) : t(0), dt(_dt) {}$/;"	f	struct:dnn::Time
Time	dnn/base/base.h	/^struct Time {$/;"	s	namespace:dnn
TimeSeries	dnn/util/time_series.h	/^	TimeSeries() {}$/;"	f	struct:dnn::TimeSeries
TimeSeries	dnn/util/time_series.h	/^	TimeSeries(const string &filename, const string &format) {$/;"	f	struct:dnn::TimeSeries
TimeSeries	dnn/util/time_series.h	/^	TimeSeries(const vector<double> &v) : TimeSeriesGeneric<TimeSeriesData, double>(v) {}$/;"	f	struct:dnn::TimeSeries
TimeSeries	dnn/util/time_series.h	/^struct TimeSeries : public SerializableBase, public TimeSeriesGeneric<TimeSeriesData, double> {$/;"	s	namespace:dnn
TimeSeriesComplex	dnn/util/time_series.h	/^struct TimeSeriesComplex : public SerializableBase, public TimeSeriesGeneric<TimeSeriesComplexData, std::complex<double>> {$/;"	s	namespace:dnn
TimeSeriesComplexData	dnn/util/time_series.h	/^struct TimeSeriesComplexData : public Serializable<Protos::TimeSeriesComplexData> {$/;"	s	namespace:dnn
TimeSeriesData	dnn/util/time_series.h	/^struct TimeSeriesData : public Serializable<Protos::TimeSeriesData> {$/;"	s	namespace:dnn
TimeSeriesDimInfo	dnn/util/time_series.h	/^	TimeSeriesDimInfo() : size(0) {}$/;"	f	struct:dnn::TimeSeriesDimInfo
TimeSeriesDimInfo	dnn/util/time_series.h	/^struct TimeSeriesDimInfo : public Serializable<Protos::TimeSeriesDimInfo> {$/;"	s	namespace:dnn
TimeSeriesGeneric	dnn/util/time_series.h	/^	TimeSeriesGeneric() {}$/;"	f	struct:dnn::TimeSeriesGeneric
TimeSeriesGeneric	dnn/util/time_series.h	/^	TimeSeriesGeneric(const vector<ELEM> &v) {$/;"	f	struct:dnn::TimeSeriesGeneric
TimeSeriesGeneric	dnn/util/time_series.h	/^struct TimeSeriesGeneric {$/;"	s	namespace:dnn
TimeSeriesInfo	dnn/util/time_series.h	/^	TimeSeriesInfo() {}$/;"	f	struct:dnn::TimeSeriesInfo
TimeSeriesInfo	dnn/util/time_series.h	/^struct TimeSeriesInfo : public Serializable<Protos::TimeSeriesInfo> {$/;"	s	namespace:dnn
TimeSeriesInterface	dnn/util/time_series.h	/^struct TimeSeriesInterface {$/;"	s	namespace:dnn
Tmax	tools/dnn_sim/dnn_sim.cpp	/^    double Tmax;$/;"	m	struct:DnnSimOpts	file:
ToBias	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t ToBias() const { return (u & kSignMask) ? ~u + 1 : u | kSignMask; }$/;"	f	class:internal::Double
ToDouble	dnn/contrib/rapidjson/internal/diyfp.h	/^    double ToDouble() const {$/;"	f	struct:internal::DiyFp
Token	dnn/contrib/rapidjson/reader.h	/^    enum Token {$/;"	g	class:GenericReader
Tokenize	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE Token Tokenize(Ch c) {$/;"	f	class:GenericReader
Top	dnn/contrib/rapidjson/internal/stack.h	/^    T* Top() { $/;"	f	class:internal::Stack
Transcode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Transcode(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Transcoder	dnn/contrib/rapidjson/encodings.h	/^struct Transcoder {$/;"	s
Transcoder	dnn/contrib/rapidjson/encodings.h	/^struct Transcoder<Encoding, Encoding> {$/;"	s
Transit	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Transit(IterativeParsingState src, Token token, IterativeParsingState dst, InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
TripleStdp	dnn/learning_rules/triple_stdp.h	/^class TripleStdp : public LearningRule<TripleStdpC, TripleStdpState, SpikeNeuronBase> {$/;"	c	namespace:dnn
TripleStdpC	dnn/learning_rules/triple_stdp.h	/^    TripleStdpC() $/;"	f	struct:dnn::TripleStdpC
TripleStdpC	dnn/learning_rules/triple_stdp.h	/^struct TripleStdpC : public Serializable<Protos::TripleStdpC> {$/;"	s	namespace:dnn
TripleStdpState	dnn/learning_rules/triple_stdp.h	/^    TripleStdpState() $/;"	f	struct:dnn::TripleStdpState
TripleStdpState	dnn/learning_rules/triple_stdp.h	/^struct TripleStdpState : public Serializable<Protos::TripleStdpState>  {$/;"	s	namespace:dnn
TrueToken	dnn/contrib/rapidjson/reader.h	/^        TrueToken,$/;"	e	enum:GenericReader::Token
TrueType	dnn/contrib/rapidjson/internal/meta.h	/^typedef BoolType<true> TrueType;$/;"	t	namespace:internal
Type	dnn/contrib/rapidjson/internal/biginteger.h	/^    typedef uint64_t Type;$/;"	t	class:internal::BigInteger
Type	dnn/contrib/rapidjson/internal/meta.h	/^    typedef BoolType Type;$/;"	t	struct:internal::BoolType
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	t	struct:internal::DisableIfCond
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	t	struct:internal::EnableIfCond
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	t	struct:internal::AddConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	t	struct:internal::RemoveSfinaeTag
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	t	struct:internal::Void
Type	dnn/contrib/rapidjson/rapidjson.h	/^enum Type {$/;"	g
Type	dnn/contrib/spdlog/details/format.h	/^    enum Type {$/;"	g	struct:fmt::internal::Value
Type	dnn/contrib/spdlog/details/format.h	/^    typedef uint32_t Type;$/;"	t	struct:fmt::internal::TypeSelector
Type	dnn/contrib/spdlog/details/format.h	/^    typedef uint64_t Type;$/;"	t	struct:fmt::internal::TypeSelector
TypeSelector	dnn/contrib/spdlog/details/format.h	/^    TypeSelector<std::numeric_limits<T>::digits <= 32>::Type MainType;$/;"	t	struct:fmt::internal::IntTraits
TypeSelector	dnn/contrib/spdlog/details/format.h	/^struct TypeSelector {$/;"	s	namespace:fmt::internal
TypeSelector	dnn/contrib/spdlog/details/format.h	/^struct TypeSelector<false> {$/;"	s	namespace:fmt::internal
TypeSpec	dnn/contrib/spdlog/details/format.h	/^struct TypeSpec : EmptySpec {$/;"	s	namespace:fmt
U	dnn/contrib/rapidjson/document.h	/^        struct U {$/;"	s	union:GenericValue::Number
UINT	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	278;"	d
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	55;"	d
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	67;"	d
UINT16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	183;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	279;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	56;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	68;"	d
UINT32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	184;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	280;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	57;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	69;"	d
UINT64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	185;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	277;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	54;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	66;"	d
UINT8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	182;"	d
UINTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	289;"	d
UINTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	78;"	d
UINTMAX_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	229;"	d
UINTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	219;"	d
UINTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	223;"	d
UINT_FAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	211;"	d
UINT_FAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	212;"	d
UINT_FAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	213;"	d
UINT_FAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	210;"	d
UINT_LEAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	197;"	d
UINT_LEAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	198;"	d
UINT_LEAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	199;"	d
UINT_LEAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	196;"	d
ULONG_LONG	dnn/contrib/spdlog/details/format.h	/^        INT, UINT, LONG_LONG, ULONG_LONG, BOOL, CHAR, LAST_INTEGER_TYPE = CHAR,$/;"	e	enum:fmt::internal::Value::Type
ULongLong	dnn/contrib/spdlog/details/format.h	/^FMT_GCC_EXTENSION typedef unsigned long long ULongLong;$/;"	t	namespace:fmt
UTF16	dnn/contrib/rapidjson/encodings.h	/^struct UTF16 {$/;"	s
UTF16BE	dnn/contrib/rapidjson/encodings.h	/^struct UTF16BE : UTF16<CharType> {$/;"	s
UTF16LE	dnn/contrib/rapidjson/encodings.h	/^struct UTF16LE : UTF16<CharType> {$/;"	s
UTF16ToUTF8	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC fmt::internal::UTF16ToUTF8::UTF16ToUTF8(fmt::WStringRef s) {$/;"	f	class:fmt::internal::UTF16ToUTF8
UTF16ToUTF8	dnn/contrib/spdlog/details/format.h	/^    UTF16ToUTF8() {}$/;"	f	class:fmt::internal::UTF16ToUTF8
UTF16ToUTF8	dnn/contrib/spdlog/details/format.h	/^class UTF16ToUTF8 {$/;"	c	namespace:fmt::internal
UTF32	dnn/contrib/rapidjson/encodings.h	/^struct UTF32 {$/;"	s
UTF32BE	dnn/contrib/rapidjson/encodings.h	/^struct UTF32BE : UTF32<CharType> {$/;"	s
UTF32LE	dnn/contrib/rapidjson/encodings.h	/^struct UTF32LE : UTF32<CharType> {$/;"	s
UTF8	dnn/contrib/rapidjson/encodings.h	/^struct UTF8 {$/;"	s
UTF8ToUTF16	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC fmt::internal::UTF8ToUTF16::UTF8ToUTF16(fmt::StringRef s) {$/;"	f	class:fmt::internal::UTF8ToUTF16
UTF8ToUTF16	dnn/contrib/spdlog/details/format.h	/^class UTF8ToUTF16 {$/;"	c	namespace:fmt::internal
UTFType	dnn/contrib/rapidjson/encodings.h	/^enum UTFType {$/;"	g
Uint	dnn/contrib/rapidjson/document.h	/^    bool Uint(unsigned i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint	dnn/contrib/rapidjson/prettywriter.h	/^    bool Uint(unsigned u)       { PrettyPrefix(kNumberType); return Base::WriteUint(u); }$/;"	f	class:PrettyWriter
Uint	dnn/contrib/rapidjson/reader.h	/^    bool Uint(unsigned) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint	dnn/contrib/rapidjson/writer.h	/^    bool Uint(unsigned u)       { Prefix(kNumberType); return WriteUint(u); }$/;"	f	class:Writer
Uint64	dnn/contrib/rapidjson/document.h	/^    bool Uint64(uint64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint64	dnn/contrib/rapidjson/prettywriter.h	/^    bool Uint64(uint64_t u64)   { PrettyPrefix(kNumberType); return Base::WriteUint64(u64);  }$/;"	f	class:PrettyWriter
Uint64	dnn/contrib/rapidjson/reader.h	/^    bool Uint64(uint64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint64	dnn/contrib/rapidjson/writer.h	/^    bool Uint64(uint64_t u64)   { Prefix(kNumberType); return WriteUint64(u64); }$/;"	f	class:Writer
Uint64Value	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t Uint64Value() const { return u; }$/;"	f	class:internal::Double
UniformDistribution	dnn/util/distributions.h	/^    UniformDistribution(double _from, double _to) : from(_from), to(_to) {}$/;"	f	class:dnn::UniformDistribution
UniformDistribution	dnn/util/distributions.h	/^class UniformDistribution : public Distribution<double> {$/;"	c	namespace:dnn
Unsupported	dnn/contrib/spdlog/details/format.h	/^    typedef Null<T> Unsupported;$/;"	t	struct:fmt::internal::WCharHelper
Unsupported	dnn/contrib/spdlog/details/format.h	/^    typedef T Unsupported;$/;"	t	struct:fmt::internal::WCharHelper
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)();$/;"	t	class:fastdelegate::FastDelegate0
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
Usable	dnn/contrib/rapidjson/document.h	/^        inline static bool Usable(SizeType len) { return            (MaxSize >= len); }$/;"	f	struct:GenericValue::ShortString
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate0	typeref:struct:fastdelegate::FastDelegate0::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate1	typeref:struct:fastdelegate::FastDelegate1::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate2	typeref:struct:fastdelegate::FastDelegate2::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate3	typeref:struct:fastdelegate::FastDelegate3::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate4	typeref:struct:fastdelegate::FastDelegate4::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate5	typeref:struct:fastdelegate::FastDelegate5::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate6	typeref:struct:fastdelegate::FastDelegate6::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate7	typeref:struct:fastdelegate::FastDelegate7::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate8	typeref:struct:fastdelegate::FastDelegate8::SafeBoolStruct
VECTOR_RE	generate_protos.py	/^VECTOR_RE = re.compile("(?:vector|ActVector)+<([^ ]*)>")$/;"	v
Validate	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:AutoUTF
Validate	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:ASCII
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF16
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF32
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF8
Value	dnn/contrib/rapidjson/document.h	/^typedef GenericValue<UTF8<> > Value;$/;"	t
Value	dnn/contrib/rapidjson/internal/ieee754.h	/^    double Value() const { return d; }$/;"	f	class:internal::Double
Value	dnn/contrib/rapidjson/internal/meta.h	/^    enum { Value = (sizeof(Check(Host(), 0)) == sizeof(Yes)) };$/;"	e	enum:internal::IsBaseOfImpl::__anon10
Value	dnn/contrib/rapidjson/internal/meta.h	/^    static const bool Value = Cond;$/;"	m	struct:internal::BoolType
Value	dnn/contrib/spdlog/details/format.h	/^struct Value {$/;"	s	namespace:fmt::internal
ValueIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericValue* ValueIterator;            \/\/!< Value iterator for iterating in array.$/;"	t	class:GenericValue
ValueType	dnn/contrib/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of the document.$/;"	t	class:GenericDocument
ValueType	dnn/contrib/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericMemberIterator
Void	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	s	namespace:internal
VoidToDefaultVoid	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid { typedef T type; };$/;"	s	namespace:fastdelegate::detail
VoidToDefaultVoid	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid<void> { typedef DefaultVoid type; };$/;"	s	namespace:fastdelegate::detail
WArrayWriter	dnn/contrib/spdlog/details/format.h	/^typedef BasicArrayWriter<wchar_t> WArrayWriter;$/;"	t	namespace:fmt
WCHAR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	257;"	d
WCHAR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	254;"	d
WCStringRef	dnn/contrib/spdlog/details/format.h	/^typedef BasicCStringRef<wchar_t> WCStringRef;$/;"	t	namespace:fmt
WCharHelper	dnn/contrib/spdlog/details/format.h	/^struct WCharHelper {$/;"	s	namespace:fmt::internal
WCharHelper	dnn/contrib/spdlog/details/format.h	/^struct WCharHelper<T, wchar_t> {$/;"	s	namespace:fmt::internal
WHITE	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
WIN32_LEAN_AND_MEAN	dnn/contrib/spdlog/details/os.h	32;"	d
WINDOW_LEN	dnn/learning_rules/stdp_time.h	/^    static constexpr double WINDOW_LEN = 100.0;$/;"	m	class:dnn::StdpTime
WINT_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	261;"	d
WINT_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	260;"	d
WMemoryWriter	dnn/contrib/spdlog/details/format.h	/^typedef BasicMemoryWriter<wchar_t> WMemoryWriter;$/;"	t	namespace:fmt
WSTRING	dnn/contrib/spdlog/details/format.h	/^        CSTRING, STRING, WSTRING, POINTER, CUSTOM$/;"	e	enum:fmt::internal::Value::Type
WStringRef	dnn/contrib/spdlog/details/format.h	/^typedef BasicStringRef<wchar_t> WStringRef;$/;"	t	namespace:fmt
WWriter	dnn/contrib/spdlog/details/format.h	/^typedef BasicWriter<wchar_t> WWriter;$/;"	t	namespace:fmt
WeightNormalization	dnn/weight_normalizations/weight_normalization.h	/^class WeightNormalization : public WeightNormalizationBase {$/;"	c	namespace:dnn
WeightNormalizationBase	dnn/weight_normalizations/weight_normalization.h	/^class WeightNormalizationBase : public SerializableBase {$/;"	c	namespace:dnn
WeightNormalizationInterface	dnn/weight_normalizations/weight_normalization.h	/^struct WeightNormalizationInterface {$/;"	s	namespace:dnn
WidthHandler	dnn/contrib/spdlog/details/format.cc	/^    explicit WidthHandler(fmt::FormatSpec &spec) : spec_(spec) {}$/;"	f	class:fmt::__anon32::WidthHandler
WidthHandler	dnn/contrib/spdlog/details/format.cc	/^class WidthHandler : public fmt::internal::ArgVisitor<WidthHandler, unsigned> {$/;"	c	namespace:fmt::__anon32	file:
WidthSpec	dnn/contrib/spdlog/details/format.h	/^    WidthSpec(unsigned width, wchar_t fill) : width_(width), fill_(fill) {}$/;"	f	struct:fmt::WidthSpec
WidthSpec	dnn/contrib/spdlog/details/format.h	/^struct WidthSpec {$/;"	s	namespace:fmt
WindowsError	dnn/contrib/spdlog/details/format.h	/^    WindowsError(int error_code, CStringRef message) {$/;"	f	class:fmt::WindowsError
WindowsError	dnn/contrib/spdlog/details/format.h	/^class WindowsError : public SystemError {$/;"	c	namespace:fmt
WriteBool	dnn/contrib/rapidjson/writer.h	/^    bool WriteBool(bool b)  {$/;"	f	class:Writer
WriteDouble	dnn/contrib/rapidjson/writer.h	/^    bool WriteDouble(double d) {$/;"	f	class:Writer
WriteDouble	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteDouble(double d) {$/;"	f	class:Writer
WriteEndArray	dnn/contrib/rapidjson/writer.h	/^    bool WriteEndArray()    { os_->Put(']'); return true; }$/;"	f	class:Writer
WriteEndObject	dnn/contrib/rapidjson/writer.h	/^    bool WriteEndObject()   { os_->Put('}'); return true; }$/;"	f	class:Writer
WriteExponent	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* WriteExponent(int K, char* buffer) {$/;"	f	namespace:internal
WriteIndent	dnn/contrib/rapidjson/prettywriter.h	/^    void WriteIndent()  {$/;"	f	class:PrettyWriter
WriteInt	dnn/contrib/rapidjson/writer.h	/^    bool WriteInt(int i) {$/;"	f	class:Writer
WriteInt	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt(int i) {$/;"	f	class:Writer
WriteInt64	dnn/contrib/rapidjson/writer.h	/^    bool WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteInt64	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteNull	dnn/contrib/rapidjson/writer.h	/^    bool WriteNull()  {$/;"	f	class:Writer
WriteStartArray	dnn/contrib/rapidjson/writer.h	/^    bool WriteStartArray()  { os_->Put('['); return true; }$/;"	f	class:Writer
WriteStartObject	dnn/contrib/rapidjson/writer.h	/^    bool WriteStartObject() { os_->Put('{'); return true; }$/;"	f	class:Writer
WriteString	dnn/contrib/rapidjson/writer.h	/^    bool WriteString(const Ch* str, SizeType length)  {$/;"	f	class:Writer
WriteUint	dnn/contrib/rapidjson/writer.h	/^    bool WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint64	dnn/contrib/rapidjson/writer.h	/^    bool WriteUint64(uint64_t u64) {$/;"	f	class:Writer
WriteUint64	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint64(uint64_t u) {$/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^    Writer(OutputStream& os, StackAllocator* stackAllocator = 0, size_t levelDepth = kDefaultLevelDepth) : $/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^    Writer(StackAllocator* allocator = 0, size_t levelDepth = kDefaultLevelDepth) :$/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^class Writer {$/;"	c
Writer	dnn/contrib/spdlog/details/format.h	/^typedef BasicWriter<char> Writer;$/;"	t	namespace:fmt
YELLOW	dnn/contrib/spdlog/details/format.h	/^enum Color { BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE };$/;"	e	enum:fmt::Color
Y_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class Y_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
Yes	dnn/contrib/rapidjson/internal/meta.h	/^    typedef char (&Yes)[1];$/;"	t	struct:internal::IsBaseOfImpl
Z16	dnn/contrib/rapidjson/reader.h	674;"	d
Z16	dnn/contrib/rapidjson/reader.h	682;"	d
Z16	dnn/contrib/rapidjson/writer.h	253;"	d
Z16	dnn/contrib/rapidjson/writer.h	261;"	d
_MSC_INTTYPES_H_	dnn/contrib/rapidjson/msinttypes/inttypes.h	38;"	d
_MSC_STDINT_H_	dnn/contrib/rapidjson/msinttypes/stdint.h	38;"	d
_W64	dnn/contrib/rapidjson/msinttypes/stdint.h	102;"	d
_W64	dnn/contrib/rapidjson/msinttypes/stdint.h	104;"	d
__BIN2ASCII_H__	dnn/contrib/pbjson/bin2ascii.h	9;"	d
__FAST_EXP_H_	dnn/util/fastapprox/fastexp.h	42;"	d
__FAST_LOG_H_	dnn/util/fastapprox/fastlog.h	42;"	d
__FAST_POW_H_	dnn/util/fastapprox/fastpow.h	43;"	d
__FAST_SIGMOID_H_	dnn/util/fastapprox/fastsigmoid.h	42;"	d
__FAST_TRIG_H_	dnn/util/fastapprox/fasttrig.h	42;"	d
__SSE_H_	dnn/util/fastapprox/sse.h	42;"	d
__calculateDynamicsDefault	dnn/learning_rules/learning_rule.h	/^	static void __calculateDynamicsDefault(const Time &t) {}$/;"	f	class:dnn::LearningRuleBase
__calculateDynamicsDefault	dnn/neurons/spike_neuron.h	/^	static void __calculateDynamicsDefault(const Time &t, const double &Iinput, const double &Isyn) {$/;"	f	class:dnn::SpikeNeuronBase
__calculateDynamicsDefault	dnn/weight_normalizations/weight_normalization.h	/^	static void __calculateDynamicsDefault(const Time &t) {$/;"	f	class:dnn::WeightNormalizationBase
__counter	dnn/util/statistics.h	/^	size_t __counter;$/;"	m	struct:dnn::Stat
__default	dnn/act_functions/act_function.h	/^	static double __default(const double &u) { $/;"	f	class:dnn::ActFunctionBase
__defaultCalculateDynamics	dnn/synapses/synapse.h	/^	static void __defaultCalculateDynamics(const Time &t) {$/;"	f	class:dnn::SynapseBase
__defaultPropagateSpike	dnn/synapses/synapse.h	/^	static void __defaultPropagateSpike() {$/;"	f	class:dnn::SynapseBase
__derivativeModulationDefault	dnn/weight_normalizations/weight_normalization.h	/^	static double __derivativeModulationDefault(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
__getBoolVal	dnn/util/json.h	/^	static bool __getBoolVal(const Value &v, const string name, bool &d) {$/;"	f	class:dnn::Json
__getDoubleVal	dnn/util/json.h	/^	static bool __getDoubleVal(const Value &v, const string name, double &d) {$/;"	f	class:dnn::Json
__getStringVal	dnn/util/json.h	/^	static bool __getStringVal(const Value &v, const string name, string &d) {$/;"	f	class:dnn::Json
__ltdDefault	dnn/weight_normalizations/weight_normalization.h	/^	static double __ltdDefault(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
__ltpDefault	dnn/weight_normalizations/weight_normalization.h	/^	static double __ltpDefault(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
__mean_weight	dnn/weight_normalizations/pow_min_max.h	/^    double __mean_weight;$/;"	m	struct:dnn::PowMinMaxC
__propagateSynapseSpikeDefault	dnn/learning_rules/learning_rule.h	/^	static void __propagateSynapseSpikeDefault(const SynSpike &s) {}$/;"	f	class:dnn::LearningRuleBase
__propagateSynapseSpikeDefault	dnn/neurons/spike_neuron.h	/^	static void __propagateSynapseSpikeDefault(const SynSpike &s) {$/;"	f	class:dnn::SpikeNeuronBase
__target_rate	dnn/learning_rules/optimal_stdp.h	/^    double __target_rate;$/;"	m	struct:dnn::OptimalStdpC
__target_rate	dnn/weight_normalizations/sliding_ltd.h	/^    double __target_rate;$/;"	m	struct:dnn::SlidingLtdC
_all_min	shapelets/orderline.h	/^    bool _all_min;$/;"	m	class:dnn::shapelets::Orderline
_array	dnn/util/pretty_print.h	/^        const T * const _array;$/;"	m	struct:pretty_print::array_wrapper_n
_async_log_helper	dnn/contrib/spdlog/async_logger.h	/^    std::unique_ptr<details::async_log_helper> _async_log_helper;$/;"	m	class:spdlog::async_logger
_async_mode	dnn/contrib/spdlog/details/registry.h	/^    bool _async_mode = false;$/;"	m	class:spdlog::details::registry_t
_async_q_size	dnn/contrib/spdlog/details/registry.h	/^    size_t _async_q_size = 0;$/;"	m	class:spdlog::details::registry_t
_axonDelay	dnn/neurons/spike_neuron.h	/^	double _axonDelay;$/;"	m	class:dnn::SpikeNeuronBase
_base_filename	dnn/contrib/spdlog/sinks/file_sinks.h	/^    tstring _base_filename;$/;"	m	class:spdlog::sinks::daily_file_sink
_base_filename	dnn/contrib/spdlog/sinks/file_sinks.h	/^    tstring _base_filename;$/;"	m	class:spdlog::sinks::rotating_file_sink
_callback_logger	dnn/contrib/spdlog/details/line_logger.h	/^    logger* _callback_logger;$/;"	m	class:spdlog::details::line_logger
_ch	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    char _ch;$/;"	m	class:spdlog::details::ch_formatter
_colSize	dnn/neurons/spike_neuron.h	/^	size_t _colSize;$/;"	m	class:dnn::SpikeNeuronBase
_count	dnn/util/barrier.h	/^    std::size_t _count;$/;"	m	class:Barrier
_current_size	dnn/contrib/spdlog/sinks/file_sinks.h	/^    std::size_t _current_size;$/;"	m	class:spdlog::sinks::rotating_file_sink
_cv	dnn/util/barrier.h	/^    std::condition_variable _cv;$/;"	m	class:Barrier
_dendriteDelay	dnn/synapses/synapse.h	/^	double _dendriteDelay;$/;"	m	class:dnn::SynapseBase
_enabled	dnn/contrib/spdlog/details/line_logger.h	/^    bool _enabled;$/;"	m	class:spdlog::details::line_logger
_entropy	shapelets/dataset.h	/^    double _entropy;$/;"	m	class:dnn::shapelets::Dataset
_extension	dnn/contrib/spdlog/sinks/file_sinks.h	/^    tstring _extension;$/;"	m	class:spdlog::sinks::daily_file_sink
_extension	dnn/contrib/spdlog/sinks/file_sinks.h	/^    tstring _extension;$/;"	m	class:spdlog::sinks::rotating_file_sink
_fail	dnn/util/barrier.h	/^    bool _fail;$/;"	m	class:Barrier
_fail	dnn/util/barrier.h	/^    explicit Barrier(std::size_t count) : _count{count}, _fail(false) { }$/;"	f	class:Barrier
_fail	dnn/util/spinning_barrier.h	/^    std::atomic<bool> _fail;$/;"	m	class:dnn::SpinningBarrier
_fd	dnn/contrib/spdlog/details/file_helper.h	/^    FILE* _fd;$/;"	m	class:spdlog::details::file_helper
_file_helper	dnn/contrib/spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::daily_file_sink
_file_helper	dnn/contrib/spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::rotating_file_sink
_file_helper	dnn/contrib/spdlog/sinks/file_sinks.h	/^    details::file_helper _file_helper;$/;"	m	class:spdlog::sinks::simple_file_sink
_filename	dnn/contrib/spdlog/details/file_helper.h	/^    tstring _filename;$/;"	m	class:spdlog::details::file_helper
_fired	dnn/neurons/spike_neuron.h	/^	bool _fired;$/;"	m	class:dnn::SpikeNeuronBase
_fired	dnn/synapses/synapse.h	/^	bool _fired;$/;"	m	class:dnn::SynapseBase
_flush_interval_ms	dnn/contrib/spdlog/details/async_log_helper.h	/^    const std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::async_log_helper
_flush_interval_ms	dnn/contrib/spdlog/details/registry.h	/^    std::chrono::milliseconds _flush_interval_ms;$/;"	m	class:spdlog::details::registry_t
_force_flush	dnn/contrib/spdlog/details/file_helper.h	/^    bool _force_flush;$/;"	m	class:spdlog::details::file_helper
_force_flush	dnn/contrib/spdlog/sinks/ostream_sink.h	/^    bool _force_flush;$/;"	m	class:spdlog::sinks::ostream_sink
_formatter	dnn/contrib/spdlog/details/async_log_helper.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::async_log_helper
_formatter	dnn/contrib/spdlog/details/registry.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::details::registry_t
_formatter	dnn/contrib/spdlog/logger.h	/^    formatter_ptr _formatter;$/;"	m	class:spdlog::logger
_formatters	dnn/contrib/spdlog/formatter.h	/^    std::vector<std::unique_ptr<details::flag_formatter>> _formatters;$/;"	m	class:spdlog::pattern_formatter
_from	shapelets/subsequence.h	/^    size_t _from;$/;"	m	class:dnn::shapelets::Subsequence
_id	dnn/neurons/spike_neuron.h	/^	size_t _id;$/;"	m	class:dnn::SpikeNeuronBase
_id	shapelets/subsequence.h	/^    size_t _id;$/;"	m	class:dnn::shapelets::Subsequence
_idPre	dnn/synapses/synapse.h	/^	size_t _idPre;$/;"	m	class:dnn::SynapseBase
_ident	dnn/contrib/spdlog/sinks/syslog_sink.h	/^    const std::string _ident;$/;"	m	class:spdlog::sinks::syslog_sink
_input_str	dnn/io/stream.h	/^    istream *_input_str;$/;"	m	class:dnn::Stream
_inverse	dnn/contrib/kiss_fft/kissfft.hh	/^        bool _inverse;$/;"	m	class:kissfft
_last_update	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    log_clock::time_point _last_update;$/;"	m	class:spdlog::details::z_formatter
_last_workerthread_ex	dnn/contrib/spdlog/details/async_log_helper.h	/^    std::shared_ptr<spdlog_ex> _last_workerthread_ex;$/;"	m	class:spdlog::details::async_log_helper
_length	shapelets/subsequence.h	/^    size_t _length;$/;"	m	class:dnn::shapelets::Subsequence
_level	dnn/contrib/spdlog/details/registry.h	/^    level::level_enum _level = level::info;$/;"	m	class:spdlog::details::registry_t
_level	dnn/contrib/spdlog/logger.h	/^    std::atomic_int _level;$/;"	m	class:spdlog::logger
_log_if_enabled	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::_log_if_enabled(level::level_enum lvl)$/;"	f	class:spdlog::logger
_log_if_enabled	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::_log_if_enabled(level::level_enum lvl, const T& msg)$/;"	f	class:spdlog::logger
_log_if_enabled	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::_log_if_enabled(level::level_enum lvl, const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
_log_msg	dnn/contrib/spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_log_msg(details::log_msg& msg)$/;"	f	class:spdlog::async_logger
_log_msg	dnn/contrib/spdlog/details/line_logger.h	/^    log_msg _log_msg;$/;"	m	class:spdlog::details::line_logger
_log_msg	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::_log_msg(details::log_msg& msg)$/;"	f	class:spdlog::logger
_loggers	dnn/contrib/spdlog/details/registry.h	/^    std::unordered_map <std::string, std::shared_ptr<logger>> _loggers;$/;"	m	class:spdlog::details::registry_t
_max_files	dnn/contrib/spdlog/sinks/file_sinks.h	/^    std::size_t _max_files;$/;"	m	class:spdlog::sinks::rotating_file_sink
_max_size	dnn/contrib/spdlog/sinks/file_sinks.h	/^    std::size_t _max_size;$/;"	m	class:spdlog::sinks::rotating_file_sink
_msg	dnn/contrib/spdlog/common.h	/^    std::string _msg;$/;"	m	class:spdlog::spdlog_ex
_mutex	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    std::mutex _mutex;$/;"	m	class:spdlog::details::z_formatter
_mutex	dnn/contrib/spdlog/details/registry.h	/^    Mutex _mutex;$/;"	m	class:spdlog::details::registry_t
_mutex	dnn/contrib/spdlog/sinks/base_sink.h	/^    Mutex _mutex;$/;"	m	class:spdlog::sinks::base_sink
_mutex	dnn/util/barrier.h	/^    std::mutex _mutex;$/;"	m	class:Barrier
_n	dnn/util/pretty_print.h	/^        size_t _n;$/;"	m	struct:pretty_print::array_wrapper_n
_name	dnn/contrib/spdlog/logger.h	/^    std::string _name;$/;"	m	class:spdlog::logger
_next_rotation_tp	dnn/contrib/spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _next_rotation_tp()$/;"	f	class:spdlog::sinks::daily_file_sink
_nfft	dnn/contrib/kiss_fft/kissfft.hh	/^        int _nfft;$/;"	m	class:kissfft
_offset_minutes	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    int _offset_minutes;$/;"	m	class:spdlog::details::z_formatter
_on	dnn/util/statistics.h	/^	bool _on;$/;"	m	class:dnn::Statistics
_ostream	dnn/contrib/spdlog/sinks/ostream_sink.h	/^    std::ostream& _ostream;$/;"	m	class:spdlog::sinks::ostream_sink
_output_str	dnn/io/stream.h	/^    ostream *_output_str;$/;"	m	class:dnn::Stream
_overflow_policy	dnn/contrib/spdlog/details/async_log_helper.h	/^    const async_overflow_policy _overflow_policy;$/;"	m	class:spdlog::details::async_log_helper
_overflow_policy	dnn/contrib/spdlog/details/registry.h	/^    async_overflow_policy _overflow_policy = async_overflow_policy::block_retry;$/;"	m	class:spdlog::details::registry_t
_pattern	dnn/contrib/spdlog/formatter.h	/^    const std::string _pattern;$/;"	m	class:spdlog::pattern_formatter
_potential	dnn/synapses/synapse.h	/^	double _potential;$/;"	m	class:dnn::SynapseBase
_priorities	dnn/contrib/spdlog/sinks/syslog_sink.h	/^    std::array<int, 10> _priorities;$/;"	m	class:spdlog::sinks::syslog_sink
_ptr	dnn/util/interfaced_ptr.h	/^	T *_ptr;$/;"	m	class:dnn::InterfacedPtr
_ptr	dnn/util/ptr.h	/^	T *_ptr;$/;"	m	class:dnn::Ptr
_q	dnn/contrib/spdlog/details/async_log_helper.h	/^    q_type _q;$/;"	m	class:spdlog::details::async_log_helper
_referent	shapelets/subsequence.h	/^    Ptr<TimeSeries> _referent;$/;"	m	class:dnn::shapelets::Subsequence
_restore	mpl/mpl.cpp	/^void MatchingPursuit::_restore(const vector<FilterMatch> &matches, vector<double> &restored, size_t from=0) const {$/;"	f	class:dnn::mpl::MatchingPursuit
_rotate	dnn/contrib/spdlog/sinks/file_sinks.h	/^    void _rotate()$/;"	f	class:spdlog::sinks::rotating_file_sink
_rotation_h	dnn/contrib/spdlog/sinks/file_sinks.h	/^    int _rotation_h;$/;"	m	class:spdlog::sinks::daily_file_sink
_rotation_m	dnn/contrib/spdlog/sinks/file_sinks.h	/^    int _rotation_m;$/;"	m	class:spdlog::sinks::daily_file_sink
_rotation_tp	dnn/contrib/spdlog/sinks/file_sinks.h	/^    std::chrono::system_clock::time_point _rotation_tp;$/;"	m	class:spdlog::sinks::daily_file_sink
_set_formatter	dnn/contrib/spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::async_logger
_set_formatter	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger
_set_pattern	dnn/contrib/spdlog/details/async_logger_impl.h	/^inline void spdlog::async_logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::async_logger
_set_pattern	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::_set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger
_sinks	dnn/contrib/spdlog/details/async_log_helper.h	/^    std::vector<std::shared_ptr<sinks::sink>> _sinks;$/;"	m	class:spdlog::details::async_log_helper
_sinks	dnn/contrib/spdlog/logger.h	/^    std::vector<sink_ptr> _sinks;$/;"	m	class:spdlog::logger
_stageRadix	dnn/contrib/kiss_fft/kissfft.hh	/^        std::vector<int> _stageRadix;$/;"	m	class:kissfft
_stageRemainder	dnn/contrib/kiss_fft/kissfft.hh	/^        std::vector<int> _stageRemainder;$/;"	m	class:kissfft
_str	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    std::string _str;$/;"	m	class:spdlog::details::aggregate_formatter
_t	dnn/inputs/input_time_series.h	/^    double _t;$/;"	m	struct:dnn::InputTimeSeriesState
_traits	dnn/contrib/kiss_fft/kissfft.hh	/^        traits_type _traits;$/;"	m	class:kissfft
_twiddles	dnn/contrib/kiss_fft/kissfft.hh	/^        std::vector<cpx_type> _twiddles;$/;"	m	class:kissfft
_twiddles	dnn/contrib/kiss_fft/kissfft.hh	/^    std::vector<cpx_type> _twiddles;$/;"	m	struct:kissfft_utils::traits
_weight	dnn/synapses/synapse.h	/^	double _weight;$/;"	m	class:dnn::SynapseBase
_worker_thread	dnn/contrib/spdlog/details/async_log_helper.h	/^    std::thread _worker_thread;$/;"	m	class:spdlog::details::async_log_helper
_worker_warmup_cb	dnn/contrib/spdlog/details/async_log_helper.h	/^    const std::function<void()> _worker_warmup_cb;$/;"	m	class:spdlog::details::async_log_helper
_worker_warmup_cb	dnn/contrib/spdlog/details/registry.h	/^    std::function<void()> _worker_warmup_cb = nullptr;$/;"	m	class:spdlog::details::registry_t
_xi	dnn/neurons/spike_neuron.h	/^	size_t _xi;$/;"	m	class:dnn::SpikeNeuronBase
_yi	dnn/neurons/spike_neuron.h	/^	size_t _yi;$/;"	m	class:dnn::SpikeNeuronBase
a	dnn/connections/difference_of_gaussians.h	/^    double a;$/;"	m	struct:dnn::DifferenceOfGaussiansC
a	dnn/contrib/rapidjson/document.h	/^        Array a;$/;"	m	union:GenericValue::Data
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate0::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate1::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate2::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate3::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate4::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate5::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate6::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate7::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate8::SafeBoolStruct
a_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class a_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
a_minus	dnn/learning_rules/stdp.h	/^    double a_minus;$/;"	m	struct:dnn::StdpC
a_minus	dnn/learning_rules/stdp_time.h	/^    double a_minus;$/;"	m	struct:dnn::StdpTimeC
a_minus	dnn/learning_rules/triple_stdp.h	/^    double a_minus;$/;"	m	struct:dnn::TripleStdpC
a_plus	dnn/learning_rules/stdp.h	/^    double a_plus;$/;"	m	struct:dnn::StdpC
a_plus	dnn/learning_rules/stdp_time.h	/^    double a_plus;$/;"	m	struct:dnn::StdpTimeC
a_plus	dnn/learning_rules/triple_stdp.h	/^    double a_plus;$/;"	m	struct:dnn::TripleStdpC
act_f	dnn/neurons/spike_neuron.h	/^	InterfacedPtr<ActFunctionBase> act_f;$/;"	m	class:dnn::SpikeNeuronBase
act_function_is_set	dnn/neurons/spike_neuron.h	/^	bool act_function_is_set;$/;"	m	struct:dnn::SpikeNeuronInfo
act_functions	dnn/base/constants.h	/^	map<string, string> act_functions;$/;"	m	struct:dnn::Constants
act_indices	dnn/util/act_vector.h	/^	unordered_set<size_t> act_indices;$/;"	m	class:dnn::ActVector
adapt_amp	dnn/neurons/adapt_integrate_and_fire.h	/^    double adapt_amp;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
add	dnn/util/statistics.h	/^	inline void add(const char* name, size_t sub_ind, const double &v) {$/;"	f	class:dnn::Statistics
add	dnn/util/statistics.h	/^	inline void add(const char* name_cptr, const double &v) {$/;"	f	class:dnn::Statistics
add	dnn/util/statistics.h	/^	void add(const double &s) {$/;"	f	struct:dnn::Stat
addLabelAtPos	dnn/util/time_series.h	/^	void addLabelAtPos(const string &lab, size_t pos) {$/;"	f	struct:dnn::TimeSeriesInfo
addMessage	dnn/io/serialize.h	/^    void addMessage(ProtoMessage m) {$/;"	f	class:dnn::SerializableBase
addSynapse	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::addSynapse(InterfacedPtr<SynapseBase> syn) {$/;"	f	class:dnn::SpikeNeuronBase
addValue	dnn/util/time_series.h	/^	void addValue(size_t dim_index, ELEM val) {$/;"	f	struct:dnn::TimeSeriesGeneric
add_ch	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    void add_ch(char ch)$/;"	f	class:spdlog::details::aggregate_formatter
add_opts	tools/dnn_sim/dnn_sim.cpp	/^    dnn::OptMods add_opts;$/;"	m	struct:DnnSimOpts	file:
addwithcarry	dnn/util/random/pcg_uint128.hpp	/^inline UInt addwithcarry(UInt x, UInt y, bool carryin, bool* carryout)$/;"	f	namespace:pcg_extras
advance	dnn/util/random/pcg_random.hpp	/^             multiplier_mixin>::advance($/;"	f	class:pcg_detail::engine
advance	dnn/util/random/pcg_random.hpp	/^    void advance(itype delta)$/;"	f	class:pcg_detail::engine
aggregateSubst	dnn/util/json.h	/^	static void aggregateSubst(const Value &parsed, vector<string> &stack, map<string, Value> &values) {$/;"	f	class:dnn::Json
aggregate_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    aggregate_formatter()$/;"	f	class:spdlog::details::aggregate_formatter
aggregate_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class aggregate_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
alert	dnn/contrib/spdlog/common.h	/^    alert    = 7,$/;"	e	enum:spdlog::level::__anon23
alert	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::alert()$/;"	f	class:spdlog::logger
alert	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::alert(const T& msg)$/;"	f	class:spdlog::logger
alert	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::alert(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
align	dnn/contrib/spdlog/details/format.h	/^    Alignment align() const {$/;"	f	struct:fmt::AlignSpec
align	dnn/contrib/spdlog/details/format.h	/^    Alignment align() const {$/;"	f	struct:fmt::TypeSpec
align_	dnn/contrib/spdlog/details/format.h	/^    Alignment align_;$/;"	m	struct:fmt::AlignSpec
allocate	dnn/util/matrix.h	/^    void allocate(size_t nr, size_t nc) {$/;"	f	class:dnn::DoubleMatrix
allocator_	dnn/contrib/rapidjson/document.h	/^    Allocator* allocator_;$/;"	m	class:GenericDocument
allocator_	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator* allocator_;$/;"	m	class:internal::Stack
amp	dnn/act_functions/exp_threshold.h	/^    double amp;$/;"	m	struct:dnn::ExpThresholdC
amp	dnn/synapses/static_synapse.h	/^    double amp;$/;"	m	struct:dnn::StaticSynapseC
amp	dnn/synapses/std_synapse.h	/^    double amp;$/;"	m	struct:dnn::STDSynapseC
amp_adapt	dnn/neurons/srm_neuron.h	/^    double amp_adapt;$/;"	m	struct:dnn::SRMNeuronC
amp_refr	dnn/neurons/srm_neuron.h	/^    double amp_refr;$/;"	m	struct:dnn::SRMNeuronC
amplitude	dnn/connections/connection.h	/^	double amplitude;$/;"	m	struct:dnn::ConnectionRecipe
ampm	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^static const char* ampm(const tm& t)$/;"	f	namespace:spdlog::details
append	dnn/contrib/spdlog/details/format.h	/^void Buffer<T>::append(const U *begin, const U *end) {$/;"	f	class:fmt::Buffer
append_float_length	dnn/contrib/spdlog/details/format.h	/^    void append_float_length(Char *&, T) {}$/;"	f	class:fmt::BasicWriter
append_float_length	dnn/contrib/spdlog/details/format.h	/^    void append_float_length(Char *&format_ptr, long double) {$/;"	f	class:fmt::BasicWriter
applySubst	dnn/util/json.h	/^	static void applySubst(Value &v, const map<string, Value> &values) {$/;"	f	class:dnn::Json
apply_amplitude	dnn/connections/difference_of_gaussians.h	/^    bool apply_amplitude;$/;"	m	struct:dnn::DifferenceOfGaussiansC
arg	dnn/contrib/spdlog/details/format.h	/^inline internal::NamedArg<char> arg(StringRef name, const T &arg) {$/;"	f	namespace:fmt
arg	dnn/contrib/spdlog/details/format.h	/^inline internal::NamedArg<wchar_t> arg(WStringRef name, const T &arg) {$/;"	f	namespace:fmt
arg_	dnn/contrib/spdlog/details/format.cc	/^    fmt::internal::Arg &arg_;$/;"	m	class:fmt::__anon32::ArgConverter	file:
arg_	dnn/contrib/spdlog/details/format.cc	/^    fmt::internal::Arg &arg_;$/;"	m	class:fmt::__anon32::CharConverter	file:
args	dnn/contrib/spdlog/details/format.h	/^    const ArgList &args() const {$/;"	f	class:fmt::internal::FormatterBase
args	generate_protos.py	/^    args = parser.parse_args()$/;"	v
args_	dnn/contrib/spdlog/details/format.h	/^        const internal::Arg *args_;$/;"	m	union:fmt::ArgList::__anon27
args_	dnn/contrib/spdlog/details/format.h	/^    ArgList args_;$/;"	m	class:fmt::internal::FormatterBase
array	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	m	union:__anon4::__anon5
array	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	m	union:__anon4::__anon6
array_wrapper_n	dnn/util/pretty_print.h	/^        array_wrapper_n(const T * const a, size_t n) : _array(a), _n(n) { }$/;"	f	struct:pretty_print::array_wrapper_n
array_wrapper_n	dnn/util/pretty_print.h	/^    struct array_wrapper_n$/;"	s	namespace:pretty_print
as	dnn/io/serialize.h	/^T* as(SerializableBase *b) {$/;"	f	namespace:dnn
as	dnn/util/ptr.h	/^	Ptr<NT> as() {$/;"	f	class:dnn::Ptr
assertAnotherTs	dnn/util/time_series.h	/^	void assertAnotherTs(const TimeSeriesGeneric<DATA, ELEM> &anotherTs) {$/;"	f	struct:dnn::TimeSeriesGeneric
assertOneLabel	dnn/util/time_series.h	/^	void assertOneLabel() {$/;"	f	struct:dnn::TimeSeriesGeneric
async_log_helper	dnn/contrib/spdlog/details/async_log_helper.h	/^class async_log_helper$/;"	c	namespace:spdlog::details
async_log_helper	dnn/contrib/spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::async_log_helper(formatter_ptr formatter, const std::vector<sink_ptr>& sinks, size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms):$/;"	f	class:spdlog::details::async_log_helper
async_logger	dnn/contrib/spdlog/async_logger.h	/^class async_logger :public logger$/;"	c	namespace:spdlog
async_logger	dnn/contrib/spdlog/details/async_logger_impl.h	/^inline spdlog::async_logger::async_logger(const std::string& logger_name,$/;"	f	class:spdlog::async_logger
async_msg	dnn/contrib/spdlog/details/async_log_helper.h	/^        async_msg(const details::log_msg& m) :$/;"	f	struct:spdlog::details::async_log_helper::async_msg
async_msg	dnn/contrib/spdlog/details/async_log_helper.h	/^    struct async_msg$/;"	s	class:spdlog::details::async_log_helper
async_overflow_policy	dnn/contrib/spdlog/common.h	/^enum class async_overflow_policy$/;"	c	namespace:spdlog
attachDelegate	dnn/base/base.h	/^typedef FastDelegate1<const double&> attachDelegate;$/;"	t	namespace:dnn
axonDelay	dnn/neurons/spike_neuron.cpp	/^const double& SpikeNeuronBase::axonDelay() const {$/;"	f	class:dnn::SpikeNeuronBase
axonDelay	dnn/neurons/spike_neuron.h	/^	double axonDelay;$/;"	m	struct:dnn::SpikeNeuronInfo
b	dnn/connections/difference_of_gaussians.h	/^    double b;$/;"	m	struct:dnn::DifferenceOfGaussiansC
b64_decode	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string b64_decode(const std::string &s)$/;"	f
b64_encode	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string b64_encode(const std::string &s)$/;"	f
b_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class b_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
back	spikework/spikework.h	/^        Ptr<SerializableBase> back() {$/;"	f	class:dnn::Spikework::Stack
backstep	dnn/util/random/pcg_random.hpp	/^    void backstep(itype delta)$/;"	f	class:pcg_detail::engine
base	dnn/util/pretty_print.h	/^        std::unique_ptr<custom_delims_base> base;$/;"	m	struct:pretty_print::custom_delims
baseAllocator_	dnn/contrib/rapidjson/allocators.h	/^    BaseAllocator* baseAllocator_;  \/\/!< base allocator for allocating memory chunks.$/;"	m	class:MemoryPoolAllocator
base_generate	dnn/util/random/pcg_random.hpp	/^    itype base_generate()$/;"	f	class:pcg_detail::engine
base_generate0	dnn/util/random/pcg_random.hpp	/^    itype base_generate0()$/;"	f	class:pcg_detail::engine
base_sink	dnn/contrib/spdlog/sinks/base_sink.h	/^    base_sink():_mutex() {}$/;"	f	class:spdlog::sinks::base_sink
base_sink	dnn/contrib/spdlog/sinks/base_sink.h	/^class base_sink:public sink$/;"	c	namespace:spdlog::sinks
batch_size	mpl/mpl.h	/^	size_t batch_size;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
beg_value	dnn/util/pretty_print.h	/^            static bool const beg_value = sizeof(f<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_begin_end
begin	dnn/io/serialize.h	/^    Serializable& begin() {$/;"	f	class:dnn::Serializable
begin	dnn/io/serialize.h	/^    SerializableBase& begin() {$/;"	f	class:dnn::SerializableBase
begin	dnn/util/act_vector.h	/^	typename vector<T>::const_iterator begin() const {$/;"	f	class:dnn::ActVector
begin	dnn/util/act_vector.h	/^	typename vector<T>::iterator begin() {$/;"	f	class:dnn::ActVector
begin	dnn/util/pretty_print.h	/^        const_iterator begin() const$/;"	f	struct:pretty_print::bucket_print_wrapper
begin	dnn/util/pretty_print.h	/^        inline const_iterator begin() const { return _array; }$/;"	f	struct:pretty_print::array_wrapper_n
begin	shapelets/dataset.h	/^    vector<Ptr<TimeSeries>>::const_iterator begin() const {$/;"	f	class:dnn::shapelets::Dataset
begin	shapelets/dataset.h	/^    vector<Ptr<TimeSeries>>::iterator begin() {$/;"	f	class:dnn::shapelets::Dataset
begin_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* begin_;   \/\/!< Original head of the string.$/;"	m	struct:MemoryStream
beta	dnn/act_functions/exp_threshold.h	/^    double beta;$/;"	m	struct:dnn::ExpThresholdC
betterSplitStats	shapelets/orderline.h	/^    static bool betterSplitStats(const double &gainBase, const double &gapBase, const double &gainNew, const double &gapNew) {$/;"	f	class:dnn::shapelets::Orderline
betterThan	shapelets/orderline.h	/^        bool betterThan(const SplitStat& anotherStat) {$/;"	f	struct:dnn::shapelets::Orderline::SplitStat
bin2hex	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string bin2hex(const std::string &s)$/;"	f
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)()) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1)) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2)) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	class:fastdelegate::FastDelegate8
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)()) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1)) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2)) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	class:fastdelegate::FastDelegate8
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)() const) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) const) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) const) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	class:fastdelegate::FastDelegate8
bindconstmemfunc	dnn/util/fast_delegate.h	/^	inline void bindconstmemfunc(const X *pthis, XMemFunc function_to_bind) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindmemfunc	dnn/util/fast_delegate.h	/^	inline void bindmemfunc(X *pthis, XMemFunc function_to_bind ) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindmemfunc	dnn/util/fast_delegate.h	/^	inline void bindmemfunc(const X *pthis, XMemFunc function_to_bind) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindstaticfunc	dnn/util/fast_delegate.h	/^	inline void bindstaticfunc(DerivedClass *pParent, ParentInvokerSig static_function_invoker,$/;"	f	class:fastdelegate::detail::ClosurePtr
bitcount_t	dnn/util/random/pcg_extras.hpp	/^    typedef uint8_t bitcount_t;$/;"	t	namespace:pcg_extras
bitcount_t	dnn/util/random/pcg_uint128.hpp	/^    typedef uint8_t bitcount_t;$/;"	t	namespace:pcg_extras
block_retry	dnn/contrib/spdlog/common.h	/^    block_retry, \/\/ Block \/ yield \/ sleep until message can be enqueued$/;"	m	class:spdlog::async_overflow_policy
bottomspare	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t bottomspare = sparebits - topspare;$/;"	m	namespace:pcg_detail
bucket_print	dnn/util/pretty_print.h	/^bucket_print(const T & m, typename T::size_type n)$/;"	f
bucket_print_wrapper	dnn/util/pretty_print.h	/^        bucket_print_wrapper(const T & m, size_type bucket) : m_map(m), n(bucket) { }$/;"	f	struct:pretty_print::bucket_print_wrapper
bucket_print_wrapper	dnn/util/pretty_print.h	/^    struct bucket_print_wrapper$/;"	s	namespace:pretty_print
bufferEnd_	dnn/contrib/rapidjson/filewritestream.h	/^    char *bufferEnd_;$/;"	m	class:FileWriteStream
bufferLast_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *bufferLast_;$/;"	m	class:FileReadStream
bufferSize_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t bufferSize_;$/;"	m	class:FileReadStream
buffer_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *buffer_;$/;"	m	class:FileReadStream
buffer_	dnn/contrib/rapidjson/filewritestream.h	/^    char *buffer_;$/;"	m	class:FileWriteStream
buffer_	dnn/contrib/spdlog/details/format.h	/^        : BasicWriter<Char>(buffer_), buffer_(array, SIZE) {}$/;"	f	class:fmt::BasicArrayWriter
buffer_	dnn/contrib/spdlog/details/format.h	/^    Buffer<Char> &buffer_;$/;"	m	class:fmt::BasicWriter
buffer_	dnn/contrib/spdlog/details/format.h	/^    MemoryBuffer<char, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF16ToUTF8
buffer_	dnn/contrib/spdlog/details/format.h	/^    MemoryBuffer<wchar_t, INLINE_BUFFER_SIZE> buffer_;$/;"	m	class:fmt::internal::UTF8ToUTF16
buffer_	dnn/contrib/spdlog/details/format.h	/^    internal::FixedBuffer<Char> buffer_;$/;"	m	class:fmt::BasicArrayWriter
buffer_	dnn/contrib/spdlog/details/format.h	/^    internal::MemoryBuffer<Char, internal::INLINE_BUFFER_SIZE, Allocator> buffer_;$/;"	m	class:fmt::BasicMemoryWriter
buffer_	dnn/contrib/spdlog/details/format.h	/^    mutable char buffer_[BUFFER_SIZE];$/;"	m	class:fmt::FormatInt
buffer_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    cell_t* const           buffer_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
buffer_mask_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    size_t const            buffer_mask_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
build	dnn/sim/sim.cpp	/^void Sim::build(Stream* input_stream) {$/;"	f	class:dnn::Sim
buildNeurons	dnn/sim/builder.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> buildNeurons() {$/;"	f	class:dnn::Builder
buildObjectFromConstants	dnn/sim/builder.h	/^	static T* buildObjectFromConstants(const string &name, const map<string, string> &object_const_map) {$/;"	f	class:dnn::Builder
bump	dnn/util/random/pcg_random.hpp	/^    itype bump(itype state)$/;"	f	class:pcg_detail::engine
c	dnn/act_functions/act_function.h	/^	Constants c;$/;"	m	class:dnn::ActFunction
c	dnn/connections/connection.h	/^	Constants c;$/;"	m	class:dnn::Connection
c	dnn/inputs/input.h	/^    Constants c;$/;"	m	class:dnn::Input
c	dnn/learning_rules/learning_rule.h	/^	Constants c;$/;"	m	class:dnn::LearningRule
c	dnn/neurons/spike_neuron.h	/^	Constants c;$/;"	m	class:dnn::SpikeNeuron
c	dnn/sim/builder.h	/^	const Constants &c;$/;"	m	class:dnn::Builder
c	dnn/sim/global_ctx.h	/^	Ptr<const Constants> c;$/;"	m	class:dnn::GlobalCtx
c	dnn/sim/sim.h	/^	const Constants &c;$/;"	m	class:dnn::Sim
c	dnn/synapses/synapse.h	/^	Constants c;$/;"	m	class:dnn::Synapse
c	dnn/weight_normalizations/weight_normalization.h	/^	Constants c;$/;"	m	class:dnn::WeightNormalization
c	mpl/mpl.h	/^	MatchingPursuitConfig c;$/;"	m	class:dnn::mpl::MatchingPursuit
cIterativeParsingStateCount	dnn/contrib/rapidjson/reader.h	/^        cIterativeParsingStateCount$/;"	e	enum:GenericReader::IterativeParsingState
c_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class c_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
c_str	dnn/contrib/spdlog/details/format.h	/^    const Char *c_str() const {$/;"	f	class:fmt::BasicCStringRef
c_str	dnn/contrib/spdlog/details/format.h	/^    const Char *c_str() const {$/;"	f	class:fmt::BasicWriter
c_str	dnn/contrib/spdlog/details/format.h	/^    const char *c_str() const {$/;"	f	class:fmt::FormatInt
c_str	dnn/contrib/spdlog/details/format.h	/^    const char *c_str() const {$/;"	f	class:fmt::internal::UTF16ToUTF8
c_str	dnn/contrib/spdlog/details/format.h	/^    const wchar_t *c_str() const {$/;"	f	class:fmt::internal::UTF8ToUTF16
cache_map	dnn/base/factory.h	/^    map<string, SerializableBase*> cache_map;$/;"	m	class:dnn::Factory
cache_refresh	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    const std::chrono::seconds cache_refresh = std::chrono::seconds(5);$/;"	m	class:spdlog::details::z_formatter
cacheline_pad_t	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    typedef char            cacheline_pad_t [cacheline_size];$/;"	t	class:spdlog::details::mpmc_bounded_queue
cacheline_size	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    static size_t const     cacheline_size = 64;$/;"	m	class:spdlog::details::mpmc_bounded_queue
calcEntropy	shapelets/dataset.cpp	/^double Dataset::calcEntropy(const unordered_map<size_t, size_t> &_class_counts, const size_t &N) {$/;"	f	class:dnn::shapelets::Dataset
calcInformationGain	shapelets/orderline.cpp	/^double Orderline::calcInformationGain($/;"	f	class:dnn::shapelets::Orderline
calc_filename	dnn/contrib/spdlog/sinks/file_sinks.h	/^    static tstring calc_filename(const tstring& basename, const tstring& extension)$/;"	f	class:spdlog::sinks::daily_file_sink
calc_filename	dnn/contrib/spdlog/sinks/file_sinks.h	/^    static tstring calc_filename(const tstring& filename, std::size_t index, const tstring& extension)$/;"	f	class:spdlog::sinks::rotating_file_sink
calculateDynamics	dnn/learning_rules/learning_rule.h	/^	calculateDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::LearningRuleInterface
calculateDynamics	dnn/learning_rules/optimal_stdp.cpp	/^void OptimalStdp::calculateDynamics(const Time& t) {$/;"	f	class:dnn::OptimalStdp
calculateDynamics	dnn/learning_rules/stdp.h	/^    void calculateDynamics(const Time& t) {$/;"	f	class:dnn::Stdp
calculateDynamics	dnn/learning_rules/stdp_time.h	/^    void calculateDynamics(const Time& t) {$/;"	f	class:dnn::StdpTime
calculateDynamics	dnn/learning_rules/triple_stdp.h	/^    void calculateDynamics(const Time& t) {$/;"	f	class:dnn::TripleStdp
calculateDynamics	dnn/neurons/adapt_integrate_and_fire.h	/^    void calculateDynamics(const Time& t, const double &Iinput, const double &Isyn) {$/;"	f	class:dnn::AdaptIntegrateAndFire
calculateDynamics	dnn/neurons/leaky_integrate_and_fire.h	/^    void calculateDynamics(const Time& t, const double &Iinput, const double &Isyn) {$/;"	f	class:dnn::LeakyIntegrateAndFire
calculateDynamics	dnn/neurons/spike_neuron.h	/^	calculateNeuronDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::SpikeNeuronInterface
calculateDynamics	dnn/neurons/spike_sequence_neuron.h	/^    void calculateDynamics(const Time& t, const double &Iinput, const double &Isyn) {$/;"	f	class:dnn::SpikeSequenceNeuron
calculateDynamics	dnn/neurons/srm_neuron.h	/^    void calculateDynamics(const Time& t, const double &Iinput, const double &Isyn) {$/;"	f	class:dnn::SRMNeuron
calculateDynamics	dnn/synapses/static_synapse.h	/^    void calculateDynamics(const Time &t) {$/;"	f	class:dnn::StaticSynapse
calculateDynamics	dnn/synapses/std_synapse.h	/^    void calculateDynamics(const Time &t) {$/;"	f	class:dnn::STDSynapse
calculateDynamics	dnn/synapses/synapse.h	/^	calculateDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::SynapseInterface
calculateDynamics	dnn/weight_normalizations/sliding_ltd.h	/^    void calculateDynamics(const Time &t) {$/;"	f	class:dnn::SlidingLtd
calculateDynamics	dnn/weight_normalizations/weight_normalization.h	/^	calculateDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::WeightNormalizationInterface
calculateDynamics	dnn/weight_normalizations/weight_normalization.h	/^    virtual void calculateDynamics(const Time &t) {$/;"	f	class:dnn::WeightNormalizationBase
calculateDynamicsDelegate	dnn/base/base.h	/^typedef FastDelegate1<const Time&> calculateDynamicsDelegate;$/;"	t	namespace:dnn
calculateDynamicsInternal	dnn/learning_rules/learning_rule.h	/^	calculateDynamicsDelegate calculateDynamicsInternal;$/;"	m	struct:dnn::LearningRuleInterface
calculateDynamicsInternal	dnn/learning_rules/learning_rule.h	/^	void calculateDynamicsInternal(const Time& t) {$/;"	f	class:dnn::LearningRuleBase
calculateDynamicsInternal	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::calculateDynamicsInternal(const Time &t) {$/;"	f	class:dnn::SpikeNeuronBase
calculateNeuronDynamicsDelegate	dnn/base/base.h	/^typedef FastDelegate3<const Time&, const double&, const double&> calculateNeuronDynamicsDelegate;$/;"	t	namespace:dnn
calculateSpecificStat	shapelets/stats.cpp	/^void Stats::calculateSpecificStat(const Dataset &ds, Ptr<TimeSeries> currentTs) {$/;"	f	class:dnn::shapelets::Stats
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::no_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::oneseq_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::unique_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = true;$/;"	m	class:pcg_detail::specific_stream
can_specify_stream_tag	dnn/util/random/pcg_random.hpp	/^    struct can_specify_stream_tag {};$/;"	s	class:pcg_detail::engine
capacity	dnn/contrib/rapidjson/allocators.h	/^        size_t capacity;    \/\/!< Capacity of the chunk in bytes (excluding the header itself).$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
capacity	dnn/contrib/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Array
capacity	dnn/contrib/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Object
capacity	dnn/contrib/spdlog/details/format.h	/^    std::size_t capacity() const {$/;"	f	class:fmt::Buffer
capacity_	dnn/contrib/spdlog/details/format.h	/^    std::size_t capacity_;$/;"	m	class:fmt::Buffer
cast	dnn/contrib/spdlog/details/format.h	/^    static Char cast(wchar_t value) {$/;"	f	class:fmt::internal::BasicCharTraits
cast	dnn/util/option_parser.cpp	/^double cast(string &s) {$/;"	f	namespace:dnn
cast	dnn/util/option_parser.cpp	/^int cast(string &s) {$/;"	f	namespace:dnn
cast	dnn/util/option_parser.cpp	/^size_t cast(string &s) {$/;"	f	namespace:dnn
cast	dnn/util/option_parser.cpp	/^string cast(string &s) {$/;"	f	namespace:dnn
cast	dnn/util/option_parser.h	/^T cast(string &s) {$/;"	f	namespace:dnn
cast_uint32_t	dnn/util/fastapprox/cast.h	44;"	d
cast_uint32_t	dnn/util/fastapprox/cast.h	46;"	d
cell_t	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    struct cell_t$/;"	s	class:spdlog::details::mpmc_bounded_queue
cfg_nd	dnn/contrib/kiss_fft/kiss_fftndr.c	/^    kiss_fftnd_cfg cfg_nd;$/;"	m	struct:kiss_fftndr_state	file:
cfg_r	dnn/contrib/kiss_fft/kiss_fftndr.c	/^    kiss_fftr_cfg cfg_r;$/;"	m	struct:kiss_fftndr_state	file:
ch_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    explicit ch_formatter(char ch) : _ch(ch)$/;"	f	class:spdlog::details::ch_formatter
ch_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class ch_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
check	dnn/contrib/spdlog/details/format.h	/^inline bool check(bool value) {$/;"	f	namespace:fmt::internal
checkVal	dnn/util/json.h	/^	static bool checkVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
check_no_auto_index	dnn/contrib/spdlog/details/format.cc	/^inline bool fmt::internal::FormatterBase::check_no_auto_index($/;"	f	class:fmt::internal::FormatterBase
check_sign	dnn/contrib/spdlog/details/format.cc	/^void check_sign(const Char *&s, const Arg &arg) {$/;"	f	namespace:fmt::__anon32
chop	dnn/util/time_series.h	/^	vector<Ptr<TimeSeries>> chop() {$/;"	f	struct:dnn::TimeSeries
chunkHead_	dnn/contrib/rapidjson/allocators.h	/^    ChunkHeader *chunkHead_;    \/\/!< Head of the chunk linked-list. Only the head chunk serves allocation.$/;"	m	class:MemoryPoolAllocator
chunk_capacity_	dnn/contrib/rapidjson/allocators.h	/^    size_t chunk_capacity_;     \/\/!< The minimum capacity of chunk when they are allocated.$/;"	m	class:MemoryPoolAllocator
class_counts	shapelets/dataset.h	/^    unordered_map<size_t, size_t> class_counts;$/;"	m	class:dnn::shapelets::Dataset
class_hist	shapelets/dataset.h	/^    const unordered_map<size_t, size_t>& class_hist() const {$/;"	f	class:dnn::shapelets::Dataset
class_id	shapelets/projection.h	/^    size_t class_id;$/;"	m	struct:dnn::shapelets::Projection
class_ids	shapelets/dataset.h	/^    unordered_map<string, size_t> class_ids;$/;"	m	class:dnn::shapelets::Dataset
clean	dnn/io/serialize.h	/^    void clean() {$/;"	f	class:dnn::SerializableBase
clean	shapelets/stats.cpp	/^void Stats::clean() {$/;"	f	class:dnn::shapelets::Stats
clear	dnn/contrib/spdlog/details/log_msg.h	/^    void clear()$/;"	f	struct:spdlog::details::log_msg
clear	dnn/util/fast_delegate.h	/^	void clear() {	m_pthis=0; m_pFunction=0;	}$/;"	f	class:fastdelegate::DelegateMemento
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate0
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate1
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate2
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate3
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate4
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate5
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate6
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate7
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate8
clear	dnn/util/fast_delegate.h	/^	void clear() {$/;"	f	class:fastdelegate::DelegateMemento
clog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t clog2(UInt v)$/;"	f	namespace:pcg_extras
close	dnn/contrib/spdlog/details/file_helper.h	/^    void close()$/;"	f	class:spdlog::details::file_helper
clz	dnn/contrib/spdlog/details/format.h	/^inline uint32_t clz(uint32_t x) {$/;"	f	namespace:fmt::internal
clzll	dnn/contrib/spdlog/details/format.h	/^inline uint32_t clzll(uint64_t x) {$/;"	f	namespace:fmt::internal
code_	dnn/contrib/rapidjson/error/error.h	/^    ParseErrorCode code_;$/;"	m	struct:ParseResult
codedIn	dnn/io/stream.h	/^    CodedInputStream *codedIn;$/;"	m	class:dnn::Stream
codedOut	dnn/io/stream.h	/^    CodedOutputStream *codedOut;$/;"	m	class:dnn::Stream
codeptr	dnn/util/fast_delegate.h	/^	void (GenericClass::*codeptr)(); \/\/ points to the actual member function$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
colLabelsIds	dnn/util/matrix.h	/^    const vector<size_t>& colLabelsIds() {$/;"	f	class:dnn::DoubleMatrix
colSize	dnn/neurons/spike_neuron.cpp	/^const size_t& SpikeNeuronBase::colSize() const {$/;"	f	class:dnn::SpikeNeuronBase
colSize	dnn/neurons/spike_neuron.h	/^	size_t colSize;$/;"	m	struct:dnn::SpikeNeuronInfo
col_labels_ids	dnn/util/matrix.h	/^    vector<size_t> col_labels_ids;$/;"	m	class:dnn::DoubleMatrix
compile_pattern	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::compile_pattern(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter
computeDistStat	shapelets/stats.cpp	/^void Stats::computeDistStat($/;"	f	class:dnn::shapelets::Stats
config	shapelets/shapelets_algo.h	/^    ShapeletsConfig config;$/;"	m	class:dnn::shapelets::ShapeletsAlgo
conn_map	dnn/base/constants.h	/^	multimap< pair<size_t, size_t>, string> conn_map;$/;"	m	struct:dnn::SimConfiguration
conn_map	dnn/sim/network.h	/^	vector<vector<Conn>> conn_map;$/;"	m	class:dnn::Network
connectLayers	dnn/sim/builder.h	/^	void connectLayers(Layer &pre, Layer &post, const string &conn_conf_s) {$/;"	f	class:dnn::Builder
connections	dnn/base/constants.h	/^	map<string, string> connections;$/;"	m	struct:dnn::Constants
const_file	tools/dnn_sim/dnn_sim.cpp	/^    string const_file;$/;"	m	struct:DnnSimOpts	file:
const_iterator	dnn/util/pretty_print.h	/^        typedef const T * const_iterator;$/;"	t	struct:pretty_print::array_wrapper_n
const_iterator	dnn/util/pretty_print.h	/^        typedef typename T::const_local_iterator const_iterator;$/;"	t	struct:pretty_print::bucket_print_wrapper
container_	dnn/util/pretty_print.h	/^        const T & container_;$/;"	m	struct:pretty_print::print_container_helper
continue_learning	mpl/mpl.h	/^	bool continue_learning;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
convert	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC int fmt::internal::UTF16ToUTF8::convert(fmt::WStringRef s) {$/;"	f	class:fmt::internal::UTF16ToUTF8
convert	dnn/contrib/spdlog/details/format.h	/^    static char convert(char value) {$/;"	f	class:fmt::internal::CharTraits
convert	dnn/contrib/spdlog/details/format.h	/^    static wchar_t convert(char value) {$/;"	f	class:fmt::internal::CharTraits
convert	dnn/contrib/spdlog/details/format.h	/^    static wchar_t convert(wchar_t value) {$/;"	f	class:fmt::internal::CharTraits
convertToBinaryTimeSeries	dnn/util/spikes_list.cpp	/^Ptr<TimeSeries> SpikesList::convertToBinaryTimeSeries(const double &dt) const {$/;"	f	class:dnn::SpikesList
convertUcrTimeSeriesLine	dnn/util/time_series.h	/^	static void convertUcrTimeSeriesLine(const string &line, vector<double> &ts_data, string &lab) {$/;"	f	struct:dnn::TimeSeries
copyM	dnn/io/serialize.h	/^    static ProtoMessage copyM(ProtoMessage m) {$/;"	f	class:dnn::SerializableBase
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 0 };$/;"	e	enum:StreamTraits::__anon20
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon21
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon22
count_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t count_;  \/\/!< Number of characters read$/;"	m	class:FileReadStream
count_	dnn/contrib/rapidjson/filestream.h	/^    size_t count_;$/;"	m	class:FileStream
count_	dnn/contrib/rapidjson/internal/biginteger.h	/^    size_t count_;$/;"	m	class:internal::BigInteger
count_digits	dnn/contrib/spdlog/details/format.h	/^inline unsigned count_digits(uint32_t n) {$/;"	f	namespace:fmt::internal
cpx_type	dnn/contrib/kiss_fft/kissfft.hh	/^        typedef typename traits_type::cpx_type cpx_type;$/;"	t	class:kissfft
cpx_type	dnn/contrib/kiss_fft/kissfft.hh	/^    typedef std::complex<scalar_type> cpx_type;$/;"	t	struct:kissfft_utils::traits
create	dnn/contrib/spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog::details::registry_t
create	dnn/contrib/spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sink_ptr sink)$/;"	f	class:spdlog::details::registry_t
create	dnn/contrib/spdlog/details/registry.h	/^    std::shared_ptr<logger> create(const std::string& logger_name, sinks_init_list sinks)$/;"	f	class:spdlog::details::registry_t
create	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const Args&... args)$/;"	f	class:spdlog
create	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, const It& sinks_begin, const It& sinks_end)$/;"	f	class:spdlog
create	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::create(const std::string& logger_name, spdlog::sinks_init_list sinks)$/;"	f	class:spdlog
createInstance	dnn/base/factory.h	/^    template<typename INST> static SerializableBase* createInstance() { return new INST; }$/;"	f	class:dnn::Factory
createKernel	spikework/kernel.h	/^    template<typename INST> static Ptr<Kernel> createKernel() { return new INST; }$/;"	f	class:dnn::KernelProcessor
createObject	dnn/base/factory.cpp	/^SerializableBase* Factory::createObject(string name) {$/;"	f	class:dnn::Factory
createObject	dnn/base/factory.h	/^    T* createObject() {$/;"	f	class:dnn::Factory
createObject	dnn/base/factory.h	/^    T* createObject(string name) {$/;"	f	class:dnn::Factory
createProcessor	spikework/spikework.h	/^    template<typename INST> static Ptr<Processor> createProcessor() { return new INST; }$/;"	f	class:dnn::Spikework
createProto	dnn/base/factory.cpp	/^ProtoMessage Factory::createProto(string name) {$/;"	f	class:dnn::Factory
createProtoInstance	dnn/base/factory.h	/^    template<typename INST> static ProtoMessage createProtoInstance() { return new INST; }$/;"	f	class:dnn::Factory
critical	dnn/contrib/spdlog/common.h	/^    critical = 6,$/;"	e	enum:spdlog::level::__anon23
critical	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::critical()$/;"	f	class:spdlog::logger
critical	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::critical(const T& msg)$/;"	f	class:spdlog::logger
critical	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::critical(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
cumulativeSum	shapelets/stats.cpp	/^const vector<double>& Stats::cumulativeSum(const size_t &ts_id, const size_t &dim) const {$/;"	f	class:dnn::shapelets::Stats
cumulativeSums	shapelets/stats.h	/^    vector<vector<vector<double>>> cumulativeSums;$/;"	m	class:dnn::shapelets::Stats
currentMessage	dnn/io/serialize.h	/^    ProtoMessage currentMessage() {$/;"	f	class:dnn::SerializableBase
current_	dnn/contrib/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:AutoUTFInputStream
current_	dnn/contrib/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:EncodedInputStream
current_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *current_;$/;"	m	class:FileReadStream
current_	dnn/contrib/rapidjson/filestream.h	/^    char current_;$/;"	m	class:FileStream
current_	dnn/contrib/rapidjson/filewritestream.h	/^    char *current_;$/;"	m	class:FileWriteStream
custom	dnn/contrib/spdlog/details/format.h	/^        CustomValue custom;$/;"	m	union:fmt::internal::Value::__anon25
custom_delims	dnn/util/pretty_print.h	/^        custom_delims(const Container & c) : base(new custom_delims_wrapper<Container, Delims>(c)) { }$/;"	f	struct:pretty_print::custom_delims
custom_delims	dnn/util/pretty_print.h	/^    struct custom_delims$/;"	s	namespace:pretty_print
custom_delims_base	dnn/util/pretty_print.h	/^    struct custom_delims_base$/;"	s	namespace:pretty_print
custom_delims_wrapper	dnn/util/pretty_print.h	/^        custom_delims_wrapper(const T & t_) : t(t_) { }$/;"	f	struct:pretty_print::custom_delims_wrapper
custom_delims_wrapper	dnn/util/pretty_print.h	/^    struct custom_delims_wrapper : custom_delims_base$/;"	s	namespace:pretty_print
cutFromRight	dnn/util/time_series.h	/^	void cutFromRight(size_t cutSize) {$/;"	f	struct:dnn::TimeSeriesGeneric
cutTimeSeries	shapelets/subsequence.cpp	/^Ptr<TimeSeries> Subsequence::cutTimeSeries() {$/;"	f	class:dnn::shapelets::Subsequence
d	dnn/contrib/rapidjson/document.h	/^        double d;$/;"	m	union:GenericValue::Number
d	dnn/contrib/rapidjson/internal/ieee754.h	/^        double d;$/;"	m	union:internal::Double::__anon9
d	dnn/util/json.cpp	/^Document Json::d;$/;"	m	class:dnn::Json	file:
d	dnn/util/json.h	/^	static Document d;$/;"	m	class:dnn::Json
d	dnn/util/random/pcg_uint128.hpp	/^        } d;$/;"	m	union:pcg_extras::uint_x4::__anon1	typeref:struct:pcg_extras::uint_x4::__anon1::__anon3
dLLH_dw	dnn/learning_rules/srm_methods.h	/^    static inline double dLLH_dw(const SRMNeuron &n, const SynapseBase &syn) {$/;"	f	class:dnn::SRMMethods
dLLH_dw_formula	dnn/learning_rules/srm_methods.h	/^	static inline double dLLH_dw_formula(const double &p, const double &p_stroke, const double &M, const double &fired, const double &x) {$/;"	f	class:dnn::SRMMethods
dLLH_dw_given_Y	dnn/learning_rules/srm_methods.h	/^    static inline double dLLH_dw_given_Y(const SRMNeuron &n, const SynapseBase &syn, const double &fired) {$/;"	f	class:dnn::SRMMethods
d_	dnn/contrib/rapidjson/document.h	/^        GenericDocument& d_;$/;"	m	struct:GenericDocument::ClearStackOnExit
d_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class d_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
da	dnn/util/random/pcg_uint128.hpp	/^        UIntX2 da[2];$/;"	m	union:pcg_extras::uint_x4::__anon1
daily_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^    daily_file_sink($/;"	f	class:spdlog::sinks::daily_file_sink
daily_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^class daily_file_sink :public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks
daily_file_sink_mt	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<std::mutex> daily_file_sink_mt;$/;"	t	namespace:spdlog::sinks
daily_file_sink_st	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef daily_file_sink<details::null_mutex> daily_file_sink_st;$/;"	t	namespace:spdlog::sinks
daily_logger_mt	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_mt(const std::string& logger_name, const tstring& filename, int hour, int minute, bool force_flush)$/;"	f	class:spdlog
daily_logger_st	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::daily_logger_st(const std::string& logger_name, const tstring& filename, int hour, int minute, bool force_flush)$/;"	f	class:spdlog
data	dnn/contrib/spdlog/details/format.h	/^    const Char *data() const {$/;"	f	class:fmt::BasicStringRef
data	dnn/contrib/spdlog/details/format.h	/^    const char *data() const {$/;"	f	class:fmt::FormatInt
data	dnn/util/time_series.h	/^	vector<DATA> data;$/;"	m	struct:dnn::TimeSeriesGeneric
data_	dnn/contrib/rapidjson/document.h	/^    Data data_;$/;"	m	class:GenericValue
data_	dnn/contrib/spdlog/details/format.h	/^    T data_[SIZE];$/;"	m	class:fmt::internal::MemoryBuffer
data_	dnn/contrib/spdlog/details/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicCStringRef
data_	dnn/contrib/spdlog/details/format.h	/^    const Char *data_;$/;"	m	class:fmt::BasicStringRef
data_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^        T                     data_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t
debug	dnn/contrib/spdlog/common.h	/^    debug    = 1,$/;"	e	enum:spdlog::level::__anon23
debug	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::debug()$/;"	f	class:spdlog::logger
debug	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::debug(const T& msg)$/;"	f	class:spdlog::logger
debug	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::debug(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
debug	dnn/util/log/log.h	/^    spdlog::details::line_logger debug() {$/;"	f	class:dnn::Log
def_value	dnn/inputs/input.cpp	/^const double InputBase::def_value = 0.0;$/;"	m	class:dnn::InputBase	file:
def_value	dnn/inputs/input.h	/^    static const double def_value;$/;"	m	class:dnn::InputBase
default_increment	dnn/util/random/pcg_random.hpp	/^struct default_increment {$/;"	s	namespace:pcg_detail
default_multiplier	dnn/util/random/pcg_random.hpp	/^struct default_multiplier {$/;"	s	namespace:pcg_detail
deleteCurrentMessage	dnn/io/serialize.h	/^    void deleteCurrentMessage() {$/;"	f	class:dnn::SerializableBase
delimiter	dnn/util/pretty_print.h	/^        const char_type * delimiter;$/;"	m	struct:pretty_print::delimiters_values
delimiters	dnn/util/pretty_print.h	/^    struct delimiters$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters< ::std::tuple<Args...>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters<std::tuple<Args...>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters<std::pair<T1, T2>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters_values	dnn/util/pretty_print.h	/^    struct delimiters_values$/;"	s	namespace:pretty_print
delta	dnn/util/fast_delegate.h	/^	int delta;		\/\/ #bytes to be added to the 'this' pointer$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
dendriteDelay	dnn/synapses/synapse.h	/^	double dendriteDelay;$/;"	m	struct:dnn::SynapseInfo
dendriteDelay	dnn/synapses/synapse.h	/^	inline const double& dendriteDelay() {$/;"	f	class:dnn::SynapseBase
depression_factor	dnn/weight_normalizations/nonlinear_min_max.h	/^    double depression_factor;$/;"	m	struct:dnn::NonLinearMinMaxC
dequeue	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    bool dequeue(T& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue
dequeue_pos_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     dequeue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
derivativeModulation	dnn/weight_normalizations/min_max.h	/^    double derivativeModulation(const double &w) {$/;"	f	class:dnn::MinMax
derivativeModulation	dnn/weight_normalizations/pow_min_max.h	/^    double derivativeModulation(const double &w) {$/;"	f	class:dnn::PowMinMax
derivativeModulation	dnn/weight_normalizations/sliding_ltd.h	/^    double derivativeModulation(const double &w) {$/;"	f	class:dnn::SlidingLtd
derivativeModulation	dnn/weight_normalizations/weight_normalization.h	/^	retDoubleAtRefDoubleDelegate derivativeModulation;$/;"	m	struct:dnn::WeightNormalizationInterface
derivativeModulation	dnn/weight_normalizations/weight_normalization.h	/^    virtual double derivativeModulation(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
destroy_stream	dnn/io/stream.h	/^    bool destroy_stream;$/;"	m	class:dnn::Stream
detail	dnn/util/fast_delegate.h	/^namespace detail {	\/\/ we'll hide the implementation details in a nested namespace.$/;"	n	namespace:fastdelegate
detail	dnn/util/fast_delegate.h	/^namespace detail {$/;"	n	namespace:fastdelegate
detail	dnn/util/pretty_print.h	/^    namespace detail$/;"	n	namespace:pretty_print
details	dnn/contrib/spdlog/async_logger.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/async_log_helper.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/file_helper.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/line_logger.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/log_msg.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/null_mutex.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/os.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/details/registry.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/formatter.h	/^namespace details$/;"	n	namespace:spdlog
details	dnn/contrib/spdlog/logger.h	/^namespace details$/;"	n	namespace:spdlog
dfilter	mpl/mpl.h	/^		DoubleMatrix dfilter;$/;"	m	struct:dnn::mpl::MatchingPursuit::SubSeqRet
digits_	dnn/contrib/rapidjson/internal/biginteger.h	/^    Type digits_[kCapacity];$/;"	m	class:internal::BigInteger
dim	dnn/util/time_series.h	/^	size_t dim() const {$/;"	f	struct:dnn::TimeSeriesGeneric
dim	shapelets/subsequence.cpp	/^size_t Subsequence::dim() const {$/;"	f	class:dnn::shapelets::Subsequence
dimOther	dnn/contrib/kiss_fft/kiss_fftndr.c	/^    int dimOther;$/;"	m	struct:kiss_fftndr_state	file:
dimReal	dnn/contrib/kiss_fft/kiss_fftndr.c	/^    int dimReal;$/;"	m	struct:kiss_fftndr_state	file:
dim_info	dnn/util/time_series.h	/^	TimeSeriesDimInfo dim_info;$/;"	m	struct:dnn::TimeSeriesGeneric
dimension	dnn/connections/difference_of_gaussians.h	/^    int dimension;$/;"	m	struct:dnn::DifferenceOfGaussiansC
dimprod	dnn/contrib/kiss_fft/kiss_fftnd.c	/^    int dimprod; \/* dimsum would be mighty tasty right now *\/$/;"	m	struct:kiss_fftnd_state	file:
dims	dnn/contrib/kiss_fft/kiss_fftnd.c	/^    int *dims;$/;"	m	struct:kiss_fftnd_state	file:
disable	dnn/contrib/spdlog/details/line_logger.h	/^    void disable()$/;"	f	class:spdlog::details::line_logger
discard	dnn/util/random/pcg_random.hpp	/^    void discard(itype delta)$/;"	f	class:pcg_detail::engine
dispatchOnThreads	dnn/util/util.cpp	/^vector<IndexSlice> dispatchOnThreads(size_t elements_size, size_t jobs) {$/;"	f	namespace:dnn
dist	shapelets/projection.h	/^    double dist;$/;"	m	struct:dnn::shapelets::Projection
distance	dnn/util/random/pcg_random.hpp	/^               multiplier_mixin>::distance($/;"	f	class:pcg_detail::engine
distance	dnn/util/random/pcg_random.hpp	/^    itype distance(itype newstate, itype mask = ~itype(0U)) const$/;"	f	class:pcg_detail::engine
divmod	dnn/util/random/pcg_uint128.hpp	/^    divmod(const uint_x4<UInt,UIntX2>& orig_dividend,$/;"	f	namespace:pcg_extras
dnn	dnn/act_functions/act_function.h	/^namespace dnn {$/;"	n
dnn	dnn/act_functions/determ.h	/^namespace dnn {$/;"	n
dnn	dnn/act_functions/exp_threshold.h	/^namespace dnn {$/;"	n
dnn	dnn/base/base.h	/^namespace dnn {$/;"	n
dnn	dnn/base/constants.h	/^namespace dnn {$/;"	n
dnn	dnn/base/exceptions.h	/^namespace dnn {$/;"	n
dnn	dnn/base/factory.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/base/factory.h	/^namespace dnn {$/;"	n
dnn	dnn/connections/connection.h	/^namespace dnn {$/;"	n
dnn	dnn/connections/difference_of_gaussians.h	/^namespace dnn {$/;"	n
dnn	dnn/connections/stochastic.h	/^namespace dnn {$/;"	n
dnn	dnn/inputs/input.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/inputs/input.h	/^namespace dnn {$/;"	n
dnn	dnn/inputs/input_time_series.h	/^namespace dnn {$/;"	n
dnn	dnn/io/serialize.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/io/serialize.h	/^namespace dnn {$/;"	n
dnn	dnn/io/stream.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/io/stream.h	/^namespace dnn {$/;"	n
dnn	dnn/layers/layer.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/learning_rule.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/optimal_stdp.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/learning_rules/optimal_stdp.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/srm_methods.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/stdp.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/stdp_time.h	/^namespace dnn {$/;"	n
dnn	dnn/learning_rules/triple_stdp.h	/^namespace dnn {$/;"	n
dnn	dnn/neurons/adapt_integrate_and_fire.h	/^namespace dnn {$/;"	n
dnn	dnn/neurons/leaky_integrate_and_fire.h	/^namespace dnn {$/;"	n
dnn	dnn/neurons/spike_neuron.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/neurons/spike_neuron.h	/^namespace dnn {$/;"	n
dnn	dnn/neurons/spike_sequence_neuron.h	/^namespace dnn {$/;"	n
dnn	dnn/neurons/srm_neuron.h	/^namespace dnn {$/;"	n
dnn	dnn/sim/builder.h	/^namespace dnn {$/;"	n
dnn	dnn/sim/global_ctx.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/sim/global_ctx.h	/^namespace dnn {$/;"	n
dnn	dnn/sim/network.h	/^namespace dnn {$/;"	n
dnn	dnn/sim/sim.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/sim/sim.h	/^namespace dnn {$/;"	n
dnn	dnn/sim/sim_info.h	/^namespace dnn {$/;"	n
dnn	dnn/synapses/static_synapse.h	/^namespace dnn {$/;"	n
dnn	dnn/synapses/std_synapse.h	/^namespace dnn {$/;"	n
dnn	dnn/synapses/synapse.h	/^namespace dnn {$/;"	n
dnn	dnn/util/act_vector.h	/^namespace dnn {$/;"	n
dnn	dnn/util/distributions.h	/^namespace dnn {$/;"	n
dnn	dnn/util/interfaced_ptr.h	/^namespace dnn {$/;"	n
dnn	dnn/util/json.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/json.h	/^namespace dnn {$/;"	n
dnn	dnn/util/log/log.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/log/log.h	/^namespace dnn {$/;"	n
dnn	dnn/util/matrix.h	/^namespace dnn {$/;"	n
dnn	dnn/util/option_parser.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/option_parser.h	/^namespace dnn {$/;"	n
dnn	dnn/util/ptr.h	/^namespace dnn {$/;"	n
dnn	dnn/util/spikes_list.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/spikes_list.h	/^namespace dnn {$/;"	n
dnn	dnn/util/spinning_barrier.h	/^namespace dnn {$/;"	n
dnn	dnn/util/statistics.h	/^namespace dnn {$/;"	n
dnn	dnn/util/time_series.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/time_series.h	/^namespace dnn {$/;"	n
dnn	dnn/util/util.cpp	/^namespace dnn {$/;"	n	file:
dnn	dnn/util/util.h	/^namespace dnn {$/;"	n
dnn	dnn/weight_normalizations/min_max.h	/^namespace dnn {$/;"	n
dnn	dnn/weight_normalizations/nonlinear_min_max.h	/^namespace dnn {$/;"	n
dnn	dnn/weight_normalizations/pow_min_max.h	/^namespace dnn {$/;"	n
dnn	dnn/weight_normalizations/sliding_ltd.h	/^namespace dnn {$/;"	n
dnn	dnn/weight_normalizations/weight_normalization.h	/^namespace dnn {$/;"	n
dnn	mpl/mpl.cpp	/^namespace dnn {$/;"	n	file:
dnn	mpl/mpl.h	/^namespace dnn {$/;"	n
dnn	shapelets/common.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/common.h	/^namespace dnn {$/;"	n
dnn	shapelets/dataset.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/dataset.h	/^namespace dnn {$/;"	n
dnn	shapelets/dist.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/dist.h	/^namespace dnn {$/;"	n
dnn	shapelets/orderline.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/orderline.h	/^namespace dnn {$/;"	n
dnn	shapelets/projection.h	/^namespace dnn {$/;"	n
dnn	shapelets/shapelets_algo.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/shapelets_algo.h	/^namespace dnn {$/;"	n
dnn	shapelets/shapelets_config.h	/^namespace dnn {$/;"	n
dnn	shapelets/stats.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/stats.h	/^namespace dnn {$/;"	n
dnn	shapelets/subsequence.cpp	/^namespace dnn {$/;"	n	file:
dnn	shapelets/subsequence.h	/^namespace dnn {$/;"	n
dnn	spikework/conv.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/conv.h	/^namespace dnn {$/;"	n
dnn	spikework/fft.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/fft.h	/^namespace dnn {$/;"	n
dnn	spikework/gram.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/gram.h	/^namespace dnn {$/;"	n
dnn	spikework/io_processor.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/io_processor.h	/^namespace dnn {$/;"	n
dnn	spikework/kernel.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/kernel.h	/^namespace dnn {$/;"	n
dnn	spikework/processor.h	/^namespace dnn {$/;"	n
dnn	spikework/read.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/read.h	/^namespace dnn {$/;"	n
dnn	spikework/spikework.cpp	/^namespace dnn {$/;"	n	file:
dnn	spikework/spikework.h	/^namespace dnn {$/;"	n
dnnException	dnn/base/exceptions.h	/^	dnnException() {}$/;"	f	struct:dnn::dnnException
dnnException	dnn/base/exceptions.h	/^	dnnException(dnnException &exc) {$/;"	f	struct:dnn::dnnException
dnnException	dnn/base/exceptions.h	/^struct dnnException : public std::exception$/;"	s	namespace:dnn
dnnInterrupt	dnn/base/exceptions.h	/^struct dnnInterrupt : public std::exception {$/;"	s	namespace:dnn
do_get_arg	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC Arg fmt::internal::FormatterBase::do_get_arg($/;"	f	class:fmt::internal::FormatterBase
document	dnn/io/stream.h	/^    Document document;$/;"	m	class:dnn::Stream
double_value	dnn/contrib/spdlog/details/format.h	/^        double double_value;$/;"	m	union:fmt::internal::Value::__anon25
drop	dnn/contrib/spdlog/details/registry.h	/^    void drop(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t
drop	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::drop(const std::string &name)$/;"	f	class:spdlog
drop_all	dnn/contrib/spdlog/details/registry.h	/^    void drop_all()$/;"	f	class:spdlog::details::registry_t
drop_all	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::drop_all()$/;"	f	class:spdlog
ds	shapelets/stats.h	/^    const Dataset &ds;$/;"	m	class:dnn::shapelets::Stats
dst_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* dst_;$/;"	m	struct:GenericInsituStringStream
dt	dnn/base/base.h	/^    double dt;$/;"	m	struct:dnn::Time
dt	dnn/base/constants.h	/^	double dt;$/;"	m	struct:dnn::SimConfiguration
dt	dnn/inputs/input_time_series.h	/^    double dt;$/;"	m	struct:dnn::InputTimeSeriesC
dt	dnn/neurons/spike_sequence_neuron.h	/^    double dt;$/;"	m	struct:dnn::SpikeSequenceNeuronC
dt	spikework/io_processor.h	/^    double dt;$/;"	m	class:dnn::IOProcessor
dtoa	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* dtoa(double value, char* buffer) {$/;"	f	namespace:internal
duration	dnn/sim/sim.h	/^	double duration;$/;"	m	class:dnn::Sim
e	dnn/contrib/rapidjson/internal/diyfp.h	/^    int e;$/;"	m	struct:internal::DiyFp
e	dnn/util/statistics.h	/^    std::regex e;$/;"	m	struct:dnn::stringLessThan
e_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class e_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
elements	dnn/contrib/rapidjson/document.h	/^        GenericValue* elements;$/;"	m	struct:GenericValue::Array
emerg	dnn/contrib/spdlog/common.h	/^    emerg    = 8,$/;"	e	enum:spdlog::level::__anon23
emerg	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::emerg()$/;"	f	class:spdlog::logger
emerg	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::emerg(const T& msg)$/;"	f	class:spdlog::logger
emerg	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::emerg(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const		\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::DelegateMemento
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate0
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate1
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate2
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate3
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate4
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate5
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate6
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate7
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate8
end	dnn/io/serialize.h	/^    enum EndMarker { end };$/;"	e	enum:dnn::SerializableBase::EndMarker
end	dnn/util/act_vector.h	/^	typename vector<T>::const_iterator end() const {$/;"	f	class:dnn::ActVector
end	dnn/util/act_vector.h	/^	typename vector<T>::iterator end() {$/;"	f	class:dnn::ActVector
end	dnn/util/pretty_print.h	/^        const_iterator end() const$/;"	f	struct:pretty_print::bucket_print_wrapper
end	dnn/util/pretty_print.h	/^        inline const_iterator end() const { return _array + _n; }$/;"	f	struct:pretty_print::array_wrapper_n
end	shapelets/dataset.h	/^    vector<Ptr<TimeSeries>>::const_iterator end() const {$/;"	f	class:dnn::shapelets::Dataset
end	shapelets/dataset.h	/^    vector<Ptr<TimeSeries>>::iterator end() {$/;"	f	class:dnn::shapelets::Dataset
end	spikework/io_processor.cpp	/^void IOProcessor::end(Spikework::Stack &s) {$/;"	f	class:dnn::IOProcessor
end	spikework/processor.h	/^	virtual void end(Spikework::Stack &s) {}$/;"	f	class:dnn::Processor
endSize	shapelets/shapelets_config.h	/^    size_t endSize;$/;"	m	struct:dnn::shapelets::ShapeletsConfig
end_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* end_;     \/\/!< End of stream.$/;"	m	struct:MemoryStream
end_value	dnn/util/pretty_print.h	/^            static bool const end_value = sizeof(g<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_begin_end
engine	dnn/util/random/pcg_random.hpp	/^    engine(SeedSeq&& seedSeq, typename std::enable_if<$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^    engine(itype state = itype(0xcafef00dd15ea5e5ULL))$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^    engine(itype state, typename sm::stream_state stream_seed)$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^class engine : protected output_mixin,$/;"	c	namespace:pcg_detail
enqueue	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    bool enqueue(T&& data)$/;"	f	class:spdlog::details::mpmc_bounded_queue
enqueueSpike	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::enqueueSpike(const SynSpike && sp) {$/;"	f	class:dnn::SpikeNeuronBase
enqueue_pos_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    std::atomic<size_t>     enqueue_pos_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
entity_map_type	dnn/base/factory.h	/^    typedef map<string, SerializableBase* (*)()> entity_map_type;$/;"	t	class:dnn::Factory
entropy	shapelets/dataset.h	/^    const double& entropy() const {$/;"	f	class:dnn::shapelets::Dataset
eof_	dnn/contrib/rapidjson/filereadstream.h	/^    bool eof_;$/;"	m	class:FileReadStream
eol	dnn/contrib/spdlog/details/os.h	/^constexpr inline const char* eol()$/;"	f	namespace:spdlog::details::os
eol	dnn/contrib/spdlog/details/os.h	/^inline const char* eol()$/;"	f	namespace:spdlog::details::os
eol_size	dnn/contrib/spdlog/details/os.h	/^constexpr inline unsigned short eol_size()$/;"	f	namespace:spdlog::details::os
eol_size	dnn/contrib/spdlog/details/os.h	/^inline unsigned short eol_size()$/;"	f	namespace:spdlog::details::os
err	dnn/contrib/spdlog/common.h	/^    err      = 5,$/;"	e	enum:spdlog::level::__anon23
error	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::error()$/;"	f	class:spdlog::logger
error	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::error(const T& msg)$/;"	f	class:spdlog::logger
error	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::error(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
error_code	dnn/contrib/spdlog/details/format.h	/^    int error_code() const {$/;"	f	class:fmt::SystemError
error_code_	dnn/contrib/spdlog/details/format.h	/^    int error_code_;$/;"	m	class:fmt::SystemError
exists	dnn/connections/connection.h	/^	bool exists;$/;"	m	struct:dnn::ConnectionRecipe
f	dnn/contrib/rapidjson/internal/diyfp.h	/^    uint64_t f;$/;"	m	struct:internal::DiyFp
f	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	m	union:__anon4::__anon5
f	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	m	union:__anon4::__anon7
f_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class f_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
factors	dnn/contrib/kiss_fft/_kiss_fft_guts.h	/^    int factors[2*MAXFACTORS];$/;"	m	struct:kiss_fft_state
fail	dnn/util/barrier.h	/^    void fail() {$/;"	f	class:Barrier
fail	dnn/util/spinning_barrier.h	/^    void fail() {$/;"	f	class:dnn::SpinningBarrier
fastcos	dnn/util/fastapprox/fasttrig.h	/^fastcos (float x)$/;"	f
fastcosfull	dnn/util/fastapprox/fasttrig.h	/^fastcosfull (float x)$/;"	f
fastdelegate	dnn/util/fast_delegate.h	/^namespace fastdelegate {$/;"	n
fastdelegate	dnn/util/fast_delegate_bind.h	/^namespace fastdelegate {$/;"	n
fastercos	dnn/util/fastapprox/fasttrig.h	/^fastercos (float x)$/;"	f
fastercosfull	dnn/util/fastapprox/fasttrig.h	/^fastercosfull (float x)$/;"	f
fasterexp	dnn/util/fastapprox/fastexp.h	/^fasterexp (float p)$/;"	f
fasterlog	dnn/util/fastapprox/fastlog.h	/^fasterlog (float x)$/;"	f
fasterlog2	dnn/util/fastapprox/fastlog.h	/^fasterlog2 (float x)$/;"	f
fasterpow	dnn/util/fastapprox/fastpow.h	/^fasterpow (float x,$/;"	f
fasterpow2	dnn/util/fastapprox/fastexp.h	/^fasterpow2 (float p)$/;"	f
fastersigmoid	dnn/util/fastapprox/fastsigmoid.h	/^fastersigmoid (float x)$/;"	f
fastersin	dnn/util/fastapprox/fasttrig.h	/^fastersin (float x)$/;"	f
fastersinfull	dnn/util/fastapprox/fasttrig.h	/^fastersinfull (float x)$/;"	f
fastertan	dnn/util/fastapprox/fasttrig.h	/^fastertan (float x)$/;"	f
fastertanfull	dnn/util/fastapprox/fasttrig.h	/^fastertanfull (float x)$/;"	f
fastexp	dnn/util/fastapprox/fastexp.h	/^fastexp (float p)$/;"	f
fastlog	dnn/util/fastapprox/fastlog.h	/^fastlog (float x)$/;"	f
fastlog2	dnn/util/fastapprox/fastlog.h	/^fastlog2 (float x)$/;"	f
fastpow	dnn/util/fastapprox/fastpow.h	/^fastpow (float x,$/;"	f
fastpow2	dnn/util/fastapprox/fastexp.h	/^fastpow2 (float p)$/;"	f
fastsigmoid	dnn/util/fastapprox/fastsigmoid.h	/^fastsigmoid (float x)$/;"	f
fastsin	dnn/util/fastapprox/fasttrig.h	/^fastsin (float x)$/;"	f
fastsinfull	dnn/util/fastapprox/fasttrig.h	/^fastsinfull (float x)$/;"	f
fasttan	dnn/util/fastapprox/fasttrig.h	/^fasttan (float x)$/;"	f
fasttanfull	dnn/util/fastapprox/fasttrig.h	/^fasttanfull (float x)$/;"	f
fft	spikework/fft.cpp	/^void FFTProcessor::fft(const TimeSeries &src, TimeSeriesComplex &dst) {$/;"	f	class:dnn::FFTProcessor
fft_sub	tools/spikework/fft.cpp	/^int fft_sub(int argc, char **argv) {$/;"	f
fft_usage	tools/spikework/fft.cpp	/^const char * fft_usage = R"USAGE(SPIKEWORK ===========================================================$/;"	v
fi	mpl/mpl.h	/^	size_t fi;$/;"	m	struct:dnn::mpl::FilterMatch
field_descr	dnn/io/serialize.h	/^    const google::protobuf::FieldDescriptor* field_descr;$/;"	m	class:dnn::Serializable
fileExists	dnn/util/util.cpp	/^bool fileExists(const std::string& name) {$/;"	f	namespace:dnn
file_exists	dnn/contrib/spdlog/details/file_helper.h	/^    static bool file_exists(const tstring& name)$/;"	f	class:spdlog::details::file_helper
file_helper	dnn/contrib/spdlog/details/file_helper.h	/^    explicit file_helper(bool force_flush):$/;"	f	class:spdlog::details::file_helper
file_helper	dnn/contrib/spdlog/details/file_helper.h	/^class file_helper$/;"	c	namespace:spdlog::details
filed2json	dnn/contrib/pbjson/pbjson.cpp	/^    static rapidjson::Value* filed2json(const Message *msg, const FieldDescriptor *field,$/;"	f	namespace:pbjson
filename	dnn/contrib/spdlog/details/file_helper.h	/^    const tstring& filename() const$/;"	f	class:spdlog::details::file_helper
files	dnn/base/constants.h	/^	map<string, string> files;$/;"	m	struct:dnn::SimConfiguration
fill	dnn/base/constants.h	/^	static void fill(const Value &v, map<string, string> &m) {$/;"	f	struct:dnn::Constants
fill	dnn/contrib/spdlog/details/format.h	/^    char fill() const {$/;"	f	struct:fmt::TypeSpec
fill	dnn/contrib/spdlog/details/format.h	/^    wchar_t fill() const {$/;"	f	struct:fmt::WidthSpec
fill	dnn/util/matrix.h	/^    void fill(double val) {$/;"	f	class:dnn::DoubleMatrix
fill_	dnn/contrib/spdlog/details/format.h	/^    wchar_t fill_;$/;"	m	struct:fmt::WidthSpec
fill_log_msg	dnn/contrib/spdlog/details/async_log_helper.h	/^        void fill_log_msg(log_msg &msg)$/;"	f	struct:spdlog::details::async_log_helper::async_msg
fill_padding	dnn/contrib/spdlog/details/format.h	/^BasicWriter<Char>::fill_padding($/;"	f	class:fmt::BasicWriter
fill_twiddles	dnn/contrib/kiss_fft/kissfft.hh	/^    void fill_twiddles( std::complex<T_scalar> * dst ,int nfft,bool inverse)$/;"	f	struct:kissfft_utils::traits
filter	mpl/mpl.h	/^	DoubleMatrix filter;$/;"	m	class:dnn::mpl::MatchingPursuit
filter	spikework/conv.h	/^    Ptr<TimeSeries> filter;$/;"	m	class:dnn::ConvProcessor
filter_size	mpl/mpl.h	/^	size_t filter_size;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
filters_num	mpl/mpl.h	/^	size_t filters_num;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
find	dnn/contrib/spdlog/details/format.h	/^    const internal::Arg* find(const fmt::BasicStringRef<Char> &name) const {$/;"	f	class:fmt::internal::ArgMap
fired	dnn/neurons/spike_neuron.cpp	/^const bool& SpikeNeuronBase::fired() const {$/;"	f	class:dnn::SpikeNeuronBase
fired	dnn/synapses/synapse.h	/^	inline const double fired() const {$/;"	f	class:dnn::SynapseBase
fits_in_int	dnn/contrib/spdlog/details/format.cc	/^    static bool fits_in_int(T value) {$/;"	f	struct:fmt::__anon32::IntChecker
fits_in_int	dnn/contrib/spdlog/details/format.cc	/^    static bool fits_in_int(bool) {$/;"	f	struct:fmt::__anon32::IntChecker
flag	dnn/contrib/spdlog/details/format.h	/^    bool flag(unsigned f) const {$/;"	f	struct:fmt::FormatSpec
flag	dnn/contrib/spdlog/details/format.h	/^    bool flag(unsigned) const {$/;"	f	struct:fmt::AlignTypeSpec
flag	dnn/contrib/spdlog/details/format.h	/^    bool flag(unsigned) const {$/;"	f	struct:fmt::TypeSpec
flag_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class flag_formatter$/;"	c	namespace:spdlog::details
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue() RAPIDJSON_NOEXCEPT : data_(), flags_(kNullFlag) {}$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue(GenericValue&& rhs) RAPIDJSON_NOEXCEPT : data_(rhs.data_), flags_(rhs.flags_) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(StringRef(s, length)); }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(StringRefType s) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(s); }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(Type type) RAPIDJSON_NOEXCEPT : data_(), flags_() {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(double d) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberDoubleFlag) { data_.n.d = d; }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(int i) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberIntFlag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(int64_t i64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberInt64Flag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(uint64_t u64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUint64Flag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(unsigned u) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUintFlag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    unsigned flags_;$/;"	m	class:GenericValue
flags_	dnn/contrib/spdlog/details/format.h	/^    unsigned flags_;$/;"	m	struct:fmt::FormatSpec
flog2	dnn/util/random/pcg_uint128.hpp	/^bitcount_t flog2(const uint_x4<U,V>& v)$/;"	f	namespace:pcg_extras
flog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t flog2(uint32_t v)$/;"	f	namespace:pcg_extras
flog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t flog2(uint64_t v)$/;"	f	namespace:pcg_extras
flush	dnn/contrib/spdlog/details/file_helper.h	/^    void flush() {$/;"	f	class:spdlog::details::file_helper
flush	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::flush() {$/;"	f	class:spdlog::logger
fmt	dnn/contrib/spdlog/details/format.cc	/^namespace fmt {$/;"	n	file:
fmt	dnn/contrib/spdlog/details/format.h	/^namespace fmt {$/;"	n
fnv	dnn/util/random/pcg_extras.hpp	/^    static constexpr IntType fnv(IntType hash, const char* pos) {$/;"	f	struct:pcg_extras::static_arbitrary_seed
fopen_s	dnn/contrib/spdlog/details/os.h	/^inline int fopen_s(FILE** fp, const tstring& filename, const tchar* mode)$/;"	f	namespace:spdlog::details::os
force_log	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::force_log(level::level_enum lvl, const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
format	dnn/contrib/spdlog/details/format.cc	/^const Char *fmt::BasicFormatter<Char>::format($/;"	f	class:fmt::BasicFormatter
format	dnn/contrib/spdlog/details/format.cc	/^void fmt::BasicFormatter<Char>::format($/;"	f	class:fmt::BasicFormatter
format	dnn/contrib/spdlog/details/format.cc	/^void fmt::internal::PrintfFormatter<Char>::format($/;"	f	class:fmt::internal::PrintfFormatter
format	dnn/contrib/spdlog/details/format.h	/^        FormatFunc format;$/;"	m	struct:fmt::internal::Value::CustomValue
format	dnn/contrib/spdlog/details/format.h	/^inline std::string format(CStringRef format_str, ArgList args) {$/;"	f	namespace:fmt
format	dnn/contrib/spdlog/details/format.h	/^inline std::wstring format(WCStringRef format_str, ArgList args) {$/;"	f	namespace:fmt
format	dnn/contrib/spdlog/details/format.h	/^void format(BasicFormatter<Char> &f, const Char *&format_str, const T &value) {$/;"	f	namespace:fmt
format	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::format(details::log_msg& msg)$/;"	f	class:spdlog::pattern_formatter
format_	dnn/contrib/spdlog/details/format.cc	/^    const Char *format_;$/;"	m	class:fmt::internal::ArgFormatter	file:
format_custom_arg	dnn/contrib/spdlog/details/format.h	/^    static void format_custom_arg($/;"	f	class:fmt::internal::MakeValue
format_decimal	dnn/contrib/spdlog/details/format.h	/^    char *format_decimal(ULongLong value) {$/;"	f	class:fmt::FormatInt
format_decimal	dnn/contrib/spdlog/details/format.h	/^inline void format_decimal(Char *buffer, UInt value, unsigned num_digits) {$/;"	f	namespace:fmt::internal
format_decimal	dnn/contrib/spdlog/details/format.h	/^inline void format_decimal(char *&buffer, T value) {$/;"	f	namespace:fmt
format_float	dnn/contrib/spdlog/details/format.cc	/^int fmt::internal::CharTraits<char>::format_float($/;"	f	class:fmt::internal::CharTraits
format_float	dnn/contrib/spdlog/details/format.cc	/^int fmt::internal::CharTraits<wchar_t>::format_float($/;"	f	class:fmt::internal::CharTraits
formatted	dnn/contrib/spdlog/details/log_msg.h	/^    fmt::MemoryWriter formatted;$/;"	m	struct:spdlog::details::log_msg
formatter	dnn/contrib/spdlog/details/registry.h	/^    void formatter(formatter_ptr f)$/;"	f	class:spdlog::details::registry_t
formatter	dnn/contrib/spdlog/formatter.h	/^class formatter$/;"	c	namespace:spdlog
formatter_	dnn/contrib/spdlog/details/format.cc	/^    BasicFormatter<Char> &formatter_;$/;"	m	class:fmt::internal::ArgFormatter	file:
fp_	dnn/contrib/rapidjson/filereadstream.h	/^    std::FILE* fp_;$/;"	m	class:FileReadStream
fp_	dnn/contrib/rapidjson/filestream.h	/^    std::FILE* fp_;$/;"	m	class:FileStream
fp_	dnn/contrib/rapidjson/filewritestream.h	/^    std::FILE* fp_;$/;"	m	class:FileWriteStream
fprintf	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC int fmt::fprintf(std::FILE *f, CStringRef format, ArgList args) {$/;"	f	class:fmt
free	dnn/contrib/spdlog/details/format.h	/^    void free() {$/;"	f	class:fmt::internal::MemoryBuffer
from	dnn/util/distributions.h	/^    double from;$/;"	m	class:dnn::UniformDistribution
from	dnn/util/util.h	/^    size_t from;$/;"	m	struct:dnn::IndexSlice
from	shapelets/subsequence.h	/^    const size_t& from() const {$/;"	f	class:dnn::shapelets::Subsequence
full_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class full_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
fun	spikework/kernel.h	/^    KernelFun fun;$/;"	m	class:dnn::Kernel
funDelegate	dnn/base/base.h	/^typedef FastDelegate1<const double&, double> funDelegate;$/;"	t	namespace:dnn
gKCa	dnn/neurons/adapt_integrate_and_fire.h	/^    double gKCa;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
ga	dnn/neurons/srm_neuron.h	/^    double ga;$/;"	m	struct:dnn::SRMNeuronState
gain	dnn/util/distributions.h	/^    double gain;$/;"	m	class:dnn::ExpDistribution
gain	shapelets/orderline.h	/^        double gain;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
gamma	dnn/synapses/std_synapse.h	/^    double gamma;$/;"	m	struct:dnn::STDSynapseC
gap	shapelets/orderline.h	/^        double gap;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
gaussFunction	dnn/connections/difference_of_gaussians.h	/^    static double gaussFunction(double x, double xc, double sigma) {$/;"	f	class:dnn::DifferenceOfGaussians
gaussFunction2d	dnn/connections/difference_of_gaussians.h	/^    static double gaussFunction2d(double x, double y, double xc, double yc, double sigma) {$/;"	f	class:dnn::DifferenceOfGaussians
generate	dnn/util/random/pcg_extras.hpp	/^    void generate(Iter start, Iter finish)$/;"	f	class:pcg_extras::seed_seq_from
generate	spikework/kernel.cpp	/^Ptr<TimeSeries> Kernel::generate(size_t dim, size_t length, double dt) {$/;"	f	class:dnn::Kernel
generateProtos	generate_protos.py	/^def generateProtos(all_structures, package, dst):$/;"	f
generate_one	dnn/util/random/pcg_extras.hpp	/^inline UInt generate_one(SeedSeq&& generator)$/;"	f	namespace:pcg_extras
generate_to	dnn/util/random/pcg_extras.hpp	/^inline void generate_to(SeedSeq&& generator, DestIter dest)$/;"	f	namespace:pcg_extras
generate_to_impl	dnn/util/random/pcg_extras.hpp	/^inline void generate_to_impl(SeedSeq&& generator, DestIter dest,$/;"	f	namespace:pcg_extras
generate_to_impl	dnn/util/random/pcg_extras.hpp	/^void generate_to_impl(SeedSeq&& generator, DestIter dest,$/;"	f	namespace:pcg_extras
get	dnn/contrib/spdlog/details/format.h	/^    static Char *get(Char *p) {$/;"	f	class:fmt::BasicWriter
get	dnn/contrib/spdlog/details/format.h	/^    static Char *get(CharPtr p) {$/;"	f	class:fmt::BasicWriter
get	dnn/contrib/spdlog/details/registry.h	/^    std::shared_ptr<logger> get(const std::string& logger_name)$/;"	f	class:spdlog::details::registry_t
get	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::get(const std::string& name)$/;"	f	class:spdlog
get	dnn/util/act_vector.h	/^	inline T& get(const size_t &i) {$/;"	f	class:dnn::ActVector
get	dnn/util/act_vector.h	/^	inline const T& get(const size_t &i) const {$/;"	f	class:dnn::ActVector
getActFunction	dnn/neurons/spike_neuron.cpp	/^const InterfacedPtr<ActFunctionBase>& SpikeNeuronBase::getActFunction() const {$/;"	f	class:dnn::SpikeNeuronBase
getArray	dnn/util/json.h	/^	static Value getArray(const Value &v, const string name) {$/;"	f	class:dnn::Json
getBoolCopyDelegate	dnn/base/base.h	/^typedef FastDelegate0<bool> getBoolCopyDelegate;$/;"	t	namespace:dnn
getBoolDelegate	dnn/base/base.h	/^typedef FastDelegate0<const bool&> getBoolDelegate;$/;"	t	namespace:dnn
getBoolMutDelegate	dnn/base/base.h	/^typedef FastDelegate0<bool&> getBoolMutDelegate;$/;"	t	namespace:dnn
getBoolVal	dnn/util/json.h	/^	static bool getBoolVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getCachedObject	dnn/base/factory.cpp	/^SerializableBase* Factory::getCachedObject(const string& filename) {$/;"	f	class:dnn::Factory
getConnectionRecipe	dnn/connections/difference_of_gaussians.h	/^    ConnectionRecipe getConnectionRecipe(const SpikeNeuronBase &left, const SpikeNeuronBase &right) {$/;"	f	class:dnn::DifferenceOfGaussians
getConnectionRecipe	dnn/connections/stochastic.h	/^    ConnectionRecipe getConnectionRecipe(const SpikeNeuronBase &left, const SpikeNeuronBase &right) {$/;"	f	class:dnn::Stochastic
getConstants	dnn/sim/global_ctx.h	/^	const Constants& getConstants() const {$/;"	f	class:dnn::GlobalCtx
getDeserialized	dnn/io/serialize.h	/^    void getDeserialized(vector<ProtoMessage> &inp_mess) {$/;"	f	class:dnn::SerializableBase
getDoubleAtTimeDelegate	dnn/base/base.h	/^typedef FastDelegate1<const Time&,double> getDoubleAtTimeDelegate;$/;"	t	namespace:dnn
getDoubleDelegate	dnn/base/base.h	/^typedef FastDelegate0<const double&> getDoubleDelegate;$/;"	t	namespace:dnn
getDoubleVal	dnn/util/json.h	/^	static double getDoubleVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getDoubleValDef	dnn/util/json.h	/^	static double getDoubleValDef(const Value &v, const string name, double def) {$/;"	f	class:dnn::Json
getElement	dnn/util/matrix.h	/^    double getElement(size_t i, size_t j) const {$/;"	f	class:dnn::DoubleMatrix
getExp	dnn/util/util.cpp	/^double getExp(double rate) {$/;"	f	namespace:dnn
getFileSize	dnn/util/util.cpp	/^long getFileSize(string filename) {$/;"	f	namespace:dnn
getFilter	mpl/mpl.h	/^	const DoubleMatrix& getFilter() {$/;"	f	class:dnn::mpl::MatchingPursuit
getFiringProbability	dnn/neurons/adapt_integrate_and_fire.h	/^    const double& getFiringProbability() {$/;"	f	class:dnn::AdaptIntegrateAndFire
getFiringProbability	dnn/neurons/leaky_integrate_and_fire.h	/^    const double& getFiringProbability() {$/;"	f	class:dnn::LeakyIntegrateAndFire
getFiringProbability	dnn/neurons/spike_neuron.h	/^	const double& getFiringProbability() const {$/;"	f	class:dnn::SpikeNeuron
getFiringProbability	dnn/neurons/spike_sequence_neuron.h	/^    const double& getFiringProbability() {$/;"	f	class:dnn::SpikeSequenceNeuron
getHeader	dnn/io/serialize.h	/^    Protos::ClassName* getHeader() {$/;"	f	class:dnn::SerializableBase
getHeader	dnn/io/serialize.h	/^    static Protos::ClassName* getHeader(vector<ProtoMessage> &messages) {$/;"	f	class:dnn::SerializableBase
getInfo	dnn/learning_rules/learning_rule.h	/^	LearningRuleInfo getInfo() {$/;"	f	class:dnn::LearningRule
getInfo	dnn/neurons/spike_neuron.h	/^	SpikeNeuronInfo getInfo() {$/;"	f	class:dnn::SpikeNeuron
getInfo	dnn/synapses/synapse.h	/^	SynapseInfo getInfo() {$/;"	f	class:dnn::Synapse
getInfo	dnn/util/spikes_list.h	/^	SpikesListInfo getInfo() {$/;"	f	struct:dnn::SpikesList
getInfo	dnn/util/statistics.h	/^	StatisticsInfo getInfo() {$/;"	f	class:dnn::Statistics
getInput	dnn/neurons/spike_neuron.cpp	/^InputBase& SpikeNeuronBase::getInput() {$/;"	f	class:dnn::SpikeNeuronBase
getInputStream	dnn/io/stream.h	/^    istream& getInputStream() {$/;"	f	class:dnn::Stream
getIntVal	dnn/util/json.h	/^	static size_t getIntVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getLabel	dnn/util/time_series.h	/^	const string& getLabel() {$/;"	f	struct:dnn::TimeSeriesGeneric
getLabelId	dnn/util/time_series.h	/^	const size_t& getLabelId() {$/;"	f	struct:dnn::TimeSeriesGeneric
getLearningRule	dnn/neurons/spike_neuron.cpp	/^InterfacedPtr<LearningRuleBase>& SpikeNeuronBase::getLearningRule() {$/;"	f	class:dnn::SpikeNeuronBase
getLogNorm	dnn/util/util.cpp	/^double getLogNorm(double logmean, double logsd) {$/;"	f	namespace:dnn
getMembranePotential	dnn/neurons/spike_neuron.h	/^    const double& getMembranePotential() const {$/;"	f	class:dnn::SpikeNeuron
getMutSynapses	dnn/neurons/spike_neuron.cpp	/^ActVector<InterfacedPtr<SynapseBase>>& SpikeNeuronBase::getMutSynapses() {$/;"	f	class:dnn::SpikeNeuronBase
getMutVector	dnn/util/time_series.h	/^	vector<ELEM>& getMutVector(size_t ndim) {$/;"	f	struct:dnn::TimeSeriesGeneric
getNorm	dnn/util/util.cpp	/^double getNorm() {$/;"	f	namespace:dnn
getObject	dnn/base/factory.h	/^    SerializableBase* getObject(object_iter &it) {$/;"	f	class:dnn::Factory
getObjectsSlice	dnn/base/factory.cpp	/^pair<Factory::object_iter, Factory::object_iter> Factory::getObjectsSlice(const string& name) {$/;"	f	class:dnn::Factory
getOutputStream	dnn/io/stream.h	/^    ostream& getOutputStream() {$/;"	f	class:dnn::Stream
getProbabilityModulation	dnn/neurons/srm_neuron.h	/^    const double& getProbabilityModulation() const {$/;"	f	class:dnn::SRMNeuron
getRawOptions	dnn/util/option_parser.h	/^	vector<string>& getRawOptions() {$/;"	f	class:dnn::OptionParser
getRepr	dnn/io/stream.h	/^    Repr getRepr() {$/;"	f	class:dnn::Stream
getRidOfComments	dnn/util/json.h	/^	static void getRidOfComments(string &inp_s) {$/;"	f	class:dnn::Json
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::ExpDistribution
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::NormalDistribution
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::UniformDistribution
getSerialized	dnn/io/serialize.h	/^    vector<ProtoMessage>& getSerialized() {$/;"	f	class:dnn::SerializableBase
getSimDuration	dnn/inputs/input_time_series.h	/^    double getSimDuration() {$/;"	f	class:dnn::InputTimeSeries
getSimDuration	dnn/io/serialize.h	/^    virtual double getSimDuration() {$/;"	f	class:dnn::SerializableBase
getSimDuration	dnn/neurons/spike_neuron.cpp	/^double SpikeNeuronBase::getSimDuration() {$/;"	f	class:dnn::SpikeNeuronBase
getSimDuration	dnn/neurons/spike_sequence_neuron.h	/^    double getSimDuration() {$/;"	f	class:dnn::SpikeSequenceNeuron
getSimInfo	dnn/sim/global_ctx.h	/^	const SimInfo& getSimInfo() const {$/;"	f	class:dnn::GlobalCtx
getStat	dnn/learning_rules/learning_rule.h	/^	Statistics& getStat() {$/;"	f	class:dnn::LearningRuleBase
getStat	dnn/neurons/spike_neuron.cpp	/^Statistics SpikeNeuronBase::getStat() {$/;"	f	class:dnn::SpikeNeuronBase
getStat	dnn/synapses/synapse.h	/^	Statistics& getStat() {$/;"	f	class:dnn::SynapseBase
getStat	dnn/weight_normalizations/weight_normalization.h	/^	Statistics& getStat() {$/;"	f	class:dnn::WeightNormalizationBase
getStats	dnn/util/statistics.h	/^	map<string, Stat>& getStats() {$/;"	f	class:dnn::Statistics
getStringVal	dnn/util/json.h	/^	static string getStringVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getStringValDef	dnn/util/json.h	/^	static string getStringValDef(const Value &v, const string name, string def) {$/;"	f	class:dnn::Json
getSynapses	dnn/neurons/spike_neuron.cpp	/^const ActVector<InterfacedPtr<SynapseBase>>& SpikeNeuronBase::getSynapses() const {$/;"	f	class:dnn::SpikeNeuronBase
getTsLabelId	shapelets/dataset.cpp	/^const size_t& Dataset::getTsLabelId(const size_t& id) {$/;"	f	class:dnn::shapelets::Dataset
getUintVal	dnn/util/json.h	/^	static size_t getUintVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getUintVector	dnn/util/json.h	/^	static vector<size_t> getUintVector(const Value &v, const string name) {$/;"	f	class:dnn::Json
getUnif	dnn/util/util.cpp	/^double getUnif() {$/;"	f	namespace:dnn
getUnifBetween	dnn/util/util.cpp	/^double getUnifBetween(double low, double high) {$/;"	f	namespace:dnn
getVal	dnn/util/json.h	/^	static const Value& getVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getValue	dnn/inputs/input.h	/^    retRefDoubleAtTimeDelegate getValue;$/;"	m	struct:dnn::InputInterface
getValue	dnn/inputs/input_time_series.h	/^	const double& getValue(const Time &t) {$/;"	f	class:dnn::InputTimeSeries
getValueAt	dnn/util/time_series.h	/^	const ELEM& getValueAt(const size_t &index) const {$/;"	f	struct:dnn::TimeSeriesGeneric
getValueAt	dnn/util/time_series.h	/^	getValueAtIndexDelegate getValueAt;$/;"	m	struct:dnn::TimeSeriesInterface
getValueAtDefault	dnn/util/time_series.h	/^	static const double& getValueAtDefault(const size_t &index) {$/;"	f	struct:dnn::TimeSeries
getValueAtDim	dnn/util/time_series.h	/^	const ELEM& getValueAtDim(const size_t &index, const size_t &dim) const {$/;"	f	struct:dnn::TimeSeriesGeneric
getValueAtIndexDelegate	dnn/base/base.h	/^typedef FastDelegate1<const size_t&, const double&> getValueAtIndexDelegate;$/;"	t	namespace:dnn
getValueDefault	dnn/inputs/input.h	/^    static const double& getValueDefault(const Time &t) {$/;"	f	class:dnn::InputBase
getVector	dnn/util/time_series.h	/^	const vector<ELEM>& getVector(size_t ndim) const {$/;"	f	struct:dnn::TimeSeriesGeneric
getWeightNormalization	dnn/learning_rules/learning_rule.h	/^	InterfacedPtr<WeightNormalizationBase>& getWeightNormalization() {$/;"	f	class:dnn::LearningRuleBase
getWeightedPotential	dnn/synapses/synapse.h	/^	inline double getWeightedPotential() const {$/;"	f	class:dnn::SynapseBase
get_allocator	dnn/contrib/spdlog/details/format.h	/^    Allocator get_allocator() const {$/;"	f	class:fmt::internal::MemoryBuffer
get_arg	dnn/contrib/spdlog/details/format.cc	/^Arg fmt::internal::PrintfFormatter<Char>::get_arg($/;"	f	class:fmt::internal::PrintfFormatter
get_arg	dnn/contrib/spdlog/details/format.cc	/^inline Arg fmt::BasicFormatter<Char>::get_arg($/;"	f	class:fmt::BasicFormatter
get_arg	dnn/contrib/spdlog/details/format.cc	/^inline Arg fmt::internal::FormatterBase::get_arg($/;"	f	class:fmt::internal::FormatterBase
get_cached_offset	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    int get_cached_offset(const log_msg& msg, const std::tm& tm_time)$/;"	f	class:spdlog::details::z_formatter
getsign	dnn/contrib/spdlog/details/format.h	/^inline int getsign(double value) {$/;"	f	namespace:fmt::internal
getsign	dnn/contrib/spdlog/details/format.h	/^inline int getsign(double x) {$/;"	f	namespace:fmt::internal
global_neuron_index	dnn/neurons/spike_neuron.cpp	/^size_t global_neuron_index = 0;$/;"	m	namespace:dnn	file:
gmtime	dnn/contrib/spdlog/details/os.h	/^inline std::tm gmtime()$/;"	f	namespace:spdlog::details::os
gmtime	dnn/contrib/spdlog/details/os.h	/^inline std::tm gmtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os
gr	dnn/neurons/srm_neuron.h	/^    double gr;$/;"	m	struct:dnn::SRMNeuronState
grow	dnn/contrib/spdlog/details/format.cc	/^void fmt::internal::FixedBuffer<Char>::grow(std::size_t) {$/;"	f	class:fmt::internal::FixedBuffer
grow	dnn/contrib/spdlog/details/format.h	/^void MemoryBuffer<T, SIZE, Allocator>::grow(std::size_t size) {$/;"	f	class:fmt::internal::MemoryBuffer
grow_buffer	dnn/contrib/spdlog/details/format.h	/^    CharPtr grow_buffer(std::size_t n) {$/;"	f	class:fmt::BasicWriter
handle_flag	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^inline void spdlog::pattern_formatter::handle_flag(char flag)$/;"	f	class:spdlog::pattern_formatter
handle_flush_interval	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::handle_flush_interval(log_clock::time_point& now, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper
hasBOM_	dnn/contrib/rapidjson/encodedstream.h	/^    bool hasBOM_;$/;"	m	class:AutoUTFInputStream
hasProto	dnn/io/serialize.h	/^    static const bool hasProto = false;$/;"	m	class:dnn::SerializableBase
hasProto	dnn/io/serialize.h	/^    static const bool hasProto = true;$/;"	m	class:dnn::Serializable
hasRoot_	dnn/contrib/rapidjson/writer.h	/^    bool hasRoot_;$/;"	m	class:Writer
has_begin_end	dnn/util/pretty_print.h	/^        struct has_begin_end : private sfinae_base$/;"	s	namespace:pretty_print::detail
has_const_iterator	dnn/util/pretty_print.h	/^        struct has_const_iterator : private sfinae_base$/;"	s	namespace:pretty_print::detail
hashcode	dnn/contrib/rapidjson/document.h	/^        unsigned hashcode;  \/\/!< reserved$/;"	m	struct:GenericValue::String
head_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* head_;$/;"	m	struct:GenericInsituStringStream
head_	dnn/contrib/rapidjson/rapidjson.h	/^    const Ch* head_;    \/\/!< Original head of the string.$/;"	m	struct:GenericStringStream
header	dnn/io/serialize.h	/^    Protos::ClassName *header;$/;"	m	class:dnn::SerializableBase
hex2bin	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string hex2bin(const std::string &s)$/;"	f
high_lim	dnn/util/statistics.h	/^	int high_lim;$/;"	m	class:dnn::Statistics
high_lim	dnn/util/statistics.h	/^	int high_lim;$/;"	m	struct:dnn::Stat
high_lim	dnn/util/statistics.h	/^	int high_lim;$/;"	m	struct:dnn::StatisticsInfo
horrible_cast	dnn/util/fast_delegate.h	/^inline OutputClass horrible_cast(const InputClass input){$/;"	f	namespace:fastdelegate::detail
horrible_union	dnn/util/fast_delegate.h	/^union horrible_union{$/;"	u	namespace:fastdelegate::detail
i	dnn/contrib/kiss_fft/kiss_fft.h	/^    kiss_fft_scalar i;$/;"	m	struct:__anon8
i	dnn/contrib/rapidjson/document.h	/^            int i;$/;"	m	struct:GenericValue::Number::I
i	dnn/contrib/rapidjson/document.h	/^        }i;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::I
i	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	m	union:__anon4::__anon7
i	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	m	union:__anon4::__anon6
i	dnn/util/interfaced_ptr.h	/^	typename T::interface i;$/;"	m	class:dnn::InterfacedPtr
i32toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* i32toa(int32_t value, char* buffer) {$/;"	f	namespace:internal
i64	dnn/contrib/rapidjson/document.h	/^        int64_t i64;$/;"	m	union:GenericValue::Number
i64toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* i64toa(int64_t value, char* buffer) {$/;"	f	namespace:internal
ibegin	dnn/util/act_vector.h	/^	unordered_set<size_t>::iterator ibegin() {$/;"	f	class:dnn::ActVector
id	dnn/neurons/spike_neuron.cpp	/^const size_t& SpikeNeuronBase::id() const {$/;"	f	class:dnn::SpikeNeuronBase
id	dnn/neurons/spike_neuron.h	/^	size_t id;$/;"	m	struct:dnn::SpikeNeuronInfo
id	shapelets/subsequence.h	/^    const size_t& id() const {$/;"	f	class:dnn::shapelets::Subsequence
idPre	dnn/synapses/synapse.h	/^	inline const size_t& idPre() const {$/;"	f	class:dnn::SynapseBase
idPre	dnn/synapses/synapse.h	/^	size_t idPre;$/;"	m	struct:dnn::SynapseInfo
iend	dnn/util/act_vector.h	/^	unordered_set<size_t>::iterator iend() {$/;"	f	class:dnn::ActVector
ifc	dnn/learning_rules/learning_rule.h	/^	LearningRuleInterface ifc;$/;"	m	class:dnn::LearningRuleBase
ifc	dnn/neurons/spike_neuron.h	/^	SpikeNeuronInterface ifc;$/;"	m	class:dnn::SpikeNeuronBase
ifc	dnn/util/interfaced_ptr.h	/^	const typename T::interface& ifc() const {$/;"	f	class:dnn::InterfacedPtr
ifft	spikework/fft.cpp	/^void FFTProcessor::ifft(const TimeSeriesComplex &src, TimeSeries &dst) {$/;"	f	class:dnn::FFTProcessor
illConditioned	shapelets/orderline.h	/^    const bool& illConditioned() const {$/;"	f	class:dnn::shapelets::Orderline
imaxabs	dnn/contrib/rapidjson/msinttypes/inttypes.h	275;"	d
imaxdiv	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon11
implicit_cast	dnn/util/fast_delegate.h	/^inline OutputClass implicit_cast(InputClass input){$/;"	f	namespace:fastdelegate::detail
in	dnn/util/fast_delegate.h	/^	InputClass in;$/;"	m	union:fastdelegate::detail::horrible_union
inArray	dnn/contrib/rapidjson/writer.h	/^        bool inArray;       \/\/!< true if in array, otherwise in object$/;"	m	struct:Writer::Level
inc_	dnn/util/random/pcg_random.hpp	/^    itype inc_ = default_increment<itype>::increment();$/;"	m	class:pcg_detail::specific_stream
increment	dnn/util/random/pcg_random.hpp	/^    constexpr itype increment() const {$/;"	f	class:pcg_detail::specific_stream
increment	dnn/util/random/pcg_random.hpp	/^    constexpr itype increment() const {$/;"	f	class:pcg_detail::unique_stream
increment	dnn/util/random/pcg_random.hpp	/^    static constexpr itype increment() {$/;"	f	class:pcg_detail::no_stream
indentCharCount_	dnn/contrib/rapidjson/prettywriter.h	/^    unsigned indentCharCount_;$/;"	m	class:PrettyWriter
indentChar_	dnn/contrib/rapidjson/prettywriter.h	/^    Ch indentChar_;$/;"	m	class:PrettyWriter
index	dnn/inputs/input_time_series.h	/^    size_t index;$/;"	m	struct:dnn::InputTimeSeriesState
index	dnn/neurons/spike_sequence_neuron.h	/^    size_t index;$/;"	m	struct:dnn::SpikeSequenceNeuronState
info	dnn/contrib/spdlog/common.h	/^    info     = 2,$/;"	e	enum:spdlog::level::__anon23
info	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::info()$/;"	f	class:spdlog::logger
info	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::info(const T& msg)$/;"	f	class:spdlog::logger
info	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::info(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
info	dnn/util/log/log.h	/^    spdlog::details::line_logger info() {$/;"	f	class:dnn::Log
info	dnn/util/time_series.h	/^	TimeSeriesInfo info;$/;"	m	struct:dnn::TimeSeriesGeneric
inhibitory	dnn/connections/connection.h	/^	bool inhibitory;$/;"	m	struct:dnn::ConnectionRecipe
init	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::SystemError::init($/;"	f	class:fmt::SystemError
init	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::WindowsError::init($/;"	f	class:fmt::WindowsError
init	dnn/contrib/spdlog/details/format.cc	/^void fmt::internal::ArgMap<Char>::init(const ArgList &args) {$/;"	f	class:fmt::internal::ArgMap
init	dnn/sim/global_ctx.h	/^	void init(const SimInfo &_si, const Constants &_c) {$/;"	f	class:dnn::GlobalCtx
init	mpl/mpl.h	/^MplInit init;$/;"	m	namespace:dnn::mpl
init	shapelets/shapelets_algo.h	/^ShapeletInit init;$/;"	m	namespace:dnn::shapelets
initialCapacity_	dnn/contrib/rapidjson/internal/stack.h	/^    size_t initialCapacity_;$/;"	m	class:internal::Stack
innerProductAcc	dnn/util/time_series.h	/^	double innerProductAcc(TimeSeriesGeneric<DATA, ELEM> &anotherTs) {$/;"	f	struct:dnn::TimeSeriesGeneric
innerProductMul	dnn/util/time_series.h	/^	double innerProductMul(TimeSeriesGeneric<DATA, ELEM> &anotherTs) {$/;"	f	struct:dnn::TimeSeriesGeneric
input	dnn/neurons/spike_neuron.h	/^	InterfacedPtr<InputBase> input;$/;"	m	class:dnn::SpikeNeuronBase
input	tools/dnn_sim/dnn_sim.cpp	/^    string input;$/;"	m	struct:DnnSimOpts	file:
inputIsSet	dnn/neurons/spike_neuron.cpp	/^bool SpikeNeuronBase::inputIsSet() {$/;"	f	class:dnn::SpikeNeuronBase
input_filename	spikework/io_processor.h	/^    string input_filename;$/;"	m	class:dnn::IOProcessor
input_is_set	dnn/neurons/spike_neuron.h	/^	bool input_is_set;$/;"	m	struct:dnn::SpikeNeuronInfo
input_queue_lock	dnn/neurons/spike_neuron.h	/^	std::atomic_flag input_queue_lock;$/;"	m	class:dnn::SpikeNeuronBase
input_spikes	dnn/neurons/spike_neuron.h	/^	priority_queue<SynSpike> input_spikes;$/;"	m	class:dnn::SpikeNeuronBase
input_stream	dnn/sim/builder.h	/^	Stream *input_stream;$/;"	m	class:dnn::Builder
inputs	dnn/base/constants.h	/^	map<string, string> inputs;$/;"	m	struct:dnn::Constants
insert	shapelets/orderline.cpp	/^void Orderline::insert(Projection &&newp) {$/;"	f	class:dnn::shapelets::Orderline
inst	dnn/base/factory.cpp	/^Factory& Factory::inst() {$/;"	f	class:dnn::Factory
inst	dnn/sim/global_ctx.cpp	/^GlobalCtx& GlobalCtx::inst() {$/;"	f	class:dnn::GlobalCtx
inst	dnn/util/log/log.cpp	/^Log& Log::inst() {$/;"	f	class:dnn::Log
instance	dnn/contrib/spdlog/details/registry.h	/^    static registry_t<Mutex>& instance()$/;"	f	class:spdlog::details::registry_t
instance	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stderr_sink
instance	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^    static std::shared_ptr<MyType> instance()$/;"	f	class:spdlog::sinks::stdout_sink
int16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
int_value	dnn/contrib/spdlog/details/format.h	/^        int int_value;$/;"	m	union:fmt::internal::Value::__anon25
interface	dnn/act_functions/act_function.h	/^	typedef ActFunctionInterface interface;$/;"	t	class:dnn::ActFunctionBase
interface	dnn/inputs/input.h	/^    typedef InputInterface interface;$/;"	t	class:dnn::InputBase
interface	dnn/learning_rules/learning_rule.h	/^	typedef LearningRuleInterface interface;$/;"	t	class:dnn::LearningRuleBase
interface	dnn/neurons/spike_neuron.h	/^	typedef SpikeNeuronInterface interface;$/;"	t	class:dnn::SpikeNeuronBase
interface	dnn/synapses/synapse.h	/^	typedef SynapseInterface interface;$/;"	t	class:dnn::SynapseBase
interface	dnn/util/time_series.h	/^	typedef TimeSeriesInterface interface;$/;"	t	struct:dnn::TimeSeries
interface	dnn/weight_normalizations/weight_normalization.h	/^	typedef WeightNormalizationInterface interface;$/;"	t	class:dnn::WeightNormalizationBase
internal	dnn/contrib/rapidjson/document.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/biginteger.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/diyfp.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/dtoa.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/ieee754.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/itoa.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/meta.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/pow10.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/stack.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/strfunc.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/internal/strtod.h	/^namespace internal {$/;"	n
internal	dnn/contrib/rapidjson/reader.h	/^namespace internal {$/;"	n
internal	dnn/contrib/spdlog/details/format.cc	/^namespace internal {$/;"	n	namespace:fmt	file:
internal	dnn/contrib/spdlog/details/format.h	/^namespace internal {$/;"	n	namespace:fmt
internal	dnn/util/random/pcg_random.hpp	/^        internal ^= internal >> xshift;$/;"	m	namespace:pcg_detail
intmax_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
inverse	dnn/contrib/kiss_fft/_kiss_fft_guts.h	/^    int inverse;$/;"	m	struct:kiss_fft_state
inverse	spikework/fft.h	/^	bool inverse;$/;"	m	class:dnn::FFTProcessor
is	dnn/contrib/rapidjson/reader.h	/^        InputStream& is;$/;"	m	class:GenericReader::NumberStream
isInput	dnn/io/stream.h	/^    bool isInput() {$/;"	f	class:dnn::Stream
isOutput	dnn/io/stream.h	/^    bool isOutput() {$/;"	f	class:dnn::Stream
isProtoType	dnn/base/factory.h	/^    bool isProtoType(const string name) {$/;"	f	class:dnn::Factory
isSet	dnn/util/interfaced_ptr.h	/^	bool isSet() {$/;"	f	class:dnn::InterfacedPtr
isSet	dnn/util/ptr.h	/^	bool isSet() {$/;"	f	class:dnn::Ptr
is_	dnn/contrib/rapidjson/encodedstream.h	/^    InputByteStream& is_;$/;"	m	class:EncodedInputStream
is_	dnn/contrib/rapidjson/encodedstream.h	/^    InputByteStream* is_;$/;"	m	class:AutoUTFInputStream
is_container	dnn/util/pretty_print.h	/^    struct is_container : public std::integral_constant<bool,$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<T[N]> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<char[N]> : std::false_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::pair<T1, T2>> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::tuple<Args...>> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::valarray<T>> : std::true_type { };$/;"	s	namespace:pretty_print
is_enabled	dnn/contrib/spdlog/details/line_logger.h	/^    bool is_enabled() const$/;"	f	class:spdlog::details::line_logger
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::oneseq_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::specific_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::unique_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = true;$/;"	m	class:pcg_detail::no_stream
is_name_start	dnn/contrib/spdlog/details/format.cc	/^inline bool is_name_start(Char c) {$/;"	f	namespace:fmt::__anon32
is_negative	dnn/contrib/spdlog/details/format.h	/^    static bool is_negative(T value) {$/;"	f	struct:fmt::internal::SignChecker
is_negative	dnn/contrib/spdlog/details/format.h	/^    static bool is_negative(T) {$/;"	f	struct:fmt::internal::SignChecker
is_negative	dnn/contrib/spdlog/details/format.h	/^inline bool is_negative(T value) {$/;"	f	namespace:fmt::internal
isinfinity	dnn/contrib/spdlog/details/format.h	/^inline int isinfinity(double x) {$/;"	f	namespace:fmt::internal
isinfinity	dnn/contrib/spdlog/details/format.h	/^inline int isinfinity(long double x) {$/;"	f	namespace:fmt::internal
iterator	dnn/io/stream.h	/^    Value::ConstMemberIterator iterator;$/;"	m	class:dnn::Stream
jobs	mpl/mpl.h	/^	size_t jobs;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
jobs	tools/dnn_sim/dnn_sim.cpp	/^    size_t jobs;$/;"	m	struct:DnnSimOpts	file:
json2field	dnn/contrib/pbjson/pbjson.cpp	/^    static int json2field(const rapidjson::Value* json, Message* msg, const FieldDescriptor *field, std::string& err)$/;"	f	namespace:pbjson
json2pb	dnn/contrib/pbjson/pbjson.cpp	/^    int json2pb(const std::string& json, google::protobuf::Message* msg, std::string& err)$/;"	f	namespace:pbjson
json2string	dnn/contrib/pbjson/pbjson.cpp	/^    void json2string(const rapidjson::Value* json, std::string& str)$/;"	f	namespace:pbjson
jsonReader	dnn/io/stream.cpp	/^void Stream::jsonReader(string name, const Value &v, vector<ProtoMessage> &messages) {$/;"	f	class:dnn::Stream
jsonobject2pb	dnn/contrib/pbjson/pbjson.cpp	/^    int jsonobject2pb(const rapidjson::Value* json, google::protobuf::Message* msg, std::string& err)$/;"	f	namespace:pbjson
kArrayFlag	dnn/contrib/rapidjson/document.h	/^        kArrayFlag = kArrayType,$/;"	e	enum:GenericValue::__anon17
kArrayType	dnn/contrib/rapidjson/rapidjson.h	/^    kArrayType = 4,     \/\/!< array $/;"	e	enum:Type
kBitCount	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kBitCount = 3328;  \/\/ 64bit * 54 > 10^1000$/;"	m	class:internal::BigInteger
kBoolFlag	dnn/contrib/rapidjson/document.h	/^        kBoolFlag = 0x100,$/;"	e	enum:GenericValue::__anon17
kCapacity	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kCapacity = kBitCount \/ sizeof(Type);$/;"	m	class:internal::BigInteger
kConstStringFlag	dnn/contrib/rapidjson/document.h	/^        kConstStringFlag = kStringType | kStringFlag,$/;"	e	enum:GenericValue::__anon17
kCopyFlag	dnn/contrib/rapidjson/document.h	/^        kCopyFlag = 0x200000,$/;"	e	enum:GenericValue::__anon17
kCopyStringFlag	dnn/contrib/rapidjson/document.h	/^        kCopyStringFlag = kStringType | kStringFlag | kCopyFlag,$/;"	e	enum:GenericValue::__anon17
kDefaultArrayCapacity	dnn/contrib/rapidjson/document.h	/^    static const SizeType kDefaultArrayCapacity = 16;$/;"	m	class:GenericValue
kDefaultCapacity	dnn/contrib/rapidjson/memorybuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	struct:GenericMemoryBuffer
kDefaultCapacity	dnn/contrib/rapidjson/stringbuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	class:GenericStringBuffer
kDefaultChunkCapacity	dnn/contrib/rapidjson/allocators.h	/^    static const int kDefaultChunkCapacity = 64 * 1024; \/\/!< Default chunk capacity.$/;"	m	class:MemoryPoolAllocator
kDefaultLevelDepth	dnn/contrib/rapidjson/writer.h	/^    static const size_t kDefaultLevelDepth = 32;$/;"	m	class:Writer
kDefaultObjectCapacity	dnn/contrib/rapidjson/document.h	/^    static const SizeType kDefaultObjectCapacity = 16;$/;"	m	class:GenericValue
kDefaultStackCapacity	dnn/contrib/rapidjson/document.h	/^    static const size_t kDefaultStackCapacity = 1024;$/;"	m	class:GenericDocument
kDefaultStackCapacity	dnn/contrib/rapidjson/reader.h	/^    static const size_t kDefaultStackCapacity = 256;    \/\/!< Default stack capacity in bytes for storing a single decoded string.$/;"	m	class:GenericReader
kDenormalExponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kDenormalExponent = 1 - kExponentBias;$/;"	m	class:internal::Double
kDiySignificandSize	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDiySignificandSize = 64;$/;"	m	struct:internal::DiyFp
kDoubleFlag	dnn/contrib/rapidjson/document.h	/^        kDoubleFlag = 0x4000,$/;"	e	enum:GenericValue::__anon17
kDpDenormalExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpDenormalExponent = -kDpExponentBias + 1;$/;"	m	struct:internal::DiyFp
kDpExponentBias	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpExponentBias = 0x3FF + kDpSignificandSize;$/;"	m	struct:internal::DiyFp
kDpExponentMask	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpHiddenBit	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpMaxExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpMaxExponent = 0x7FF - kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpMinExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpMinExponent = -kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpSignificandMask	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	struct:internal::DiyFp
kDpSignificandSize	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpSignificandSize = 52;$/;"	m	struct:internal::DiyFp
kExponentBias	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kExponentBias = 0x3FF;$/;"	m	class:internal::Double
kExponentMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	class:internal::Double
kFalseFlag	dnn/contrib/rapidjson/document.h	/^        kFalseFlag = kFalseType | kBoolFlag,$/;"	e	enum:GenericValue::__anon17
kFalseType	dnn/contrib/rapidjson/rapidjson.h	/^    kFalseType = 1,     \/\/!< false$/;"	e	enum:Type
kHiddenBit	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	class:internal::Double
kInlineStrFlag	dnn/contrib/rapidjson/document.h	/^        kInlineStrFlag = 0x400000,$/;"	e	enum:GenericValue::__anon17
kInt64Flag	dnn/contrib/rapidjson/document.h	/^        kInt64Flag = 0x1000,$/;"	e	enum:GenericValue::__anon17
kIntFlag	dnn/contrib/rapidjson/document.h	/^        kIntFlag = 0x400,$/;"	e	enum:GenericValue::__anon17
kNeedFree	dnn/contrib/rapidjson/allocators.h	/^    static const bool kNeedFree = false;    \/\/!< Tell users that no need to call Free() with this allocator. (concept Allocator)$/;"	m	class:MemoryPoolAllocator
kNeedFree	dnn/contrib/rapidjson/allocators.h	/^    static const bool kNeedFree = true;$/;"	m	class:CrtAllocator
kNullFlag	dnn/contrib/rapidjson/document.h	/^        kNullFlag = kNullType,$/;"	e	enum:GenericValue::__anon17
kNullType	dnn/contrib/rapidjson/rapidjson.h	/^    kNullType = 0,      \/\/!< null$/;"	e	enum:Type
kNumberAnyFlag	dnn/contrib/rapidjson/document.h	/^        kNumberAnyFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon17
kNumberDoubleFlag	dnn/contrib/rapidjson/document.h	/^        kNumberDoubleFlag = kNumberType | kNumberFlag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon17
kNumberFlag	dnn/contrib/rapidjson/document.h	/^        kNumberFlag = 0x200,$/;"	e	enum:GenericValue::__anon17
kNumberInt64Flag	dnn/contrib/rapidjson/document.h	/^        kNumberInt64Flag = kNumberType | kNumberFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon17
kNumberIntFlag	dnn/contrib/rapidjson/document.h	/^        kNumberIntFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon17
kNumberType	dnn/contrib/rapidjson/rapidjson.h	/^    kNumberType = 6     \/\/!< number$/;"	e	enum:Type
kNumberUint64Flag	dnn/contrib/rapidjson/document.h	/^        kNumberUint64Flag = kNumberType | kNumberFlag | kUint64Flag,$/;"	e	enum:GenericValue::__anon17
kNumberUintFlag	dnn/contrib/rapidjson/document.h	/^        kNumberUintFlag = kNumberType | kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag,$/;"	e	enum:GenericValue::__anon17
kObjectFlag	dnn/contrib/rapidjson/document.h	/^        kObjectFlag = kObjectType,$/;"	e	enum:GenericValue::__anon17
kObjectType	dnn/contrib/rapidjson/rapidjson.h	/^    kObjectType = 3,    \/\/!< object$/;"	e	enum:Type
kParseDefaultFlags	dnn/contrib/rapidjson/reader.h	/^    kParseDefaultFlags = RAPIDJSON_PARSE_DEFAULT_FLAGS  \/\/!< Default parse flags. Can be customized by defining RAPIDJSON_PARSE_DEFAULT_FLAGS$/;"	e	enum:ParseFlag
kParseErrorArrayMissCommaOrSquareBracket	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorArrayMissCommaOrSquareBracket,   \/\/!< Missing a comma or ']' after an array element.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentEmpty	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorDocumentEmpty,                   \/\/!< The document is empty.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentRootNotSingular	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorDocumentRootNotSingular,         \/\/!< The document root must not follow by other values.$/;"	e	enum:ParseErrorCode
kParseErrorNone	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNone = 0,                        \/\/!< No error.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissExponent	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberMissExponent,              \/\/!< Miss exponent in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissFraction	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberMissFraction,              \/\/!< Miss fraction part in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberTooBig	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberTooBig,                    \/\/!< Number too big to be stored in double.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissColon	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissColon,                 \/\/!< Missing a colon after a name of object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissCommaOrCurlyBracket	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissCommaOrCurlyBracket,   \/\/!< Missing a comma or '}' after an object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissName	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissName,                  \/\/!< Missing a name for object member.$/;"	e	enum:ParseErrorCode
kParseErrorStringEscapeInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringEscapeInvalid,             \/\/!< Invalid escape character in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringInvalidEncoding	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringInvalidEncoding,           \/\/!< Invalid encoding in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringMissQuotationMark	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringMissQuotationMark,         \/\/!< Missing a closing quotation mark in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeEscapeInvalidHex	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringUnicodeEscapeInvalidHex,   \/\/!< Incorrect hex digit after \\\\u escape in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeSurrogateInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringUnicodeSurrogateInvalid,   \/\/!< The surrogate pair in string is invalid.$/;"	e	enum:ParseErrorCode
kParseErrorTermination	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorTermination,                     \/\/!< Parsing was terminated.$/;"	e	enum:ParseErrorCode
kParseErrorUnspecificSyntaxError	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorUnspecificSyntaxError,           \/\/!< Unspecific syntax error.$/;"	e	enum:ParseErrorCode
kParseErrorValueInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorValueInvalid,                    \/\/!< Invalid value.$/;"	e	enum:ParseErrorCode
kParseFullPrecisionFlag	dnn/contrib/rapidjson/reader.h	/^    kParseFullPrecisionFlag = 16,   \/\/!< Parse number in full precision (but slower).$/;"	e	enum:ParseFlag
kParseInsituFlag	dnn/contrib/rapidjson/reader.h	/^    kParseInsituFlag = 1,           \/\/!< In-situ(destructive) parsing.$/;"	e	enum:ParseFlag
kParseIterativeFlag	dnn/contrib/rapidjson/reader.h	/^    kParseIterativeFlag = 4,        \/\/!< Iterative(constant complexity in terms of function call stack size) parsing.$/;"	e	enum:ParseFlag
kParseNoFlags	dnn/contrib/rapidjson/reader.h	/^    kParseNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:ParseFlag
kParseStopWhenDoneFlag	dnn/contrib/rapidjson/reader.h	/^    kParseStopWhenDoneFlag = 8,     \/\/!< After parsing a complete JSON root from stream, stop further processing the rest of stream. When this flag is used, parser will not generate kParseErrorDocumentRootNotSingular error.$/;"	e	enum:ParseFlag
kParseValidateEncodingFlag	dnn/contrib/rapidjson/reader.h	/^    kParseValidateEncodingFlag = 2, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:ParseFlag
kShortStringFlag	dnn/contrib/rapidjson/document.h	/^        kShortStringFlag = kStringType | kStringFlag | kCopyFlag | kInlineStrFlag,$/;"	e	enum:GenericValue::__anon17
kSignMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignMask = RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);$/;"	m	class:internal::Double
kSignificandMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	class:internal::Double
kSignificandSize	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kSignificandSize = 52;$/;"	m	class:internal::Double
kStringFlag	dnn/contrib/rapidjson/document.h	/^        kStringFlag = 0x100000,$/;"	e	enum:GenericValue::__anon17
kStringType	dnn/contrib/rapidjson/rapidjson.h	/^    kStringType = 5,    \/\/!< string$/;"	e	enum:Type
kTokenCount	dnn/contrib/rapidjson/reader.h	/^        kTokenCount$/;"	e	enum:GenericReader::Token
kTrueFlag	dnn/contrib/rapidjson/document.h	/^        kTrueFlag = kTrueType | kBoolFlag,$/;"	e	enum:GenericValue::__anon17
kTrueType	dnn/contrib/rapidjson/rapidjson.h	/^    kTrueType = 2,      \/\/!< true$/;"	e	enum:Type
kTypeBit	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kTypeBit = sizeof(Type) * 8;$/;"	m	class:internal::BigInteger
kTypeMask	dnn/contrib/rapidjson/document.h	/^        kTypeMask = 0xFF    \/\/ bitwise-and with mask of 0xFF can be optimized by compiler$/;"	e	enum:GenericValue::__anon17
kUTF16BE	dnn/contrib/rapidjson/encodings.h	/^    kUTF16BE = 2,   \/\/!< UTF-16 big endian.$/;"	e	enum:UTFType
kUTF16LE	dnn/contrib/rapidjson/encodings.h	/^    kUTF16LE = 1,   \/\/!< UTF-16 little endian.$/;"	e	enum:UTFType
kUTF32BE	dnn/contrib/rapidjson/encodings.h	/^    kUTF32BE = 4    \/\/!< UTF-32 big endian.$/;"	e	enum:UTFType
kUTF32LE	dnn/contrib/rapidjson/encodings.h	/^    kUTF32LE = 3,   \/\/!< UTF-32 little endian.$/;"	e	enum:UTFType
kUTF8	dnn/contrib/rapidjson/encodings.h	/^    kUTF8 = 0,      \/\/!< UTF-8.$/;"	e	enum:UTFType
kUint64Flag	dnn/contrib/rapidjson/document.h	/^        kUint64Flag = 0x2000,$/;"	e	enum:GenericValue::__anon17
kUintFlag	dnn/contrib/rapidjson/document.h	/^        kUintFlag = 0x800,$/;"	e	enum:GenericValue::__anon17
kd	dnn/neurons/adapt_integrate_and_fire.h	/^    double kd;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
kernel	spikework/kernel.h	/^    Ptr<Kernel> kernel;$/;"	m	class:dnn::KernelProcessor
kernel_dt	spikework/kernel.h	/^    double kernel_dt;$/;"	m	class:dnn::KernelProcessor
kernel_length	spikework/kernel.h	/^    size_t kernel_length;$/;"	m	class:dnn::KernelProcessor
kernel_map	spikework/kernel.h	/^    kernels_map_type kernel_map;$/;"	m	class:dnn::KernelProcessor
kernels_map_type	spikework/kernel.h	/^    typedef map<string, Ptr<Kernel> (*)()> kernels_map_type;$/;"	t	class:dnn::KernelProcessor
kf_bfly2	dnn/contrib/kiss_fft/kiss_fft.c	/^static void kf_bfly2($/;"	f	file:
kf_bfly2	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_bfly2( cpx_type * Fout, const size_t fstride, int m)$/;"	f	class:kissfft
kf_bfly3	dnn/contrib/kiss_fft/kiss_fft.c	/^static void kf_bfly3($/;"	f	file:
kf_bfly3	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_bfly3( cpx_type * Fout, const size_t fstride, const size_t m)$/;"	f	class:kissfft
kf_bfly4	dnn/contrib/kiss_fft/kiss_fft.c	/^static void kf_bfly4($/;"	f	file:
kf_bfly4	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_bfly4( cpx_type * Fout, const size_t fstride, const size_t m)$/;"	f	class:kissfft
kf_bfly5	dnn/contrib/kiss_fft/kiss_fft.c	/^static void kf_bfly5($/;"	f	file:
kf_bfly5	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_bfly5( cpx_type * Fout, const size_t fstride, const size_t m)$/;"	f	class:kissfft
kf_bfly_generic	dnn/contrib/kiss_fft/kiss_fft.c	/^static void kf_bfly_generic($/;"	f	file:
kf_bfly_generic	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_bfly_generic($/;"	f	class:kissfft
kf_cexp	dnn/contrib/kiss_fft/_kiss_fft_guts.h	141;"	d
kf_factor	dnn/contrib/kiss_fft/kiss_fft.c	/^void kf_factor(int n,int * facbuf)$/;"	f	file:
kf_work	dnn/contrib/kiss_fft/kiss_fft.c	/^void kf_work($/;"	f	file:
kf_work	dnn/contrib/kiss_fft/kissfft.hh	/^        void kf_work( int stage,cpx_type * Fout, const cpx_type * f, size_t fstride,size_t in_stride)$/;"	f	class:kissfft
kiss_fft	dnn/contrib/kiss_fft/kiss_fft.c	/^void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
kiss_fft_alloc	dnn/contrib/kiss_fft/kiss_fft.c	/^kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )$/;"	f
kiss_fft_cfg	dnn/contrib/kiss_fft/kiss_fft.h	/^typedef struct kiss_fft_state* kiss_fft_cfg;$/;"	t	typeref:struct:kiss_fft_state
kiss_fft_cleanup	dnn/contrib/kiss_fft/kiss_fft.c	/^void kiss_fft_cleanup(void)$/;"	f
kiss_fft_cpx	dnn/contrib/kiss_fft/kiss_fft.h	/^}kiss_fft_cpx;$/;"	t	typeref:struct:__anon8
kiss_fft_free	dnn/contrib/kiss_fft/kiss_fft.h	102;"	d
kiss_fft_next_fast_size	dnn/contrib/kiss_fft/kiss_fft.c	/^int kiss_fft_next_fast_size(int n)$/;"	f
kiss_fft_scalar	dnn/contrib/kiss_fft/kiss_fft.h	28;"	d
kiss_fft_scalar	dnn/contrib/kiss_fft/kiss_fft.h	40;"	d
kiss_fft_scalar	dnn/contrib/kiss_fft/kiss_fft.h	42;"	d
kiss_fft_scalar	dnn/contrib/kiss_fft/kiss_fft.h	47;"	d
kiss_fft_state	dnn/contrib/kiss_fft/_kiss_fft_guts.h	/^struct kiss_fft_state{$/;"	s
kiss_fft_stride	dnn/contrib/kiss_fft/kiss_fft.c	/^void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)$/;"	f
kiss_fftnd	dnn/contrib/kiss_fft/kiss_fftnd.c	/^void kiss_fftnd(kiss_fftnd_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
kiss_fftnd_alloc	dnn/contrib/kiss_fft/kiss_fftnd.c	/^kiss_fftnd_cfg kiss_fftnd_alloc(const int *dims,int ndims,int inverse_fft,void*mem,size_t*lenmem)$/;"	f
kiss_fftnd_cfg	dnn/contrib/kiss_fft/kiss_fftnd.h	/^typedef struct kiss_fftnd_state * kiss_fftnd_cfg;$/;"	t	typeref:struct:kiss_fftnd_state
kiss_fftnd_state	dnn/contrib/kiss_fft/kiss_fftnd.c	/^struct kiss_fftnd_state{$/;"	s	file:
kiss_fftndr	dnn/contrib/kiss_fft/kiss_fftndr.c	/^void kiss_fftndr(kiss_fftndr_cfg st,const kiss_fft_scalar *timedata,kiss_fft_cpx *freqdata)$/;"	f
kiss_fftndr_alloc	dnn/contrib/kiss_fft/kiss_fftndr.c	/^kiss_fftndr_cfg kiss_fftndr_alloc(const int *dims,int ndims,int inverse_fft,void*mem,size_t*lenmem)$/;"	f
kiss_fftndr_cfg	dnn/contrib/kiss_fft/kiss_fftndr.h	/^typedef struct kiss_fftndr_state *kiss_fftndr_cfg;$/;"	t	typeref:struct:kiss_fftndr_state
kiss_fftndr_state	dnn/contrib/kiss_fft/kiss_fftndr.c	/^struct kiss_fftndr_state$/;"	s	file:
kiss_fftndri	dnn/contrib/kiss_fft/kiss_fftndr.c	/^void kiss_fftndri(kiss_fftndr_cfg st,const kiss_fft_cpx *freqdata,kiss_fft_scalar *timedata)$/;"	f
kiss_fftr	dnn/contrib/kiss_fft/kiss_fftr.c	/^void kiss_fftr(kiss_fftr_cfg st,const kiss_fft_scalar *timedata,kiss_fft_cpx *freqdata)$/;"	f
kiss_fftr_alloc	dnn/contrib/kiss_fft/kiss_fftr.c	/^kiss_fftr_cfg kiss_fftr_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem)$/;"	f
kiss_fftr_cfg	dnn/contrib/kiss_fft/kiss_fftr.h	/^typedef struct kiss_fftr_state *kiss_fftr_cfg;$/;"	t	typeref:struct:kiss_fftr_state
kiss_fftr_free	dnn/contrib/kiss_fft/kiss_fftndr.h	41;"	d
kiss_fftr_free	dnn/contrib/kiss_fft/kiss_fftr.h	41;"	d
kiss_fftr_next_fast_size_real	dnn/contrib/kiss_fft/kiss_fft.h	117;"	d
kiss_fftr_state	dnn/contrib/kiss_fft/kiss_fftr.c	/^struct kiss_fftr_state{$/;"	s	file:
kiss_fftri	dnn/contrib/kiss_fft/kiss_fftr.c	/^void kiss_fftri(kiss_fftr_cfg st,const kiss_fft_cpx *freqdata,kiss_fft_scalar *timedata)$/;"	f
kissfft	dnn/contrib/kiss_fft/kissfft.hh	/^        kissfft(int nfft,bool inverse,const traits_type & traits=traits_type() ) $/;"	f	class:kissfft
kissfft	dnn/contrib/kiss_fft/kissfft.hh	/^class kissfft$/;"	c
kissfft_utils	dnn/contrib/kiss_fft/kissfft.hh	/^namespace kissfft_utils {$/;"	n
labels_ids	dnn/util/time_series.h	/^	vector<size_t> labels_ids;$/;"	m	struct:dnn::TimeSeriesInfo
labels_timeline	dnn/util/time_series.h	/^	vector<size_t> labels_timeline;$/;"	m	struct:dnn::TimeSeriesInfo
layers	dnn/base/constants.h	/^	vector<string> layers;$/;"	m	struct:dnn::SimConfiguration
learn	mpl/mpl.h	/^	bool learn;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
learn_iterations	mpl/mpl.h	/^	size_t learn_iterations;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
learning_rate	dnn/learning_rules/optimal_stdp.h	/^    double learning_rate;$/;"	m	struct:dnn::OptimalStdpC
learning_rate	dnn/learning_rules/stdp.h	/^    double learning_rate;$/;"	m	struct:dnn::StdpC
learning_rate	dnn/learning_rules/stdp_time.h	/^    double learning_rate;$/;"	m	struct:dnn::StdpTimeC
learning_rate	dnn/learning_rules/triple_stdp.h	/^    double learning_rate;$/;"	m	struct:dnn::TripleStdpC
learning_rate	mpl/mpl.h	/^	double learning_rate;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
learning_rules	dnn/base/constants.h	/^	map<string, string> learning_rules;$/;"	m	struct:dnn::Constants
leftMajorHas	shapelets/orderline.h	/^        bool leftMajorHas(const size_t &class_id) const {$/;"	f	struct:dnn::shapelets::Orderline::SplitStat
left_classes_hist	shapelets/orderline.h	/^        unordered_map<size_t, size_t> left_classes_hist;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
left_major_classes	shapelets/orderline.h	/^        unordered_set<size_t> left_major_classes;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
length	dnn/contrib/rapidjson/document.h	/^        SizeType length;$/;"	m	struct:GenericValue::String
length	dnn/contrib/rapidjson/document.h	/^    const SizeType length; \/\/!< length of the string (excluding the trailing NULL terminator)$/;"	m	struct:GenericStringRef
length	dnn/util/time_series.h	/^	size_t length() const {$/;"	f	struct:dnn::TimeSeriesGeneric
length	shapelets/projection.h	/^    size_t length;$/;"	m	struct:dnn::shapelets::Projection
length	shapelets/subsequence.h	/^    const size_t& length() const {$/;"	f	class:dnn::shapelets::Subsequence
length_	dnn/contrib/rapidjson/reader.h	/^        SizeType length_;$/;"	m	class:GenericReader::StackStream
level	dnn/contrib/spdlog/common.h	/^namespace level$/;"	n	namespace:spdlog
level	dnn/contrib/spdlog/details/async_log_helper.h	/^        level::level_enum level;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
level	dnn/contrib/spdlog/details/log_msg.h	/^    level::level_enum level;$/;"	m	struct:spdlog::details::log_msg
level	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::level::level_enum spdlog::logger::level() const$/;"	f	class:spdlog::logger
level_enum	dnn/contrib/spdlog/common.h	/^} level_enum;$/;"	t	namespace:spdlog::level	typeref:enum:spdlog::level::__anon23
level_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class level_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
level_stack_	dnn/contrib/rapidjson/writer.h	/^    internal::Stack<StackAllocator> level_stack_;$/;"	m	class:Writer
line_logger	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger(line_logger&& other) :$/;"	f	class:spdlog::details::line_logger
line_logger	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger(logger* callback_logger, level::level_enum msg_level, bool enabled):$/;"	f	class:spdlog::details::line_logger
line_logger	dnn/contrib/spdlog/details/line_logger.h	/^class line_logger$/;"	c	namespace:spdlog::details
linkWithNeuron	dnn/learning_rules/learning_rule.h	/^	void linkWithNeuron(SpikeNeuronBase &_n) {$/;"	f	class:dnn::LearningRule
linkWithNeuron	dnn/weight_normalizations/weight_normalization.h	/^	void linkWithNeuron(SpikeNeuronBase &_n) {$/;"	f	class:dnn::WeightNormalization
localId	dnn/neurons/spike_neuron.cpp	/^const size_t SpikeNeuronBase::localId() const {$/;"	f	class:dnn::SpikeNeuronBase
localtime	dnn/contrib/spdlog/details/os.h	/^inline std::tm localtime()$/;"	f	namespace:spdlog::details::os
localtime	dnn/contrib/spdlog/details/os.h	/^inline std::tm localtime(const std::time_t &time_tt)$/;"	f	namespace:spdlog::details::os
lock	dnn/contrib/spdlog/details/null_mutex.h	/^    void lock() {}$/;"	f	struct:spdlog::details::null_mutex
log	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::log(const details::log_msg& msg)$/;"	f	class:spdlog::details::async_log_helper
log	dnn/util/log/log.h	/^    std::shared_ptr<spdlog::logger> log;$/;"	m	class:dnn::Log
log_msg	dnn/contrib/spdlog/details/log_msg.h	/^    log_msg(const log_msg& other) :$/;"	f	struct:spdlog::details::log_msg
log_msg	dnn/contrib/spdlog/details/log_msg.h	/^    log_msg(level::level_enum l):$/;"	f	struct:spdlog::details::log_msg
log_msg	dnn/contrib/spdlog/details/log_msg.h	/^    log_msg(log_msg&& other) :$/;"	f	struct:spdlog::details::log_msg
log_msg	dnn/contrib/spdlog/details/log_msg.h	/^struct log_msg$/;"	s	namespace:spdlog::details
logger	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, const It& begin, const It& end) :$/;"	f	class:spdlog::logger
logger	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, sinks_init_list sinks_list) :$/;"	f	class:spdlog::logger
logger	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::logger::logger(const std::string& logger_name, spdlog::sink_ptr single_sink) :$/;"	f	class:spdlog::logger
logger	dnn/contrib/spdlog/logger.h	/^class logger$/;"	c	namespace:spdlog
logger_name	dnn/contrib/spdlog/details/async_log_helper.h	/^        std::string logger_name;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
logger_name	dnn/contrib/spdlog/details/log_msg.h	/^    std::string logger_name;$/;"	m	struct:spdlog::details::log_msg
long_double_value	dnn/contrib/spdlog/details/format.h	/^        long double long_double_value;$/;"	m	union:fmt::internal::Value::__anon25
long_long_value	dnn/contrib/spdlog/details/format.h	/^        LongLong long_long_value;$/;"	m	union:fmt::internal::Value::__anon25
loption	dnn/util/option_parser.h	/^	void loption(string long_opt, T &src, bool required = true, bool as_flag = false) {$/;"	f	class:dnn::OptionParser
low_lim	dnn/util/statistics.h	/^	int low_lim;$/;"	m	class:dnn::Statistics
low_lim	dnn/util/statistics.h	/^	int low_lim;$/;"	m	struct:dnn::Stat
low_lim	dnn/util/statistics.h	/^	int low_lim;$/;"	m	struct:dnn::StatisticsInfo
lrule	dnn/neurons/spike_neuron.h	/^	InterfacedPtr<LearningRuleBase> lrule;$/;"	m	class:dnn::SpikeNeuronBase
lrule_is_set	dnn/neurons/spike_neuron.h	/^	bool lrule_is_set;$/;"	m	struct:dnn::SpikeNeuronInfo
ltd	dnn/weight_normalizations/nonlinear_min_max.h	/^    double ltd(const double &w) {$/;"	f	class:dnn::NonLinearMinMax
ltd	dnn/weight_normalizations/sliding_ltd.h	/^    double ltd(const double &w) {$/;"	f	class:dnn::SlidingLtd
ltd	dnn/weight_normalizations/weight_normalization.h	/^	retDoubleAtRefDoubleDelegate ltd;$/;"	m	struct:dnn::WeightNormalizationInterface
ltd	dnn/weight_normalizations/weight_normalization.h	/^    virtual double ltd(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
ltp	dnn/weight_normalizations/nonlinear_min_max.h	/^    double ltp(const double &w) {$/;"	f	class:dnn::NonLinearMinMax
ltp	dnn/weight_normalizations/weight_normalization.h	/^	retDoubleAtRefDoubleDelegate ltp;$/;"	m	struct:dnn::WeightNormalizationInterface
ltp	dnn/weight_normalizations/weight_normalization.h	/^	virtual double ltp(const double &w) {$/;"	f	class:dnn::WeightNormalizationBase
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate0
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate1
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate2
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate3
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate4
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate5
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate6
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate7
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate8
m_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class m_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
m_map	dnn/util/pretty_print.h	/^        const T & m_map;$/;"	m	struct:pretty_print::bucket_print_wrapper
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate0::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate1::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate2::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate3::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate4::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate5::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate6::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate7::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate8::SafeBoolStruct
m_pFunction	dnn/util/fast_delegate.h	/^	GenericMemFuncType m_pFunction;$/;"	m	class:fastdelegate::DelegateMemento
m_pStaticFunction	dnn/util/fast_delegate.h	/^	GenericFuncPtr m_pStaticFunction;$/;"	m	class:fastdelegate::DelegateMemento
m_pthis	dnn/util/fast_delegate.h	/^	detail::GenericClass *m_pthis;$/;"	m	class:fastdelegate::DelegateMemento
main	tools/dnn_sim/dnn_sim.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/dumptool/dumptool.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/mpl/mpl_main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/shapelets/shapelets.cpp	/^int main(int argc, char **argv) {$/;"	f
main	tools/spikework/spikework.cpp	/^int main(int argc, char **argv) {$/;"	f
makeActive	dnn/util/act_vector.h	/^	void makeActive(const size_t &i) {$/;"	f	class:dnn::ActVector
makeBestSplit	shapelets/orderline.cpp	/^Orderline::SplitStat Orderline::makeBestSplit(const Dataset &d) const {$/;"	f	class:dnn::shapelets::Orderline
make_ptr	dnn/contrib/spdlog/details/format.h	/^inline T *make_ptr(T *ptr, std::size_t) {$/;"	f	namespace:fmt::internal
make_ptr	dnn/contrib/spdlog/details/format.h	/^inline stdext::checked_array_iterator<T*> make_ptr(T *ptr, std::size_t size) {$/;"	f	namespace:fmt::internal
make_type	dnn/contrib/spdlog/details/format.h	/^inline uint64_t make_type() {$/;"	f	namespace:fmt::internal
make_type	dnn/contrib/spdlog/details/format.h	/^inline uint64_t make_type(const T &arg) {$/;"	f	namespace:fmt::internal
map_	dnn/contrib/spdlog/details/format.h	/^    MapType map_;$/;"	m	class:fmt::internal::ArgMap
map_	dnn/contrib/spdlog/details/format.h	/^    internal::ArgMap<Char> map_;$/;"	m	class:fmt::BasicFormatter
mask	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t mask = (1 << opbits) - 1;$/;"	m	namespace:pcg_detail
matches	mpl/mpl.h	/^		vector<FilterMatch> matches;$/;"	m	struct:dnn::mpl::MatchingPursuit::MPLReturn
matches	mpl/mpl.h	/^		vector<FilterMatch> matches;$/;"	m	struct:dnn::mpl::MatchingPursuit::SubSeqRet
max	dnn/util/random/pcg_random.hpp	/^    static constexpr result_type max()$/;"	f	class:pcg_detail::engine
maxPossibleFurtherInformationGain	shapelets/orderline.cpp	/^double Orderline::maxPossibleFurtherInformationGain(const Dataset &d) const {$/;"	f	class:dnn::shapelets::Orderline
maxPossibleInformationGain	shapelets/orderline.cpp	/^double Orderline::maxPossibleInformationGain(const SplitStat &split_stat, const double &range, const Dataset &d) const {$/;"	f	class:dnn::shapelets::Orderline
max_weight	dnn/weight_normalizations/min_max.h	/^    double max_weight;$/;"	m	struct:dnn::MinMaxC
max_weight	dnn/weight_normalizations/nonlinear_min_max.h	/^    double max_weight;$/;"	m	struct:dnn::NonLinearMinMaxC
max_weight	dnn/weight_normalizations/pow_min_max.h	/^    double max_weight;$/;"	m	struct:dnn::PowMinMaxC
max_weight	dnn/weight_normalizations/sliding_ltd.h	/^    double max_weight;$/;"	m	struct:dnn::SlidingLtdC
maxrandshift	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t maxrandshift  = mask;$/;"	m	namespace:pcg_detail
mean	shapelets/dist.cpp	/^double DistAlgorithm::mean(const Subsequence& sub, const Stats &stats, const size_t &dim) {$/;"	f	class:dnn::shapelets::DistAlgorithm
meanProd	shapelets/dist.cpp	/^double DistAlgorithm::meanProd(const Subsequence& left_sub, const Subsequence& right_sub, const Stats &stats, const size_t &dim) {$/;"	f	class:dnn::shapelets::DistAlgorithm
meanProdMatrix	shapelets/stats.cpp	/^const Ptr<DoubleMatrix>& Stats::meanProdMatrix(const size_t &ts_id, const size_t &dim) const {$/;"	f	class:dnn::shapelets::Stats
meanSquared	shapelets/dist.cpp	/^double DistAlgorithm::meanSquared(const Subsequence& sub, const Stats &stats, const size_t &dim) {$/;"	f	class:dnn::shapelets::DistAlgorithm
mean_weight	dnn/weight_normalizations/pow_min_max.h	/^    double mean_weight;$/;"	m	struct:dnn::PowMinMaxC
members	dnn/contrib/rapidjson/document.h	/^        Member* members;$/;"	m	struct:GenericValue::Object
messages	dnn/io/serialize.h	/^    vector<ProtoMessage> *messages;$/;"	m	class:dnn::SerializableBase
mi_stat	dnn/learning_rules/optimal_stdp.h	/^    double mi_stat;$/;"	m	struct:dnn::OptimalStdpState
min	dnn/util/random/pcg_random.hpp	/^    static constexpr result_type min()$/;"	f	class:pcg_detail::engine
min_weight	dnn/weight_normalizations/min_max.h	/^    double min_weight;$/;"	m	struct:dnn::MinMaxC
min_weight	dnn/weight_normalizations/nonlinear_min_max.h	/^    double min_weight;$/;"	m	struct:dnn::NonLinearMinMaxC
min_weight	dnn/weight_normalizations/pow_min_max.h	/^    double min_weight;$/;"	m	struct:dnn::PowMinMaxC
min_weight	dnn/weight_normalizations/sliding_ltd.h	/^    double min_weight;$/;"	m	struct:dnn::SlidingLtdC
mode	dnn/io/serialize.h	/^    ProcessMode mode;$/;"	m	class:dnn::SerializableBase
mode	spikework/gram.h	/^    EInnerProductMode mode;$/;"	m	class:dnn::GramProcessor
model_load	tools/dnn_sim/dnn_sim.cpp	/^    string model_load;$/;"	m	struct:DnnSimOpts	file:
model_save	tools/dnn_sim/dnn_sim.cpp	/^    string model_save;$/;"	m	struct:DnnSimOpts	file:
modulation	dnn/weight_normalizations/sliding_ltd.h	/^    double modulation;$/;"	m	struct:dnn::SlidingLtdC
move	dnn/contrib/spdlog/details/async_log_helper.h	/^                    txt(std::move(other.txt))$/;"	f	struct:spdlog::details::async_log_helper::async_msg
move	dnn/contrib/spdlog/details/format.h	/^    void move(MemoryBuffer &other) {$/;"	f	class:fmt::internal::MemoryBuffer
mpl	mpl/mpl.cpp	/^namespace mpl {$/;"	n	namespace:dnn	file:
mpl	mpl/mpl.h	/^namespace mpl {$/;"	n	namespace:dnn
mpmc_bounded_queue	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    mpmc_bounded_queue(size_t buffer_size)$/;"	f	class:spdlog::details::mpmc_bounded_queue
mpmc_bounded_queue	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^class mpmc_bounded_queue$/;"	c	namespace:spdlog::details
mu	dnn/util/distributions.h	/^    double mu;$/;"	m	class:dnn::NormalDistribution
mu	dnn/weight_normalizations/nonlinear_min_max.h	/^    double mu;$/;"	m	struct:dnn::NonLinearMinMaxC
mutAxonDelay	dnn/neurons/spike_neuron.cpp	/^double& SpikeNeuronBase::mutAxonDelay() {$/;"	f	class:dnn::SpikeNeuronBase
mutDendriteDelay	dnn/synapses/synapse.h	/^	inline double& mutDendriteDelay() {$/;"	f	class:dnn::SynapseBase
mutIdPre	dnn/synapses/synapse.h	/^	inline size_t& mutIdPre() {$/;"	f	class:dnn::SynapseBase
mutPotential	dnn/synapses/synapse.h	/^	inline double& mutPotential() {$/;"	f	class:dnn::SynapseBase
mutWeight	dnn/synapses/synapse.h	/^	inline double& mutWeight() {$/;"	f	class:dnn::SynapseBase
n	dnn/contrib/rapidjson/document.h	/^        Number n;$/;"	m	union:GenericValue::Data
n	dnn/learning_rules/learning_rule.h	/^	Ptr<Neuron> n;$/;"	m	class:dnn::LearningRule
n	dnn/util/pretty_print.h	/^        const size_type n;$/;"	m	struct:pretty_print::bucket_print_wrapper
n	dnn/weight_normalizations/weight_normalization.h	/^	Ptr<Neuron> n;$/;"	m	class:dnn::WeightNormalization
n_	dnn/util/spinning_barrier.h	/^    const unsigned int n_;$/;"	m	class:dnn::SpinningBarrier
n_id	dnn/base/base.h	/^    size_t n_id;$/;"	m	struct:dnn::SynSpike
name	dnn/act_functions/determ.h	/^    const string name() const {$/;"	f	class:dnn::Determ
name	dnn/act_functions/exp_threshold.h	/^    const string name() const {$/;"	f	class:dnn::ExpThreshold
name	dnn/connections/difference_of_gaussians.h	/^    const string name() const {$/;"	f	class:dnn::DifferenceOfGaussians
name	dnn/connections/stochastic.h	/^    const string name() const {$/;"	f	class:dnn::Stochastic
name	dnn/contrib/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> name;     \/\/!< name of member (must be a string)$/;"	m	struct:GenericMember
name	dnn/contrib/spdlog/details/format.h	/^    BasicStringRef<Char> name;$/;"	m	struct:fmt::internal::NamedArg
name	dnn/contrib/spdlog/details/logger_impl.h	/^inline const std::string& spdlog::logger::name() const$/;"	f	class:spdlog::logger
name	dnn/inputs/input_time_series.h	/^    const string name() const {$/;"	f	class:dnn::InputTimeSeries
name	dnn/io/serialize.h	/^    const string name() const {$/;"	f	class:dnn::Serializable
name	dnn/learning_rules/optimal_stdp.h	/^    const string name() const {$/;"	f	class:dnn::OptimalStdp
name	dnn/learning_rules/stdp.h	/^    const string name() const {$/;"	f	class:dnn::Stdp
name	dnn/learning_rules/stdp_time.h	/^    const string name() const {$/;"	f	class:dnn::StdpTime
name	dnn/learning_rules/triple_stdp.h	/^    const string name() const {$/;"	f	class:dnn::TripleStdp
name	dnn/neurons/adapt_integrate_and_fire.h	/^    const string name() const {$/;"	f	class:dnn::AdaptIntegrateAndFire
name	dnn/neurons/leaky_integrate_and_fire.h	/^    const string name() const {$/;"	f	class:dnn::LeakyIntegrateAndFire
name	dnn/neurons/spike_sequence_neuron.h	/^    const string name() const {$/;"	f	class:dnn::SpikeSequenceNeuron
name	dnn/neurons/srm_neuron.h	/^    const string name() const {$/;"	f	class:dnn::SRMNeuron
name	dnn/synapses/static_synapse.h	/^    const string name() const {$/;"	f	class:dnn::StaticSynapse
name	dnn/synapses/std_synapse.h	/^    const string name() const {$/;"	f	class:dnn::STDSynapse
name	dnn/util/spikes_list.h	/^	const string name() const {$/;"	f	struct:dnn::SpikesList
name	dnn/util/statistics.h	/^	const string name() const {$/;"	f	class:dnn::Statistics
name	dnn/util/time_series.h	/^	const string name() const {$/;"	f	struct:dnn::TimeSeries
name	dnn/util/time_series.h	/^	const string name() const {$/;"	f	struct:dnn::TimeSeriesComplex
name	dnn/weight_normalizations/min_max.h	/^    const string name() const {$/;"	f	class:dnn::MinMax
name	dnn/weight_normalizations/nonlinear_min_max.h	/^    const string name() const {$/;"	f	class:dnn::NonLinearMinMax
name	dnn/weight_normalizations/pow_min_max.h	/^    const string name() const {$/;"	f	class:dnn::PowMinMax
name	dnn/weight_normalizations/sliding_ltd.h	/^    const string name() const {$/;"	f	class:dnn::SlidingLtd
name	shapelets/subsequence.h	/^    const string name() const {$/;"	f	class:dnn::shapelets::Subsequence
name_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class name_formatter :public flag_formatter$/;"	c	namespace:spdlog::details::__anon33
ncol	dnn/util/matrix.h	/^	inline const size_t& ncol() const { return ncol_v; }$/;"	f	class:dnn::DoubleMatrix
ncol_v	dnn/util/matrix.h	/^	size_t ncol_v;$/;"	m	class:dnn::DoubleMatrix
ndims	dnn/contrib/kiss_fft/kiss_fftnd.c	/^    int ndims; $/;"	m	struct:kiss_fftnd_state	file:
net	dnn/sim/sim.h	/^	uptr<Network> net;$/;"	m	class:dnn::Sim
neuron	dnn/sim/network.h	/^	SpikeNeuronBase &neuron;$/;"	m	class:dnn::Conn
neurons	dnn/base/constants.h	/^	map<string, string> neurons;$/;"	m	struct:dnn::Constants
neurons	dnn/sim/builder.h	/^		vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	struct:dnn::Builder::Layer
neurons	dnn/sim/layer.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	struct:Layer
neurons	dnn/sim/sim.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	class:dnn::Sim
neurons_to_listen	dnn/base/constants.h	/^	vector<size_t> neurons_to_listen;$/;"	m	struct:dnn::SimConfiguration
newProto	dnn/io/serialize.h	/^    ProtoMessage newProto() {$/;"	f	class:dnn::Serializable
newProto	dnn/io/serialize.h	/^    virtual ProtoMessage newProto() {$/;"	f	class:dnn::SerializableBase
next	dnn/contrib/rapidjson/allocators.h	/^        ChunkHeader *next;  \/\/!< Next chunk in the linked list.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
next_arg	dnn/contrib/spdlog/details/format.cc	/^inline Arg fmt::internal::FormatterBase::next_arg(const char *&error) {$/;"	f	class:fmt::internal::FormatterBase
next_arg_index_	dnn/contrib/spdlog/details/format.h	/^    int next_arg_index_;$/;"	m	class:fmt::internal::FormatterBase
nextpow2	spikework/fft.cpp	/^size_t FFTProcessor::nextpow2(const size_t &s) {$/;"	f	class:dnn::FFTProcessor
nfft	dnn/contrib/kiss_fft/_kiss_fft_guts.h	/^    int nfft;$/;"	m	struct:kiss_fft_state
no	dnn/contrib/spdlog/details/format.h	/^    typedef char no[2];$/;"	t	class:fmt::internal::IsConvertibleToInt
no_learning	tools/dnn_sim/dnn_sim.cpp	/^    bool no_learning;$/;"	m	struct:DnnSimOpts	file:
no_specifiable_stream_tag	dnn/util/random/pcg_random.hpp	/^    struct no_specifiable_stream_tag {};$/;"	s	class:pcg_detail::engine
no_stream	dnn/util/random/pcg_random.hpp	/^class no_stream {$/;"	c	namespace:pcg_detail
noise	dnn/neurons/adapt_integrate_and_fire.h	/^    double noise;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
noise	dnn/neurons/leaky_integrate_and_fire.h	/^    double noise;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
noise_sd	mpl/mpl.h	/^	double noise_sd;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
norm	dnn/learning_rules/learning_rule.h	/^	InterfacedPtr<WeightNormalizationBase> norm;$/;"	m	class:dnn::LearningRuleBase
norm	dnn/util/matrix.h	/^    void norm() {$/;"	f	class:dnn::DoubleMatrix
normal_distr_var	dnn/util/util.cpp	/^double normal_distr_var = -1;$/;"	m	namespace:dnn	file:
notice	dnn/contrib/spdlog/common.h	/^    notice   = 3,$/;"	e	enum:spdlog::level::__anon23
notice	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::notice()$/;"	f	class:spdlog::logger
notice	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::notice(const T& msg)$/;"	f	class:spdlog::logger
notice	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::notice(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
now	dnn/contrib/spdlog/details/os.h	/^inline spdlog::log_clock::time_point now()$/;"	f	namespace:spdlog::details::os
nrow	dnn/util/matrix.h	/^	inline const size_t& nrow() const { return nrow_v; }$/;"	f	class:dnn::DoubleMatrix
nrow_v	dnn/util/matrix.h	/^	size_t nrow_v;$/;"	m	class:dnn::DoubleMatrix
null_mutex	dnn/contrib/spdlog/details/null_mutex.h	/^struct null_mutex$/;"	s	namespace:spdlog::details
null_sink	dnn/contrib/spdlog/sinks/null_sink.h	/^class null_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks
null_sink_mt	dnn/contrib/spdlog/sinks/null_sink.h	/^typedef null_sink<std::mutex> null_sink_mt;$/;"	t	namespace:spdlog::sinks
null_sink_st	dnn/contrib/spdlog/sinks/null_sink.h	/^typedef null_sink<details::null_mutex> null_sink_st;$/;"	t	namespace:spdlog::sinks
num_of_synapses	dnn/neurons/spike_neuron.h	/^	size_t num_of_synapses;$/;"	m	struct:dnn::SpikeNeuronInfo
numberOfPruned	shapelets/shapelets_algo.h	/^        size_t numberOfPruned;$/;"	m	struct:dnn::shapelets::ShapeletsAlgo::AlgoStat
nwait_	dnn/util/spinning_barrier.h	/^    std::atomic<unsigned int> nwait_;$/;"	m	class:dnn::SpinningBarrier
o	dnn/contrib/rapidjson/document.h	/^        Object o;$/;"	m	union:GenericValue::Data
object_iter	dnn/base/factory.h	/^    typedef multimap<string, size_t>::iterator object_iter;$/;"	t	class:dnn::Factory
objects	dnn/base/factory.h	/^    vector<SerializableBase*> objects;$/;"	m	class:dnn::Factory
objects_map	dnn/base/factory.h	/^    multimap<string, size_t> objects_map;$/;"	m	class:dnn::Factory
off	dnn/contrib/spdlog/common.h	/^    off      = 9$/;"	e	enum:spdlog::level::__anon23
offset_	dnn/contrib/rapidjson/error/error.h	/^    size_t offset_;$/;"	m	struct:ParseResult
on	dnn/util/statistics.h	/^	const bool&	on() const {$/;"	f	class:dnn::Statistics
oneseq_stream	dnn/util/random/pcg_random.hpp	/^class oneseq_stream : public default_increment<itype> {$/;"	c	namespace:pcg_detail
open	dnn/contrib/spdlog/details/file_helper.h	/^    void open(const tstring& fname, bool truncate=false)$/;"	f	class:spdlog::details::file_helper
open_interval	dnn/contrib/spdlog/details/file_helper.h	/^    const int open_interval = 10;$/;"	m	class:spdlog::details::file_helper
open_tries	dnn/contrib/spdlog/details/file_helper.h	/^    const int open_tries = 5;$/;"	m	class:spdlog::details::file_helper
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const		\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::DelegateMemento
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate0
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate1
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate2
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate3
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate4
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate5
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate6
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate7
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate8
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(ConstIterator that) const { return ptr_ != that.ptr_; }$/;"	f	class:GenericMemberIterator
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(const Ch* rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(const GenericValue<Encoding, SourceAllocator>& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& lhs, const GenericValue& rhs) { return !(rhs == lhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/spdlog/details/format.h	/^    friend bool operator!=(BasicStringRef lhs, BasicStringRef rhs) {$/;"	f	class:fmt::BasicStringRef
operator !=	dnn/contrib/spdlog/details/os.h	/^inline bool operator!=(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate0
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate1
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate2
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate3
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate4
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate5
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate6
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate7
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate8
operator !=	dnn/util/random/pcg_random.hpp	/^inline bool operator!=(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator !=	dnn/util/random/pcg_uint128.hpp	/^bool operator!=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator !=	shapelets/dataset.cpp	/^bool Dataset::operator != (const Dataset &d) const {$/;"	f	class:dnn::shapelets::Dataset
operator %	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator%(const uint_x4<UInt,UIntX2>& dividend,$/;"	f	namespace:pcg_extras
operator &	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator&(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() () const {$/;"	f	class:fastdelegate::FastDelegate0
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1) const {$/;"	f	class:fastdelegate::FastDelegate1
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2) const {$/;"	f	class:fastdelegate::FastDelegate2
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3) const {$/;"	f	class:fastdelegate::FastDelegate3
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4) const {$/;"	f	class:fastdelegate::FastDelegate4
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const {$/;"	f	class:fastdelegate::FastDelegate5
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const {$/;"	f	class:fastdelegate::FastDelegate6
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const {$/;"	f	class:fastdelegate::FastDelegate7
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const {$/;"	f	class:fastdelegate::FastDelegate8
operator ()	dnn/util/matrix.h	/^    double operator () (size_t i, size_t j) const {$/;"	f	class:dnn::DoubleMatrix
operator ()	dnn/util/matrix.h	/^    double& operator () (size_t i, size_t j) {$/;"	f	class:dnn::DoubleMatrix
operator ()	dnn/util/pretty_print.h	/^        inline void operator()(ostream_type & stream) const$/;"	f	struct:pretty_print::print_container_helper
operator ()	dnn/util/random/pcg_random.hpp	/^    result_type operator()()$/;"	f	class:pcg_detail::engine
operator ()	dnn/util/random/pcg_random.hpp	/^    result_type operator()(result_type upper_bound)$/;"	f	class:pcg_detail::engine
operator ()	dnn/util/statistics.h	/^    bool operator()( const string &e1, const string &e2 ) const$/;"	f	struct:dnn::stringLessThan
operator ()	dnn/util/time_series.h	/^	const ELEM& operator () (const size_t &dim, const size_t &index) const {$/;"	f	struct:dnn::TimeSeriesGeneric
operator ()	shapelets/dataset.h	/^    Ptr<TimeSeries> operator() (const size_t &i) const {$/;"	f	class:dnn::shapelets::Dataset
operator ()	shapelets/subsequence.cpp	/^const double& Subsequence::operator () (const size_t &dim, const size_t &id) const {$/;"	f	class:dnn::shapelets::Subsequence
operator *	dnn/contrib/rapidjson/document.h	/^    Reference operator*() const { return *ptr_; }$/;"	f	class:GenericMemberIterator
operator *	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp operator*(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator *	dnn/util/ptr.h	/^	const T& operator * () const {$/;"	f	class:dnn::Ptr
operator *	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator*(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator *	dnn/util/time_series.h	/^	void operator * (const TimeSeriesGeneric<DATA, ELEM> &anotherTs) {$/;"	f	struct:dnn::TimeSeriesGeneric
operator *=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint32_t u) {$/;"	f	class:internal::BigInteger
operator *=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator +	dnn/contrib/rapidjson/document.h	/^    Iterator operator+(DifferenceType n) const { return Iterator(ptr_+n); }$/;"	f	class:GenericMemberIterator
operator +	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator+(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator ++	dnn/base/base.h	/^    void operator ++() {$/;"	f	struct:dnn::Time
operator ++	dnn/contrib/rapidjson/document.h	/^    Iterator  operator++(int){ Iterator old(*this); ++ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator ++	dnn/contrib/rapidjson/document.h	/^    Iterator& operator++(){ ++ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	dnn/contrib/rapidjson/document.h	/^    Iterator& operator+=(DifferenceType n) { ptr_+=n; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator+=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator -	dnn/contrib/rapidjson/document.h	/^    DifferenceType operator-(ConstIterator that) const { return ptr_-that.ptr_; }$/;"	f	class:GenericMemberIterator
operator -	dnn/contrib/rapidjson/document.h	/^    Iterator operator-(DifferenceType n) const { return Iterator(ptr_-n); }$/;"	f	class:GenericMemberIterator
operator -	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp operator-(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator -	dnn/util/random/pcg_random.hpp	/^itype operator-(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator -	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator-(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator -	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator-(const uint_x4<UInt,UIntX2>& v)$/;"	f	namespace:pcg_extras
operator --	dnn/contrib/rapidjson/document.h	/^    Iterator  operator--(int){ Iterator old(*this); --ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator --	dnn/contrib/rapidjson/document.h	/^    Iterator& operator--(){ --ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator -=	dnn/contrib/rapidjson/document.h	/^    Iterator& operator-=(DifferenceType n) { ptr_-=n; return *this; }$/;"	f	class:GenericMemberIterator
operator ->	dnn/contrib/rapidjson/document.h	/^    Pointer   operator->() const { return ptr_; }$/;"	f	class:GenericMemberIterator
operator ->	dnn/util/ptr.h	/^	T* operator -> () {$/;"	f	class:dnn::Ptr
operator ->	dnn/util/ptr.h	/^	const T* operator -> () const {$/;"	f	class:dnn::Ptr
operator /	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator\/(const uint_x4<UInt,UIntX2>& dividend,$/;"	f	namespace:pcg_extras
operator <	dnn/base/base.h	/^    bool operator<(const SynSpike& rhs) const {$/;"	f	struct:dnn::SynSpike
operator <	dnn/base/base.h	/^    bool operator<(const double &dur) const {$/;"	f	struct:dnn::Time
operator <	dnn/contrib/rapidjson/document.h	/^    bool operator< (ConstIterator that) const { return ptr_ < that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <	dnn/contrib/spdlog/details/format.h	/^    friend bool operator<(BasicStringRef lhs, BasicStringRef rhs) {$/;"	f	class:fmt::BasicStringRef
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator <	dnn/util/fast_delegate.h	/^	inline bool operator <(const DelegateMemento &right) {$/;"	f	class:fastdelegate::DelegateMemento
operator <	dnn/util/random/pcg_uint128.hpp	/^bool operator<(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator <<	dnn/base/base.h	/^    friend std::ostream& operator<<(std::ostream& str, const Printable &data) {$/;"	f	class:dnn::Printable
operator <<	dnn/base/exceptions.h	/^	dnnException& operator << (const T& s) {$/;"	f	struct:dnn::dnnException
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<($/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(IntFormatSpec<T, Spec, FillChar> spec) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(LongLong value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(ULongLong value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(char value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(const StrFormatSpec<StrChar> &spec) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(double value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(fmt::BasicStringRef<Char> value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(int value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(long double value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(long value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(unsigned long value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/format.h	/^    BasicWriter &operator<<(unsigned value) {$/;"	f	class:fmt::BasicWriter
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(char what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(const T& what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(const char* what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(const std::string& what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(double what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(float what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(int what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(long double what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(long long what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(long what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(unsigned int what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(unsigned long long what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger& operator<<(unsigned long what)$/;"	f	class:spdlog::details::line_logger
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (const char *vraw) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (vector<std::complex<double>> &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (InterfacedPtr<T> &b) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (SerializableBase &b) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (const char *vraw) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    void operator << (EndMarker e) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    void operator << (EndMarker e) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/util/act_vector.h	/^    friend std::ostream& operator<<(std::ostream& str, const ActVector &self) {$/;"	f	class:dnn::ActVector
operator <<	dnn/util/pretty_print.h	/^    inline std::basic_ostream<TChar, TCharTraits> & operator<<($/;"	f	namespace:pretty_print
operator <<	dnn/util/pretty_print.h	/^    inline std::basic_ostream<TChar, TCharTraits> & operator<<(std::basic_ostream<TChar, TCharTraits> & s, const custom_delims<Delims> & p)$/;"	f	namespace:pretty_print
operator <<	dnn/util/pretty_print.h	/^    operator<<(basic_ostream<TChar, TCharTraits> & stream, const T & container)$/;"	f	namespace:std
operator <<	dnn/util/random/pcg_extras.hpp	/^inline std::ostream& operator<<(std::ostream& out, uint8_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^operator<<(std::basic_ostream<CharT,Traits>& out, pcg128_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^operator<<(std::basic_ostream<CharT,Traits>&out, uint8_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^std::ostream& operator<<(std::ostream& out, printable_typename<T>) {$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_random.hpp	/^operator<<(std::basic_ostream<CharT,Traits>& out,$/;"	f	namespace:pcg_detail
operator <<	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator<<(const uint_x4<UInt,UIntX2>& v,$/;"	f	namespace:pcg_extras
operator <<=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator<<=(size_t shift) {$/;"	f	class:internal::BigInteger
operator <<=	dnn/util/random/pcg_uint128.hpp	/^    uint_x4& operator<<=(bitcount_t shift)$/;"	f	class:pcg_extras::uint_x4
operator <=	dnn/contrib/rapidjson/document.h	/^    bool operator<=(ConstIterator that) const { return ptr_ <= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <=	dnn/util/random/pcg_uint128.hpp	/^bool operator<=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator =	dnn/contrib/rapidjson/document.h	/^    operator=(T value) {$/;"	f	class:GenericValue
operator =	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator =	dnn/contrib/rapidjson/internal/stack.h	/^    Stack& operator=(Stack&& rhs) {$/;"	f	class:internal::Stack
operator =	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer& operator=(GenericStringBuffer&& rhs) {$/;"	f	class:GenericStringBuffer
operator =	dnn/contrib/spdlog/details/format.h	/^    BasicMemoryWriter &operator=(BasicMemoryWriter &&other) {$/;"	f	class:fmt::BasicMemoryWriter
operator =	dnn/contrib/spdlog/details/format.h	/^    MemoryBuffer &operator=(MemoryBuffer &&other) {$/;"	f	class:fmt::internal::MemoryBuffer
operator =	dnn/contrib/spdlog/details/log_msg.h	/^    log_msg& operator=(log_msg&& other)$/;"	f	struct:spdlog::details::log_msg
operator =	dnn/util/fast_delegate.h	/^	DelegateMemento & operator = (const DelegateMemento &right)  {$/;"	f	class:fastdelegate::DelegateMemento
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate0 &x)  {$/;"	f	class:fastdelegate::FastDelegate0
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate1 &x)  {$/;"	f	class:fastdelegate::FastDelegate1
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate2 &x)  {$/;"	f	class:fastdelegate::FastDelegate2
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate3 &x)  {$/;"	f	class:fastdelegate::FastDelegate3
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate4 &x)  {$/;"	f	class:fastdelegate::FastDelegate4
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate5 &x)  {$/;"	f	class:fastdelegate::FastDelegate5
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate6 &x)  {$/;"	f	class:fastdelegate::FastDelegate6
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate7 &x)  {$/;"	f	class:fastdelegate::FastDelegate7
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate8 &x)  {$/;"	f	class:fastdelegate::FastDelegate8
operator =	dnn/util/fast_delegate.h	/^  void operator = (const BaseType &x)  {$/;"	f	class:fastdelegate::FastDelegate
operator =	shapelets/orderline.cpp	/^Orderline& Orderline::operator=(const Orderline& other) {$/;"	f	class:dnn::shapelets::Orderline
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(ConstIterator that) const { return ptr_ == that.ptr_; }$/;"	f	class:GenericMemberIterator
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const Ch* rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const std::basic_string<Ch>& rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>,internal::IsGenericValue<T> >), (bool)) operator==(const T& rhs) const { return *this == GenericValue(rhs); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator==(const T& lhs, const GenericValue& rhs) { return rhs == lhs; }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/error/error.h	/^    bool operator==(ParseErrorCode code) const { return code_ == code; }$/;"	f	struct:ParseResult
operator ==	dnn/contrib/rapidjson/error/error.h	/^    bool operator==(const ParseResult& that) const { return code_ == that.code_; }$/;"	f	struct:ParseResult
operator ==	dnn/contrib/rapidjson/error/error.h	/^    friend bool operator==(ParseErrorCode code, const ParseResult & err) { return code == err.code_; }$/;"	f	struct:ParseResult
operator ==	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool operator==(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
operator ==	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool operator==(const Type rhs) const {$/;"	f	class:internal::BigInteger
operator ==	dnn/contrib/spdlog/details/format.h	/^    friend bool operator==(BasicStringRef lhs, BasicStringRef rhs) {$/;"	f	class:fmt::BasicStringRef
operator ==	dnn/contrib/spdlog/details/os.h	/^inline bool operator==(const std::tm& tm1, const std::tm& tm2)$/;"	f	namespace:spdlog::details::os
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate0
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate1
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate2
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate3
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate4
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate5
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate6
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate7
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate8
operator ==	dnn/util/random/pcg_random.hpp	/^bool operator==(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator ==	dnn/util/random/pcg_uint128.hpp	/^bool operator==(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator ==	shapelets/dataset.cpp	/^bool Dataset::operator == (const Dataset &d) const {$/;"	f	class:dnn::shapelets::Dataset
operator >	dnn/contrib/rapidjson/document.h	/^    bool operator> (ConstIterator that) const { return ptr_ > that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator >	dnn/util/fast_delegate.h	/^	inline bool operator >(const DelegateMemento &right) {$/;"	f	class:fastdelegate::DelegateMemento
operator >	dnn/util/random/pcg_uint128.hpp	/^bool operator>(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator >=	dnn/contrib/rapidjson/document.h	/^    bool operator>=(ConstIterator that) const { return ptr_ >= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >=	dnn/util/random/pcg_uint128.hpp	/^bool operator>=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^inline std::istream& operator>>(std::istream& in, uint8_t& value)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in, pcg128_t& value)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in, uint8_t target)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_random.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in,$/;"	f	namespace:pcg_detail
operator >>	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator>>(const uint_x4<UInt,UIntX2>& v,$/;"	f	namespace:pcg_extras
operator StringRef	dnn/contrib/spdlog/details/format.h	/^    operator StringRef() const {$/;"	f	class:fmt::internal::UTF16ToUTF8
operator WStringRef	dnn/contrib/spdlog/details/format.h	/^    operator WStringRef() const {$/;"	f	class:fmt::internal::UTF8ToUTF16
operator []	dnn/contrib/rapidjson/document.h	/^    GenericValue& operator[](SizeType index) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(GenericValue&)) operator[](T* name) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(const GenericValue&)) operator[](T* name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    Reference operator[](DifferenceType n) const { return ptr_[n]; }$/;"	f	class:GenericMemberIterator
operator []	dnn/contrib/rapidjson/document.h	/^    const GenericValue& operator[](SizeType index) const { return const_cast<GenericValue&>(*this)[index]; }$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    const GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	dnn/contrib/spdlog/details/format.h	/^    T &operator[](std::size_t index) {$/;"	f	class:fmt::Buffer
operator []	dnn/contrib/spdlog/details/format.h	/^    const T &operator[](std::size_t index) const {$/;"	f	class:fmt::Buffer
operator []	dnn/contrib/spdlog/details/format.h	/^    internal::Arg operator[](unsigned index) const {$/;"	f	class:fmt::ArgList
operator []	dnn/util/act_vector.h	/^	inline T& operator[] (const size_t &i) {$/;"	f	class:dnn::ActVector
operator []	dnn/util/act_vector.h	/^	inline T& operator[](const unordered_set<size_t>::iterator &i) {$/;"	f	class:dnn::ActVector
operator []	dnn/util/spikes_list.h	/^	vector<double>& operator [](const size_t &i) {$/;"	f	struct:dnn::SpikesList
operator ^	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator^(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator bool	dnn/contrib/rapidjson/error/error.h	/^    operator bool() const { return !IsError(); }$/;"	f	struct:ParseResult
operator bool	dnn/util/ptr.h	/^	explicit operator bool() {$/;"	f	class:dnn::Ptr
operator const Ch *	dnn/contrib/rapidjson/document.h	/^    operator const Ch *() const { return s; }$/;"	f	struct:GenericStringRef
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate0
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate1
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate2
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate3
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate4
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate5
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate6
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate7
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate8
operator |	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator|(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator ~	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator~(const uint_x4<UInt,UIntX2>& v)$/;"	f	namespace:pcg_extras
option	dnn/util/option_parser.h	/^	void option(string long_opt, string short_opt, T &src, bool required = true, bool as_flag = false) {$/;"	f	class:dnn::OptionParser
opts	dnn/util/option_parser.h	/^	vector<string> opts;$/;"	m	class:dnn::OptionParser
orderline	shapelets/shapelets_algo.cpp	/^    Orderline orderline;$/;"	m	struct:dnn::shapelets::Split	file:
original_	dnn/contrib/rapidjson/reader.h	/^    Stream& original_;$/;"	m	class:internal::StreamLocalCopy
os	dnn/contrib/spdlog/details/os.h	/^namespace os$/;"	n	namespace:spdlog::details
os_	dnn/contrib/rapidjson/encodedstream.h	/^    OutputByteStream& os_;$/;"	m	class:EncodedOutputStream
os_	dnn/contrib/rapidjson/encodedstream.h	/^    OutputByteStream* os_;$/;"	m	class:AutoUTFOutputStream
os_	dnn/contrib/rapidjson/writer.h	/^    OutputStream* os_;$/;"	m	class:Writer
ostream_sink	dnn/contrib/spdlog/sinks/ostream_sink.h	/^    explicit ostream_sink(std::ostream& os, bool force_flush=false) :_ostream(os), _force_flush(force_flush) {}$/;"	f	class:spdlog::sinks::ostream_sink
ostream_sink	dnn/contrib/spdlog/sinks/ostream_sink.h	/^class ostream_sink: public base_sink<Mutex>$/;"	c	namespace:spdlog::sinks
ostream_sink_mt	dnn/contrib/spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<std::mutex> ostream_sink_mt;$/;"	t	namespace:spdlog::sinks
ostream_sink_st	dnn/contrib/spdlog/sinks/ostream_sink.h	/^typedef ostream_sink<details::null_mutex> ostream_sink_st;$/;"	t	namespace:spdlog::sinks
other	dnn/contrib/spdlog/details/async_log_helper.h	/^        async_msg& operator=(async_msg& other) = delete;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
other	dnn/contrib/spdlog/details/line_logger.h	/^    line_logger(const line_logger& other) = delete;$/;"	m	class:spdlog::details::line_logger
out	dnn/util/fast_delegate.h	/^	OutputClass out;$/;"	m	union:fastdelegate::detail::horrible_union
out_p_stat_file	tools/dnn_sim/dnn_sim.cpp	/^    string out_p_stat_file;$/;"	m	struct:DnnSimOpts	file:
out_spikes	tools/dnn_sim/dnn_sim.cpp	/^    string out_spikes;$/;"	m	struct:DnnSimOpts	file:
out_stat_file	tools/dnn_sim/dnn_sim.cpp	/^    string out_stat_file;$/;"	m	struct:DnnSimOpts	file:
output_filename	spikework/io_processor.h	/^    string output_filename;$/;"	m	class:dnn::IOProcessor
override	dnn/contrib/spdlog/async_logger.h	/^    void _log_msg(details::log_msg& msg) override;$/;"	m	class:spdlog::async_logger
override	dnn/contrib/spdlog/async_logger.h	/^    void _set_formatter(spdlog::formatter_ptr msg_formatter) override;$/;"	m	class:spdlog::async_logger
override	dnn/contrib/spdlog/async_logger.h	/^    void _set_pattern(const std::string& pattern) override;$/;"	m	class:spdlog::async_logger
override	dnn/contrib/spdlog/formatter.h	/^    void format(details::log_msg& msg) override;$/;"	m	class:spdlog::pattern_formatter
ownAllocator_	dnn/contrib/rapidjson/document.h	/^    Allocator* ownAllocator_;$/;"	m	class:GenericDocument
ownAllocator_	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::Stack
ownBaseAllocator_	dnn/contrib/rapidjson/allocators.h	/^    BaseAllocator* ownBaseAllocator_;   \/\/!< base allocator created by this object.$/;"	m	class:MemoryPoolAllocator
p	dnn/neurons/adapt_integrate_and_fire.h	/^    double p;$/;"	m	struct:dnn::AdaptIntegrateAndFireState
p	dnn/neurons/leaky_integrate_and_fire.h	/^    double p;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
p	dnn/neurons/spike_sequence_neuron.h	/^    double p;$/;"	m	struct:dnn::SpikeSequenceNeuronState
p	dnn/neurons/srm_neuron.h	/^    double p;$/;"	m	struct:dnn::SRMNeuronState
p_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class p_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
p_mean	dnn/learning_rules/optimal_stdp.h	/^    double p_mean;$/;"	m	struct:dnn::OptimalStdpState
p_mean	dnn/weight_normalizations/sliding_ltd.h	/^    double p_mean;$/;"	m	struct:dnn::SlidingLtdState
p_rest	dnn/act_functions/exp_threshold.h	/^    double p_rest;$/;"	m	struct:dnn::ExpThresholdC
pad	dnn/contrib/kiss_fft/kiss_fftr.c	/^    void * pad;$/;"	m	struct:kiss_fftr_state	file:
pad	dnn/contrib/spdlog/details/format.h	/^inline StrFormatSpec<Char> pad($/;"	f	namespace:fmt
pad	dnn/contrib/spdlog/details/format.h	/^inline StrFormatSpec<wchar_t> pad($/;"	f	namespace:fmt
pad0_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad0_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
pad1_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad1_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
pad2_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad2_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
pad3_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    cacheline_pad_t         pad3_;$/;"	m	class:spdlog::details::mpmc_bounded_queue
padRightWithZeros	dnn/util/time_series.h	/^	void padRightWithZeros(size_t padSize) {$/;"	f	struct:dnn::TimeSeriesGeneric
pad_n_join	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, char sep)$/;"	f	namespace:spdlog::details
pad_n_join	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^static fmt::MemoryWriter& pad_n_join(fmt::MemoryWriter& w, int v1, int v2, int v3, char sep)$/;"	f	namespace:spdlog::details
padding	dnn/contrib/rapidjson/document.h	/^            char padding[4];$/;"	m	struct:GenericValue::Number::I
padding2	dnn/contrib/rapidjson/document.h	/^            char padding2[4];$/;"	m	struct:GenericValue::Number::U
parseArgOptionsPairs	dnn/util/util.cpp	/^map<string, string> parseArgOptionsPairs(const vector<string> &opts) {$/;"	f	namespace:dnn
parseDistribution	dnn/util/distributions.h	/^uptr<Distribution<T>> parseDistribution(const string &str_init) {$/;"	f	namespace:dnn
parseParenthesis	dnn/util/util.cpp	/^vector<double> parseParenthesis(const string &s) {$/;"	f	namespace:dnn
parseProtobuf	dnn/util/json.h	/^	static Document* parseProtobuf(google::protobuf::Message* mess) {$/;"	f	class:dnn::Json
parseResult_	dnn/contrib/rapidjson/document.h	/^          parseResult_(rhs.parseResult_)$/;"	f	class:GenericDocument
parseResult_	dnn/contrib/rapidjson/document.h	/^    ParseResult parseResult_;$/;"	m	class:GenericDocument
parseResult_	dnn/contrib/rapidjson/reader.h	/^    ParseResult parseResult_;$/;"	m	class:GenericReader
parseSources	generate_protos.py	/^def parseSources(src):$/;"	f
parseString	dnn/util/json.h	/^	static Document parseString(string &p) {$/;"	f	class:dnn::Json
parseStringC	dnn/util/json.h	/^	static Document parseStringC(const string &p) {$/;"	f	class:dnn::Json
parse_arg_index	dnn/contrib/spdlog/details/format.cc	/^inline Arg fmt::BasicFormatter<Char>::parse_arg_index(const Char *&s) {$/;"	f	class:fmt::BasicFormatter
parse_arg_name	dnn/contrib/spdlog/details/format.cc	/^inline Arg fmt::BasicFormatter<Char>::parse_arg_name(const Char *&s) {$/;"	f	class:fmt::BasicFormatter
parse_flags	dnn/contrib/spdlog/details/format.cc	/^void fmt::internal::PrintfFormatter<Char>::parse_flags($/;"	f	class:fmt::internal::PrintfFormatter
parse_header	dnn/contrib/spdlog/details/format.cc	/^unsigned fmt::internal::PrintfFormatter<Char>::parse_header($/;"	f	class:fmt::internal::PrintfFormatter
parse_json	dnn/contrib/pbjson/pbjson.cpp	/^    static int parse_json(const rapidjson::Value* json, Message* msg, std::string& err)$/;"	f	namespace:pbjson
parse_msg	dnn/contrib/pbjson/pbjson.cpp	/^    static rapidjson::Value* parse_msg(const Message *msg, rapidjson::Value::AllocatorType& allocator)$/;"	f	namespace:pbjson
parse_nonnegative_int	dnn/contrib/spdlog/details/format.cc	/^int parse_nonnegative_int(const Char *&s) {$/;"	f	namespace:fmt::__anon32
parser	generate_protos.py	/^    parser = argparse.ArgumentParser()$/;"	v
pastTime	dnn/sim/sim_info.h	/^	double pastTime;$/;"	m	struct:dnn::SimInfo
pattern_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^inline spdlog::pattern_formatter::pattern_formatter(const std::string& pattern)$/;"	f	class:spdlog::pattern_formatter
pattern_formatter	dnn/contrib/spdlog/formatter.h	/^class pattern_formatter : public formatter$/;"	c	namespace:spdlog
pb2json	dnn/contrib/pbjson/pbjson.cpp	/^    void pb2json(const Message* msg, std::string& str)$/;"	f	namespace:pbjson
pb2jsonobject	dnn/contrib/pbjson/pbjson.cpp	/^    rapidjson::Value* pb2jsonobject(const google::protobuf::Message* msg)$/;"	f	namespace:pbjson
pb2jsonobject	dnn/contrib/pbjson/pbjson.cpp	/^    rapidjson::Value* pb2jsonobject(const google::protobuf::Message* msg, rapidjson::Value::AllocatorType& allocator)$/;"	f	namespace:pbjson
pbjson	dnn/contrib/pbjson/pbjson.cpp	/^namespace pbjson$/;"	n	file:
pbjson	dnn/contrib/pbjson/pbjson.hpp	/^namespace pbjson$/;"	n
pcg128_t	dnn/util/random/pcg_extras.hpp	/^        typedef __uint128_t pcg128_t;$/;"	t	namespace:pcg_extras
pcg128_t	dnn/util/random/pcg_extras.hpp	/^        typedef pcg_extras::uint_x4<uint32_t,uint64_t> pcg128_t;$/;"	t	namespace:pcg_extras
pcg_detail	dnn/util/random/pcg_random.hpp	/^namespace pcg_detail {$/;"	n
pcg_extras	dnn/util/random/pcg_extras.hpp	/^    namespace pcg_extras {$/;"	n
pcg_extras	dnn/util/random/pcg_extras.hpp	/^namespace pcg_extras {$/;"	n
pcg_extras	dnn/util/random/pcg_uint128.hpp	/^namespace pcg_extras {$/;"	n
pcpx	dnn/contrib/kiss_fft/_kiss_fft_guts.h	149;"	d
period_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t period_pow2()$/;"	f	class:pcg_detail::engine
pointer	dnn/contrib/spdlog/details/format.h	/^        const void *pointer;$/;"	m	union:fmt::internal::Value::__anon25
poorCacheSize	shapelets/shapelets_config.h	/^    size_t poorCacheSize;$/;"	m	struct:dnn::shapelets::ShapeletsConfig
pop	spikework/spikework.h	/^        Ptr<SerializableBase> pop() {$/;"	f	class:dnn::Spikework::Stack
postfix	dnn/util/pretty_print.h	/^        const char_type * postfix;$/;"	m	struct:pretty_print::delimiters_values
potential	dnn/synapses/synapse.h	/^	double potential;$/;"	m	struct:dnn::SynapseInfo
potential	dnn/synapses/synapse.h	/^	inline const double& potential() const {$/;"	f	class:dnn::SynapseBase
power	dnn/weight_normalizations/pow_min_max.h	/^    double power;$/;"	m	struct:dnn::PowMinMaxC
power	dnn/weight_normalizations/sliding_ltd.h	/^    double power;$/;"	m	struct:dnn::SlidingLtdC
precalc	tools/dnn_sim/dnn_sim.cpp	/^    bool precalc;$/;"	m	struct:DnnSimOpts	file:
precision	dnn/contrib/spdlog/details/format.h	/^    int precision() const {$/;"	f	struct:fmt::AlignSpec
precision	dnn/contrib/spdlog/details/format.h	/^    int precision() const {$/;"	f	struct:fmt::FormatSpec
precision	dnn/contrib/spdlog/details/format.h	/^    int precision() const {$/;"	f	struct:fmt::TypeSpec
precision_	dnn/contrib/spdlog/details/format.h	/^    int precision_;$/;"	m	struct:fmt::FormatSpec
prefix	dnn/util/pretty_print.h	/^        const char_type * prefix;$/;"	m	struct:pretty_print::delimiters_values
prepare	dnn/contrib/kiss_fft/kissfft.hh	/^    void prepare($/;"	f	struct:kissfft_utils::traits
prepare_int_buffer	dnn/contrib/spdlog/details/format.h	/^    CharPtr prepare_int_buffer(unsigned num_digits,$/;"	f	class:fmt::BasicWriter
prepare_int_buffer	dnn/contrib/spdlog/details/format.h	/^BasicWriter<Char>::prepare_int_buffer($/;"	f	class:fmt::BasicWriter
pretty_print	dnn/util/pretty_print.h	/^namespace pretty_print$/;"	n
pretty_print_array	dnn/util/pretty_print.h	/^inline pretty_print::array_wrapper_n<T> pretty_print_array(const T * const a, size_t n)$/;"	f
print	dnn/base/base.h	/^    void print(std::ostream &str) const {$/;"	f	struct:dnn::SynSpike
print	dnn/base/constants.h	/^	void print(ostream &o) const {$/;"	f	struct:dnn::Constants
print	dnn/base/constants.h	/^	void print(ostream &o) const {$/;"	f	struct:dnn::SimConfiguration
print	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::print(CStringRef format_str, ArgList args) {$/;"	f	class:fmt
print	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::print(std::FILE *f, CStringRef format_str, ArgList args) {$/;"	f	class:fmt
print	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::print(std::ostream &os, CStringRef format_str, ArgList args) {$/;"	f	class:fmt
print	dnn/sim/network.h	/^	void print(std::ostream &str) const {$/;"	f	class:dnn::Network
print	dnn/sim/network.h	/^	void print(std::ostream& str) const {$/;"	f	class:dnn::Conn
print	dnn/sim/sim.cpp	/^void Sim::print(std::ostream &str) const {$/;"	f	class:dnn::Sim
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::ExpDistribution
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::NormalDistribution
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::UniformDistribution
print	shapelets/orderline.h	/^        void print(std::ostream &o) const {$/;"	f	struct:dnn::shapelets::Orderline::SplitStat
print	shapelets/orderline.h	/^    void print(std::ostream &o) const {$/;"	f	class:dnn::shapelets::Orderline
print	shapelets/shapelets_algo.h	/^        void print(std::ostream& str) const {$/;"	f	struct:dnn::shapelets::ShapeletsAlgo::AlgoStat
printHelp	tools/mpl/mpl_main.cpp	/^void printHelp() {$/;"	f
printHelp	tools/shapelets/shapelets.cpp	/^void printHelp() {$/;"	f
printHist	shapelets/common.h	/^void printHist(const unordered_map<size_t, size_t> &h, T &&o) {$/;"	f	namespace:dnn::shapelets
printNow	dnn/util/util.cpp	/^ostream& printNow(ostream &o) {$/;"	f	namespace:dnn
print_body	dnn/util/pretty_print.h	/^            static void print_body(const U & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_body	dnn/util/pretty_print.h	/^        static void print_body(const element_type & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_body	dnn/util/pretty_print.h	/^        static void print_body(const std::pair<T1, T2> & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_colored	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::print_colored(Color c, CStringRef format, ArgList args) {$/;"	f	class:fmt
print_container_helper	dnn/util/pretty_print.h	/^        print_container_helper(const T & container)$/;"	f	struct:pretty_print::print_container_helper
print_container_helper	dnn/util/pretty_print.h	/^    struct print_container_helper$/;"	s	namespace:pretty_print
print_section	dnn/base/constants.h	/^	static void print_section(const string &sect_name, const map<string, string> &m, ostream &o) {$/;"	f	struct:dnn::Constants
printable_typename	dnn/util/random/pcg_extras.hpp	/^struct printable_typename {};$/;"	s	namespace:pcg_extras
printer	dnn/util/pretty_print.h	/^        struct printer$/;"	s	struct:pretty_print::print_container_helper
printer	dnn/util/pretty_print.h	/^    struct print_container_helper<T, TChar, TCharTraits, TDelimiters>::printer<std::pair<T1, T2>>$/;"	s	class:pretty_print::print_container_helper
printer	dnn/util/pretty_print.h	/^    struct print_container_helper<T, TChar, TCharTraits, TDelimiters>::printer<std::tuple<Args...>>$/;"	s	class:pretty_print::print_container_helper
printf	dnn/contrib/spdlog/details/format.h	/^inline int printf(CStringRef format, ArgList args) {$/;"	f	namespace:fmt
printf	dnn/contrib/spdlog/details/format.h	/^void printf(BasicWriter<Char> &w, BasicCStringRef<Char> format, ArgList args) {$/;"	f	namespace:fmt
prob	dnn/act_functions/act_function.h	/^	funDelegate prob;$/;"	m	struct:dnn::ActFunctionInterface
prob	dnn/act_functions/determ.h	/^    double prob(const double &u) {        $/;"	f	class:dnn::Determ
prob	dnn/act_functions/exp_threshold.h	/^    double prob(const double &u) {        $/;"	f	class:dnn::ExpThreshold
prob	dnn/connections/stochastic.h	/^    double prob;$/;"	m	struct:dnn::StochasticC
probDeriv	dnn/act_functions/act_function.h	/^	funDelegate probDeriv;$/;"	m	struct:dnn::ActFunctionInterface
probDeriv	dnn/act_functions/determ.h	/^    double probDeriv(const double &u) {$/;"	f	class:dnn::Determ
probDeriv	dnn/act_functions/exp_threshold.h	/^    double probDeriv(const double &u) {$/;"	f	class:dnn::ExpThreshold
proc_map	spikework/spikework.h	/^    processors_map_type proc_map;$/;"	m	class:dnn::Spikework
process	spikework/conv.cpp	/^void ConvProcessor::process(Spikework::Stack &s) {$/;"	f	class:dnn::ConvProcessor
process	spikework/fft.cpp	/^void FFTProcessor::process(Spikework::Stack &s) {$/;"	f	class:dnn::FFTProcessor
process	spikework/gram.cpp	/^void GramProcessor::process(Spikework::Stack &s) {$/;"	f	class:dnn::GramProcessor
process	spikework/kernel.cpp	/^void KernelProcessor::process(Spikework::Stack &s) {$/;"	f	class:dnn::KernelProcessor
process	spikework/read.cpp	/^void ReadProcessor::process(Spikework::Stack &s) {$/;"	f	class:dnn::ReadProcessor
processArgs	spikework/conv.cpp	/^void ConvProcessor::processArgs(const vector<string> &args) {$/;"	f	class:dnn::ConvProcessor
processArgs	spikework/fft.cpp	/^void FFTProcessor::processArgs(const vector<string> &args) {$/;"	f	class:dnn::FFTProcessor
processArgs	spikework/gram.cpp	/^void GramProcessor::processArgs(const vector<string> &args) {$/;"	f	class:dnn::GramProcessor
processArgs	spikework/io_processor.cpp	/^void IOProcessor::processArgs(const vector<string> &args) {$/;"	f	class:dnn::IOProcessor
processArgs	spikework/kernel.cpp	/^void KernelProcessor::processArgs(const vector<string> &args) {$/;"	f	class:dnn::KernelProcessor
processArgs	spikework/processor.h	/^	virtual void processArgs(const vector<string> &args) {};$/;"	f	class:dnn::Processor
processSpec	spikework/kernel.cpp	/^void EpspKernel::processSpec(string spec) {$/;"	f	class:dnn::EpspKernel
process_next_msg	dnn/contrib/spdlog/details/async_log_helper.h	/^inline bool spdlog::details::async_log_helper::process_next_msg(log_clock::time_point& last_pop, log_clock::time_point& last_flush)$/;"	f	class:spdlog::details::async_log_helper
processors	spikework/spikework.h	/^    vector<Ptr<Processor>> processors;$/;"	m	class:dnn::Spikework
processors_map_type	spikework/spikework.h	/^    typedef map<string, Ptr<Processor> (*)()> processors_map_type;$/;"	t	class:dnn::Spikework
prod	dnn/contrib/kiss_fft/kiss_fftndr.c	/^static int prod(const int *dims, int ndims)$/;"	f	file:
prodStat	shapelets/stats.h	/^    vector<vector<Ptr<DoubleMatrix>>> prodStat;$/;"	m	class:dnn::shapelets::Stats
projs	shapelets/orderline.h	/^    vector<Projection> projs;$/;"	m	class:dnn::shapelets::Orderline
propSynSpikeDelegate	dnn/base/base.h	/^typedef FastDelegate1<const SynSpike&> propSynSpikeDelegate;$/;"	t	namespace:dnn
propagateSpike	dnn/sim/network.h	/^	void propagateSpike(const SpikeNeuronBase& neuron, const double &t) {$/;"	f	class:dnn::Network
propagateSpike	dnn/synapses/static_synapse.h	/^    void propagateSpike() {$/;"	f	class:dnn::StaticSynapse
propagateSpike	dnn/synapses/std_synapse.h	/^    void propagateSpike() {$/;"	f	class:dnn::STDSynapse
propagateSpike	dnn/synapses/synapse.h	/^	stateDelegate propagateSpike;$/;"	m	struct:dnn::SynapseInterface
propagateSynapseSpike	dnn/learning_rules/learning_rule.h	/^	propSynSpikeDelegate propagateSynapseSpike;$/;"	m	struct:dnn::LearningRuleInterface
propagateSynapseSpike	dnn/learning_rules/optimal_stdp.cpp	/^void OptimalStdp::propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::OptimalStdp
propagateSynapseSpike	dnn/learning_rules/stdp.h	/^    void propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::Stdp
propagateSynapseSpike	dnn/learning_rules/stdp_time.h	/^    void propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::StdpTime
propagateSynapseSpike	dnn/learning_rules/triple_stdp.h	/^    void propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::TripleStdp
propagateSynapseSpike	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::SpikeNeuronBase
propagateSynapseSpike	dnn/neurons/spike_neuron.h	/^	propSynSpikeDelegate propagateSynapseSpike;$/;"	m	struct:dnn::SpikeNeuronInterface
protoReader	dnn/io/stream.cpp	/^void Stream::protoReader(vector<ProtoMessage> &messages) {$/;"	f	class:dnn::Stream
proto_map_type	dnn/base/factory.h	/^    typedef map<string, ProtoMessage (*)()> proto_map_type;$/;"	t	class:dnn::Factory
proto_objects	dnn/base/factory.h	/^    vector<ProtoMessage> proto_objects;$/;"	m	class:dnn::Factory
protobinSave	dnn/io/serialize.cpp	/^void protobinSave(SerializableBase *b, const string fname) {$/;"	f	namespace:dnn
prototypemap	dnn/base/factory.cpp	/^Factory::proto_map_type Factory::prototypemap;$/;"	m	class:dnn::Factory	file:
prototypemap	dnn/base/factory.h	/^    static proto_map_type prototypemap;$/;"	m	class:dnn::Factory
provideDefaultInterface	dnn/act_functions/act_function.h	/^	static void provideDefaultInterface(ActFunctionInterface &i) {$/;"	f	class:dnn::ActFunctionBase
provideDefaultInterface	dnn/inputs/input.h	/^    static void provideDefaultInterface(InputInterface &i) {$/;"	f	class:dnn::InputBase
provideDefaultInterface	dnn/learning_rules/learning_rule.h	/^	static void provideDefaultInterface(LearningRuleInterface &i) {$/;"	f	class:dnn::LearningRuleBase
provideDefaultInterface	dnn/neurons/spike_neuron.h	/^	static void provideDefaultInterface(SpikeNeuronInterface &i) {$/;"	f	class:dnn::SpikeNeuronBase
provideDefaultInterface	dnn/synapses/synapse.h	/^	static void provideDefaultInterface(SynapseInterface &i) {$/;"	f	class:dnn::SynapseBase
provideDefaultInterface	dnn/util/time_series.h	/^	static void provideDefaultInterface(TimeSeriesInterface &i) {$/;"	f	struct:dnn::TimeSeries
provideDefaultInterface	dnn/weight_normalizations/weight_normalization.h	/^	static void provideDefaultInterface(WeightNormalizationInterface &i) {$/;"	f	class:dnn::WeightNormalizationBase
provideInterface	dnn/act_functions/act_function.h	/^	void provideInterface(ActFunctionInterface &i) {$/;"	f	class:dnn::ActFunctionBase
provideInterface	dnn/inputs/input.h	/^    void provideInterface(InputInterface &i) {$/;"	f	class:dnn::InputBase
provideInterface	dnn/learning_rules/learning_rule.h	/^	void provideInterface(LearningRuleInterface &i) {$/;"	f	class:dnn::LearningRuleBase
provideInterface	dnn/neurons/spike_neuron.h	/^	void provideInterface(SpikeNeuronInterface &i) {$/;"	f	class:dnn::SpikeNeuronBase
provideInterface	dnn/synapses/synapse.h	/^	void provideInterface(SynapseInterface &i) {$/;"	f	class:dnn::SynapseBase
provideInterface	dnn/util/time_series.h	/^	void provideInterface(TimeSeriesInterface &i) {$/;"	f	struct:dnn::TimeSeries
provideInterface	dnn/weight_normalizations/weight_normalization.h	/^	void provideInterface(WeightNormalizationInterface &i) {$/;"	f	class:dnn::WeightNormalizationBase
psp_decay	dnn/synapses/static_synapse.h	/^    double psp_decay;$/;"	m	struct:dnn::StaticSynapseC
psp_decay	dnn/synapses/std_synapse.h	/^    double psp_decay;$/;"	m	struct:dnn::STDSynapseC
ptr	dnn/util/interfaced_ptr.h	/^	inline T* ptr() {$/;"	f	class:dnn::InterfacedPtr
ptr	dnn/util/interfaced_ptr.h	/^	inline const T* ptr() const {$/;"	f	class:dnn::InterfacedPtr
ptr	dnn/util/ptr.h	/^	inline T* ptr() {$/;"	f	class:dnn::Ptr
ptr	dnn/util/ptr.h	/^	inline const T* ptr() const {$/;"	f	class:dnn::Ptr
ptr_	dnn/contrib/rapidjson/document.h	/^    Pointer ptr_; \/\/!< raw pointer$/;"	m	class:GenericMemberIterator
ptr_	dnn/contrib/spdlog/details/format.h	/^    T *ptr_;$/;"	m	class:fmt::Buffer
push	spikework/spikework.h	/^        void push(Ptr<T> p) {$/;"	f	class:dnn::Spikework::Stack
pushIntoHist	shapelets/dataset.h	/^    static void pushIntoHist(unordered_map<K, size_t> &hist, const K& v) {$/;"	f	class:dnn::shapelets::Dataset
push_back	dnn/contrib/spdlog/details/format.h	/^    void push_back(const T &value) {$/;"	f	class:fmt::Buffer
push_back	dnn/util/act_vector.h	/^	void push_back(const T &v) {$/;"	f	class:dnn::ActVector
putFunc_	dnn/contrib/rapidjson/encodedstream.h	/^    PutFunc putFunc_;$/;"	m	class:AutoUTFOutputStream
quot	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon11
r	dnn/connections/difference_of_gaussians.h	/^    double r;$/;"	m	struct:dnn::DifferenceOfGaussiansC
r	dnn/contrib/kiss_fft/kiss_fft.h	/^    kiss_fft_scalar r;$/;"	m	struct:__anon8
r	dnn/io/stream.h	/^    Repr r;$/;"	m	class:dnn::Stream
r_	dnn/contrib/rapidjson/reader.h	/^        GenericReader& r_;$/;"	m	struct:GenericReader::ClearStackOnExit
r_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class r_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
rate	dnn/util/distributions.h	/^    double rate;$/;"	m	class:dnn::ExpDistribution
raw	dnn/contrib/spdlog/details/log_msg.h	/^    fmt::MemoryWriter raw;$/;"	m	struct:spdlog::details::log_msg
readBaseObject	dnn/io/stream.cpp	/^SerializableBase* Stream::readBaseObject(SerializableBase *o) {$/;"	f	class:dnn::Stream
readBinaryMessage	dnn/io/stream.h	/^    bool readBinaryMessage(ProtoMessage mess, istream *str) {$/;"	f	class:dnn::Stream
readCount_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t readCount_;$/;"	m	class:FileReadStream
readFromFile	dnn/util/time_series.h	/^	void readFromFile(const string &filename, const string &format) {$/;"	f	struct:dnn::TimeSeries
readInputSpikes	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::readInputSpikes(const Time &t) {$/;"	f	class:dnn::SpikeNeuronBase
readObject	dnn/io/stream.h	/^    T* readObject(T *o = nullptr) {$/;"	f	class:dnn::Stream
readObjectProtos	dnn/io/stream.cpp	/^vector<ProtoMessage> Stream::readObjectProtos() {$/;"	f	class:dnn::Stream
ref	dnn/util/interfaced_ptr.h	/^	inline T& ref() {$/;"	f	class:dnn::InterfacedPtr
ref	dnn/util/interfaced_ptr.h	/^	inline const T& ref() const {$/;"	f	class:dnn::InterfacedPtr
ref	dnn/util/ptr.h	/^	inline T& ref() {$/;"	f	class:dnn::Ptr
ref	dnn/util/ptr.h	/^	inline const T& ref() const {$/;"	f	class:dnn::Ptr
ref_time	dnn/neurons/adapt_integrate_and_fire.h	/^    double ref_time;$/;"	m	struct:dnn::AdaptIntegrateAndFireState
ref_time	dnn/neurons/leaky_integrate_and_fire.h	/^    double ref_time;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
referent	shapelets/subsequence.h	/^    Ptr<TimeSeries> referent() {$/;"	f	class:dnn::shapelets::Subsequence
registerType	dnn/base/factory.h	/^    static void registerType(const string type) {$/;"	f	class:dnn::Factory
register_logger	dnn/contrib/spdlog/details/registry.h	/^    void register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog::details::registry_t
register_logger	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::register_logger(std::shared_ptr<logger> logger)$/;"	f	class:spdlog
register_logger_impl	dnn/contrib/spdlog/details/registry.h	/^    void register_logger_impl(std::shared_ptr<logger> logger)$/;"	f	class:spdlog::details::registry_t
registrationOff	dnn/base/factory.h	/^    void registrationOff() {$/;"	f	class:dnn::Factory
registrationOn	dnn/base/factory.h	/^    void registrationOn() {$/;"	f	class:dnn::Factory
registration_is_on	dnn/base/factory.h	/^    bool registration_is_on;$/;"	m	class:dnn::Factory
registry	dnn/contrib/spdlog/details/registry.h	/^typedef registry_t<spdlog::details::null_mutex> registry;$/;"	t	namespace:spdlog::details
registry	dnn/contrib/spdlog/details/registry.h	/^typedef registry_t<std::mutex> registry;$/;"	t	namespace:spdlog::details
registry_t	dnn/contrib/spdlog/details/registry.h	/^    registry_t<Mutex>(){}$/;"	f	class:spdlog::details::registry_t
registry_t	dnn/contrib/spdlog/details/registry.h	/^template <class Mutex> class registry_t$/;"	c	namespace:spdlog::details
rem	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon11
remove	dnn/contrib/spdlog/details/os.h	/^inline int remove(const tchar* filename)$/;"	f	namespace:spdlog::details::os
rename	dnn/contrib/spdlog/details/os.h	/^inline int rename(const tchar* filename1, const tchar* filename2)$/;"	f	namespace:spdlog::details::os
reopen	dnn/contrib/spdlog/details/file_helper.h	/^    void reopen(bool truncate)$/;"	f	class:spdlog::details::file_helper
replaceStr	dnn/util/util.cpp	/^void replaceStr( string &s, const string &search, const string &replace, size_t num) {$/;"	f	namespace:dnn
report_unhandled_arg	dnn/contrib/spdlog/details/format.cc	/^    void report_unhandled_arg() {$/;"	f	class:fmt::__anon32::PrecisionHandler
report_unhandled_arg	dnn/contrib/spdlog/details/format.cc	/^    void report_unhandled_arg() {$/;"	f	class:fmt::__anon32::WidthHandler
report_unhandled_arg	dnn/contrib/spdlog/details/format.h	/^    void report_unhandled_arg() {}$/;"	f	class:fmt::internal::ArgVisitor
report_unknown_type	dnn/contrib/spdlog/details/format.cc	/^FMT_FUNC void fmt::internal::report_unknown_type(char code, const char *type) {$/;"	f	class:fmt::internal
require_numeric_argument	dnn/contrib/spdlog/details/format.cc	/^inline void require_numeric_argument(const Arg &arg, char spec) {$/;"	f	namespace:fmt::__anon32
res	dnn/synapses/std_synapse.h	/^    double res;$/;"	m	struct:dnn::STDSynapseState
reserve	dnn/contrib/spdlog/details/format.h	/^    void reserve(std::size_t capacity) {$/;"	f	class:fmt::Buffer
reset	dnn/learning_rules/optimal_stdp.h	/^    void reset() {$/;"	f	class:dnn::OptimalStdp
reset	dnn/learning_rules/stdp.h	/^    void reset() {$/;"	f	class:dnn::Stdp
reset	dnn/learning_rules/stdp_time.h	/^    void reset() {$/;"	f	class:dnn::StdpTime
reset	dnn/learning_rules/triple_stdp.h	/^    void reset() {$/;"	f	class:dnn::TripleStdp
reset	dnn/neurons/adapt_integrate_and_fire.h	/^    void reset() {$/;"	f	class:dnn::AdaptIntegrateAndFire
reset	dnn/neurons/leaky_integrate_and_fire.h	/^    void reset() {$/;"	f	class:dnn::LeakyIntegrateAndFire
reset	dnn/neurons/spike_sequence_neuron.h	/^    void reset() {$/;"	f	class:dnn::SpikeSequenceNeuron
reset	dnn/neurons/srm_neuron.h	/^    void reset() {$/;"	f	class:dnn::SRMNeuron
reset	dnn/synapses/static_synapse.h	/^    void reset() {$/;"	f	class:dnn::StaticSynapse
reset	dnn/synapses/std_synapse.h	/^    void reset() {$/;"	f	class:dnn::STDSynapse
resetInternal	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::resetInternal() {$/;"	f	class:dnn::SpikeNeuronBase
resize	dnn/contrib/spdlog/details/format.h	/^    void resize(std::size_t new_size) {$/;"	f	class:fmt::Buffer
resize	dnn/util/act_vector.h	/^	void resize(size_t s) {$/;"	f	class:dnn::ActVector
rest_pot	dnn/neurons/adapt_integrate_and_fire.h	/^    double rest_pot;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
rest_pot	dnn/neurons/leaky_integrate_and_fire.h	/^    double rest_pot;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
restore	mpl/mpl.cpp	/^vector<double> MatchingPursuit::restore(const vector<FilterMatch> &matches) {$/;"	f	class:dnn::mpl::MatchingPursuit
result	dnn/util/random/pcg_random.hpp	/^        xtype result = xtype(internal >> (bottomspare - maxrandshift + rshift));$/;"	m	namespace:pcg_detail
result_type	dnn/util/random/pcg_extras.hpp	/^    typedef uint_least32_t result_type;$/;"	t	class:pcg_extras::seed_seq_from
result_type	dnn/util/random/pcg_random.hpp	/^    typedef xtype result_type;$/;"	t	class:pcg_detail::engine
retDoubleAtRefDoubleDelegate	dnn/base/base.h	/^typedef FastDelegate1<const double&, double> retDoubleAtRefDoubleDelegate;$/;"	t	namespace:dnn
retDoubleDelegate	dnn/base/base.h	/^typedef FastDelegate0<double> retDoubleDelegate;$/;"	t	namespace:dnn
retRefDoubleAtTimeDelegate	dnn/base/base.h	/^typedef FastDelegate1<const Time&,const double&> retRefDoubleAtTimeDelegate;$/;"	t	namespace:dnn
rightMajorHas	shapelets/orderline.h	/^        bool rightMajorHas(const size_t &class_id) const {$/;"	f	struct:dnn::shapelets::Orderline::SplitStat
right_classes_hist	shapelets/orderline.h	/^        unordered_map<size_t, size_t> right_classes_hist;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
right_major_classes	shapelets/orderline.h	/^        unordered_set<size_t> right_major_classes;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
rng_	dnn/util/random/pcg_extras.hpp	/^    RngType rng_;$/;"	m	class:pcg_extras::seed_seq_from
rotating_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^    rotating_file_sink(const tstring &base_filename, const tstring &extension,$/;"	f	class:spdlog::sinks::rotating_file_sink
rotating_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^class rotating_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks
rotating_file_sink_mt	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<std::mutex> rotating_file_sink_mt;$/;"	t	namespace:spdlog::sinks
rotating_file_sink_st	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef rotating_file_sink<details::null_mutex>rotating_file_sink_st;$/;"	t	namespace:spdlog::sinks
rotating_logger_mt	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_mt(const std::string& logger_name, const tstring& filename, size_t max_file_size, size_t max_files, bool force_flush)$/;"	f	class:spdlog
rotating_logger_st	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::rotating_logger_st(const std::string& logger_name, const tstring& filename, size_t max_file_size, size_t max_files, bool force_flush)$/;"	f	class:spdlog
rotl	dnn/util/random/pcg_extras.hpp	/^inline itype rotl(itype value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline itype rotr(itype value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint16_t rotr(uint16_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint32_t rotr(uint32_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint64_t rotr(uint64_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint8_t rotr(uint8_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rowLabelsIds	dnn/util/matrix.h	/^    const vector<size_t>& rowLabelsIds() {$/;"	f	class:dnn::DoubleMatrix
row_labels_ids	dnn/util/matrix.h	/^    vector<size_t> row_labels_ids;$/;"	m	class:dnn::DoubleMatrix
rshift	dnn/util/random/pcg_random.hpp	/^        bitcount_t rshift =$/;"	m	namespace:pcg_detail
run	dnn/sim/sim.cpp	/^void Sim::run(size_t jobs) {$/;"	f	class:dnn::Sim
run	mpl/mpl.cpp	/^MPLReturn MatchingPursuit::run(const TimeSeries &ts, const size_t dim) {$/;"	f	class:dnn::mpl::MatchingPursuit
run	shapelets/shapelets_algo.cpp	/^void ShapeletsAlgo::run(Dataset &dataset) {$/;"	f	class:dnn::shapelets::ShapeletsAlgo
runOnSubSeq	mpl/mpl.cpp	/^SubSeqRet MatchingPursuit::runOnSubSeq(const MatchingPursuit &self, const TimeSeries &ts, size_t dim, size_t from, size_t to) {$/;"	f	class:dnn::mpl::MatchingPursuit
runWorker	dnn/sim/sim.cpp	/^void Sim::runWorker(Sim &s, size_t from, size_t to, SpinningBarrier &barrier, std::exception_ptr &eptr) {$/;"	f	class:dnn::Sim
runWorkerRoutine	dnn/sim/sim.cpp	/^void Sim::runWorkerRoutine(Sim &s, size_t from, size_t to, SpinningBarrier &barrier) {$/;"	f	class:dnn::Sim
s	dnn/contrib/rapidjson/document.h	/^        String s;$/;"	m	union:GenericValue::Data
s	dnn/contrib/rapidjson/document.h	/^    const Ch* const s; \/\/!< plain CharType pointer$/;"	m	struct:GenericStringRef
s	dnn/contrib/rapidjson/reader.h	/^    Stream s;$/;"	m	class:internal::StreamLocalCopy
s	dnn/contrib/rapidjson/reader.h	/^    Stream& s;$/;"	m	class:internal::StreamLocalCopy
s	dnn/inputs/input.h	/^    State s;$/;"	m	class:dnn::Input
s	dnn/learning_rules/learning_rule.h	/^	State s;$/;"	m	class:dnn::LearningRule
s	dnn/neurons/spike_neuron.h	/^	State s;$/;"	m	class:dnn::SpikeNeuron
s	dnn/synapses/synapse.h	/^	State s;$/;"	m	class:dnn::Synapse
s	dnn/weight_normalizations/weight_normalization.h	/^	State s;$/;"	m	class:dnn::WeightNormalization
s	mpl/mpl.h	/^		vector<double> s;$/;"	m	struct:dnn::mpl::MatchingPursuit::SubSeqRet
s	mpl/mpl.h	/^	double s;$/;"	m	struct:dnn::mpl::FilterMatch
s	spikework/spikework.h	/^    Stack s;$/;"	m	class:dnn::Spikework
safeReadObject	dnn/io/stream.h	/^    T* safeReadObject() {$/;"	f	class:dnn::Stream
sampleDelay	dnn/util/util.cpp	/^double sampleDelay(double gain, double rate) {$/;"	f	namespace:dnn
saveSpikes	dnn/sim/sim.cpp	/^void Sim::saveSpikes(Stream &str) {$/;"	f	class:dnn::Sim
saveStat	dnn/sim/sim.cpp	/^void Sim::saveStat(Stream &str) {$/;"	f	class:dnn::Sim
scalar_type	dnn/contrib/kiss_fft/kissfft.hh	/^        typedef typename traits_type::scalar_type scalar_type;$/;"	t	class:kissfft
scalar_type	dnn/contrib/kiss_fft/kissfft.hh	/^    typedef T_scalar scalar_type;$/;"	t	struct:kissfft_utils::traits
sdist	shapelets/dist.cpp	/^double DistAlgorithm::sdist(const Subsequence &left, const Subsequence &right, const Stats &stats) {$/;"	f	class:dnn::shapelets::DistAlgorithm
seed	dnn/base/constants.h	/^	int seed;$/;"	m	struct:dnn::SimConfiguration
seed	dnn/util/random/pcg_random.hpp	/^    void seed(Args&&... args)$/;"	f	class:pcg_detail::engine
seed	mpl/mpl.h	/^	int seed;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
seed_seq_from	dnn/util/random/pcg_extras.hpp	/^    seed_seq_from(Args&&... args) :$/;"	f	class:pcg_extras::seed_seq_from
seed_seq_from	dnn/util/random/pcg_extras.hpp	/^class seed_seq_from {$/;"	c	namespace:pcg_extras
seq	dnn/neurons/spike_sequence_neuron.h	/^    vector<double> seq;$/;"	m	class:dnn::SpikeSequenceNeuron
seq	dnn/util/spikes_list.h	/^	vector<SpikesSequence> seq;$/;"	m	struct:dnn::SpikesList
sequence_	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^        std::atomic<size_t>   sequence_;$/;"	m	struct:spdlog::details::mpmc_bounded_queue::cell_t
serial_process	dnn/act_functions/act_function.h	/^	void serial_process() {$/;"	f	class:dnn::ActFunction
serial_process	dnn/act_functions/determ.h	/^    void serial_process() {$/;"	f	struct:dnn::DetermC
serial_process	dnn/act_functions/exp_threshold.h	/^    void serial_process() {$/;"	f	struct:dnn::ExpThresholdC
serial_process	dnn/connections/connection.h	/^	void serial_process() {$/;"	f	class:dnn::Connection
serial_process	dnn/connections/difference_of_gaussians.h	/^    void serial_process() {$/;"	f	struct:dnn::DifferenceOfGaussiansC
serial_process	dnn/connections/stochastic.h	/^    void serial_process() {$/;"	f	struct:dnn::StochasticC
serial_process	dnn/inputs/input.h	/^    void serial_process() {$/;"	f	class:dnn::Input
serial_process	dnn/inputs/input_time_series.h	/^    void serial_process() {$/;"	f	struct:dnn::InputTimeSeriesC
serial_process	dnn/inputs/input_time_series.h	/^    void serial_process() {$/;"	f	struct:dnn::InputTimeSeriesState
serial_process	dnn/learning_rules/learning_rule.h	/^	void serial_process() {$/;"	f	class:dnn::LearningRule
serial_process	dnn/learning_rules/learning_rule.h	/^	void serial_process() {$/;"	f	struct:dnn::LearningRuleInfo
serial_process	dnn/learning_rules/optimal_stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::OptimalStdpC
serial_process	dnn/learning_rules/optimal_stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::OptimalStdpState
serial_process	dnn/learning_rules/stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::StdpC
serial_process	dnn/learning_rules/stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::StdpState
serial_process	dnn/learning_rules/stdp_time.h	/^    void serial_process() {$/;"	f	struct:dnn::StdpTimeC
serial_process	dnn/learning_rules/stdp_time.h	/^    void serial_process() {$/;"	f	struct:dnn::StdpTimeState
serial_process	dnn/learning_rules/triple_stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::TripleStdpC
serial_process	dnn/learning_rules/triple_stdp.h	/^    void serial_process() {$/;"	f	struct:dnn::TripleStdpState
serial_process	dnn/neurons/adapt_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::AdaptIntegrateAndFireC
serial_process	dnn/neurons/adapt_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::AdaptIntegrateAndFireState
serial_process	dnn/neurons/leaky_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::LeakyIntegrateAndFireC
serial_process	dnn/neurons/leaky_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::LeakyIntegrateAndFireState
serial_process	dnn/neurons/spike_neuron.h	/^	void serial_process() {$/;"	f	class:dnn::SpikeNeuron
serial_process	dnn/neurons/spike_neuron.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikeNeuronInfo
serial_process	dnn/neurons/spike_sequence_neuron.h	/^    void serial_process() {$/;"	f	struct:dnn::SpikeSequenceNeuronC
serial_process	dnn/neurons/spike_sequence_neuron.h	/^    void serial_process() {$/;"	f	struct:dnn::SpikeSequenceNeuronState
serial_process	dnn/neurons/srm_neuron.h	/^    void serial_process() {$/;"	f	struct:dnn::SRMNeuronC
serial_process	dnn/neurons/srm_neuron.h	/^    void serial_process() {$/;"	f	struct:dnn::SRMNeuronState
serial_process	dnn/sim/sim_info.h	/^	void serial_process() {$/;"	f	struct:dnn::SimInfo
serial_process	dnn/synapses/static_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::StaticSynapseC
serial_process	dnn/synapses/static_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::StaticSynapseState
serial_process	dnn/synapses/std_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::STDSynapseC
serial_process	dnn/synapses/std_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::STDSynapseState
serial_process	dnn/synapses/synapse.h	/^	void serial_process() {$/;"	f	class:dnn::Synapse
serial_process	dnn/synapses/synapse.h	/^	void serial_process() {$/;"	f	struct:dnn::SynapseInfo
serial_process	dnn/util/matrix.h	/^    void serial_process() {$/;"	f	class:dnn::DoubleMatrix
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesList
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesListInfo
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesSequence
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	class:dnn::Statistics
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	struct:dnn::Stat
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	struct:dnn::StatisticsInfo
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeries
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesComplex
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesComplexData
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesData
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesDimInfo
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesInfo
serial_process	dnn/weight_normalizations/min_max.h	/^    void serial_process() {$/;"	f	struct:dnn::MinMaxC
serial_process	dnn/weight_normalizations/nonlinear_min_max.h	/^    void serial_process() {$/;"	f	struct:dnn::NonLinearMinMaxC
serial_process	dnn/weight_normalizations/pow_min_max.h	/^    void serial_process() {$/;"	f	struct:dnn::PowMinMaxC
serial_process	dnn/weight_normalizations/sliding_ltd.h	/^    void serial_process() {$/;"	f	struct:dnn::SlidingLtdC
serial_process	dnn/weight_normalizations/sliding_ltd.h	/^    void serial_process() {$/;"	f	struct:dnn::SlidingLtdState
serial_process	dnn/weight_normalizations/weight_normalization.h	/^	void serial_process() {$/;"	f	class:dnn::WeightNormalization
serial_process	dnn/weight_normalizations/weight_normalization.h	/^	void serial_process() {$/;"	f	struct:dnn::EmptyState
serial_process	mpl/mpl.h	/^	void serial_process() {$/;"	f	struct:dnn::mpl::FilterMatch
serial_process	mpl/mpl.h	/^	void serial_process() {$/;"	f	struct:dnn::mpl::MatchingPursuitConfig
serial_process	shapelets/shapelets_config.h	/^    void serial_process() {$/;"	f	struct:dnn::shapelets::ShapeletsConfig
serial_process	shapelets/subsequence.cpp	/^void Subsequence::serial_process() {$/;"	f	class:dnn::shapelets::Subsequence
serialize	dnn/sim/sim.cpp	/^void Sim::serialize(Stream &output_stream) {$/;"	f	class:dnn::Sim
set	dnn/util/interfaced_ptr.h	/^	void set(T *ptr_to_set) {$/;"	f	class:dnn::InterfacedPtr
set	dnn/util/ptr.h	/^	void set(T &ptr_to_set) {$/;"	f	class:dnn::Ptr
set	dnn/util/ptr.h	/^	void set(T *ptr_to_set) {$/;"	f	class:dnn::Ptr
setActFunction	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::setActFunction(ActFunctionBase *_act_f) { $/;"	f	class:dnn::SpikeNeuronBase
setAsInput	dnn/inputs/input_time_series.h	/^    void setAsInput(SerializableBase *b) {$/;"	f	class:dnn::InputTimeSeries
setAsInput	dnn/io/serialize.h	/^    virtual void setAsInput(SerializableBase *b) {$/;"	f	class:dnn::SerializableBase
setAsInput	dnn/neurons/spike_sequence_neuron.h	/^    void setAsInput(SerializableBase *b) {$/;"	f	class:dnn::SpikeSequenceNeuron
setColLabel	dnn/util/matrix.h	/^    void setColLabel(size_t i, string lab) {$/;"	f	class:dnn::DoubleMatrix
setCoordinates	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::setCoordinates(size_t xi, size_t yi, size_t colSize) {$/;"	f	class:dnn::SpikeNeuronBase
setDimSize	dnn/util/time_series.h	/^	void setDimSize(const size_t &size) {$/;"	f	struct:dnn::TimeSeriesGeneric
setElement	dnn/util/matrix.h	/^    void setElement(size_t i, size_t j, double val) {$/;"	f	class:dnn::DoubleMatrix
setFilter	mpl/mpl.h	/^	void setFilter(const DoubleMatrix &m) {$/;"	f	class:dnn::mpl::MatchingPursuit
setFired	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::setFired(const bool& f) {$/;"	f	class:dnn::SpikeNeuronBase
setFired	dnn/synapses/synapse.h	/^	inline void setFired(bool fired) {$/;"	f	class:dnn::SynapseBase
setInactive	dnn/util/act_vector.h	/^	void setInactive(unordered_set<size_t>::iterator &i) {$/;"	f	class:dnn::ActVector
setInput	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::setInput(InputBase *_input) { $/;"	f	class:dnn::SpikeNeuronBase
setInputModelStream	dnn/sim/builder.h	/^	void setInputModelStream(Stream *s) {$/;"	f	class:dnn::Builder
setLabel	dnn/util/matrix.h	/^    void setLabel(size_t i, string lab, vector<size_t> &labels_ids) {$/;"	f	class:dnn::DoubleMatrix
setLearningRule	dnn/neurons/spike_neuron.cpp	/^void SpikeNeuronBase::setLearningRule(LearningRuleBase *_lrule) { $/;"	f	class:dnn::SpikeNeuronBase
setLogLevel	dnn/util/log/log.h	/^    void setLogLevel(ELogLevel lev) {$/;"	f	class:dnn::Log
setMaxDuration	dnn/sim/sim.cpp	/^void Sim::setMaxDuration(const double Tmax) {$/;"	f	class:dnn::Sim
setNoColors	dnn/util/log/log.h	/^    void setNoColors() {$/;"	f	class:dnn::Log
setRowLabel	dnn/util/matrix.h	/^    void setRowLabel(size_t i, string lab) {$/;"	f	class:dnn::DoubleMatrix
setWeightNormalization	dnn/learning_rules/learning_rule.h	/^	void setWeightNormalization(WeightNormalizationBase *_norm) {$/;"	f	class:dnn::LearningRule
set_args	dnn/contrib/spdlog/details/format.h	/^    void set_args(const ArgList &args) {$/;"	f	class:fmt::internal::FormatterBase
set_async_mode	dnn/contrib/spdlog/details/registry.h	/^    void set_async_mode(size_t q_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms)$/;"	f	class:spdlog::details::registry_t
set_async_mode	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::set_async_mode(size_t queue_size, const async_overflow_policy overflow_policy, const std::function<void()>& worker_warmup_cb, const std::chrono::milliseconds& flush_interval_ms)$/;"	f	class:spdlog
set_formatter	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::set_formatter(formatter_ptr msg_formatter)$/;"	f	class:spdlog::details::async_log_helper
set_formatter	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_formatter(spdlog::formatter_ptr msg_formatter)$/;"	f	class:spdlog::logger
set_formatter	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::set_formatter(spdlog::formatter_ptr f)$/;"	f	class:spdlog
set_level	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_level(spdlog::level::level_enum log_level)$/;"	f	class:spdlog::logger
set_level	dnn/contrib/spdlog/details/registry.h	/^    void set_level(level::level_enum log_level)$/;"	f	class:spdlog::details::registry_t
set_level	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::set_level(level::level_enum log_level)$/;"	f	class:spdlog
set_pattern	dnn/contrib/spdlog/details/logger_impl.h	/^inline void spdlog::logger::set_pattern(const std::string& pattern)$/;"	f	class:spdlog::logger
set_pattern	dnn/contrib/spdlog/details/registry.h	/^    void set_pattern(const std::string& pattern)$/;"	f	class:spdlog::details::registry_t
set_pattern	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::set_pattern(const std::string& format_string)$/;"	f	class:spdlog
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::no_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::oneseq_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::unique_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(itype specific_seq)$/;"	f	class:pcg_detail::specific_stream
set_string	dnn/contrib/spdlog/details/format.h	/^    void set_string(StringRef str) {$/;"	f	class:fmt::internal::MakeValue
set_string	dnn/contrib/spdlog/details/format.h	/^    void set_string(WStringRef str) {$/;"	f	class:fmt::internal::MakeValue
set_sync_mode	dnn/contrib/spdlog/details/registry.h	/^    void set_sync_mode()$/;"	f	class:spdlog::details::registry_t
set_sync_mode	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline void spdlog::set_sync_mode()$/;"	f	class:spdlog
sfinae_base	dnn/util/pretty_print.h	/^        struct sfinae_base$/;"	s	namespace:pretty_print::detail
shapelets	shapelets/common.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/common.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/dataset.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/dataset.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/dist.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/dist.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/orderline.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/orderline.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/projection.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/shapelets_algo.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/shapelets_algo.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/shapelets_config.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/stats.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/stats.h	/^namespace shapelets {$/;"	n	namespace:dnn
shapelets	shapelets/subsequence.cpp	/^namespace shapelets {$/;"	n	namespace:dnn	file:
shapelets	shapelets/subsequence.h	/^namespace shapelets {$/;"	n	namespace:dnn
short_level_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class short_level_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
should_log	dnn/contrib/spdlog/details/logger_impl.h	/^inline bool spdlog::logger::should_log(spdlog::level::level_enum msg_level) const$/;"	f	class:spdlog::logger
shuffle	dnn/util/random/pcg_extras.hpp	/^void shuffle(Iter from, Iter to, RandType&& rng)$/;"	f	namespace:pcg_extras
si	dnn/sim/global_ctx.h	/^	Ptr<const SimInfo> si;$/;"	m	class:dnn::GlobalCtx
sigma	dnn/util/distributions.h	/^    double sigma;$/;"	m	class:dnn::NormalDistribution
sim_conf	dnn/base/constants.h	/^	SimConfiguration sim_conf;$/;"	m	struct:dnn::Constants
sim_info	dnn/sim/sim.h	/^	SimInfo sim_info;$/;"	m	class:dnn::Sim
simple_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^    explicit simple_file_sink(const std::string &filename,$/;"	f	class:spdlog::sinks::simple_file_sink
simple_file_sink	dnn/contrib/spdlog/sinks/file_sinks.h	/^class simple_file_sink : public base_sink < Mutex >$/;"	c	namespace:spdlog::sinks
simple_file_sink_mt	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<std::mutex> simple_file_sink_mt;$/;"	t	namespace:spdlog::sinks
simple_file_sink_st	dnn/contrib/spdlog/sinks/file_sinks.h	/^typedef simple_file_sink<details::null_mutex> simple_file_sink_st;$/;"	t	namespace:spdlog::sinks
sink	dnn/contrib/spdlog/sinks/sink.h	/^class sink$/;"	c	namespace:spdlog::sinks
sinks	dnn/contrib/spdlog/common.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/base_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/file_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/null_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/ostream_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/sink.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^namespace sinks$/;"	n	namespace:spdlog
sinks	dnn/contrib/spdlog/sinks/syslog_sink.h	/^namespace sinks$/;"	n	namespace:spdlog
size	dnn/contrib/rapidjson/allocators.h	/^        size_t size;        \/\/!< Current size of allocated memory in bytes.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
size	dnn/contrib/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Array
size	dnn/contrib/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Object
size	dnn/contrib/spdlog/details/format.h	/^        std::size_t size;$/;"	m	struct:fmt::internal::Value::StringValue
size	dnn/contrib/spdlog/details/format.h	/^    size_t size() const {$/;"	f	class:fmt::internal::UTF16ToUTF8
size	dnn/contrib/spdlog/details/format.h	/^    size_t size() const {$/;"	f	class:fmt::internal::UTF8ToUTF16
size	dnn/contrib/spdlog/details/format.h	/^    std::size_t size() const {$/;"	f	class:fmt::BasicStringRef
size	dnn/contrib/spdlog/details/format.h	/^    std::size_t size() const {$/;"	f	class:fmt::BasicWriter
size	dnn/contrib/spdlog/details/format.h	/^    std::size_t size() const {$/;"	f	class:fmt::Buffer
size	dnn/contrib/spdlog/details/format.h	/^    std::size_t size() const {$/;"	f	class:fmt::FormatInt
size	dnn/util/act_vector.h	/^	size_t size() const {$/;"	f	class:dnn::ActVector
size	dnn/util/random/pcg_extras.hpp	/^    constexpr size_t size() const$/;"	f	class:pcg_extras::seed_seq_from
size	dnn/util/spikes_list.h	/^	inline const size_t size() const {$/;"	f	struct:dnn::SpikesList
size	dnn/util/spikes_list.h	/^	size_t size;$/;"	m	struct:dnn::SpikesListInfo
size	dnn/util/time_series.h	/^	size_t size;$/;"	m	struct:dnn::TimeSeriesDimInfo
size_	dnn/contrib/rapidjson/memorystream.h	/^    size_t size_;       \/\/!< Size of the stream.$/;"	m	struct:MemoryStream
size_	dnn/contrib/spdlog/details/format.h	/^    std::size_t size_;$/;"	m	class:fmt::BasicStringRef
size_	dnn/contrib/spdlog/details/format.h	/^    std::size_t size_;$/;"	m	class:fmt::Buffer
size_type	dnn/util/pretty_print.h	/^        typedef typename T::size_type size_type;$/;"	t	struct:pretty_print::bucket_print_wrapper
sleep_or_yield	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::sleep_or_yield(const spdlog::log_clock::time_point& now, const spdlog::log_clock::time_point& last_op_time)$/;"	f	class:spdlog::details::async_log_helper
smul	dnn/contrib/kiss_fft/_kiss_fft_guts.h	64;"	d
spdlog	dnn/contrib/spdlog/async_logger.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/common.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/async_log_helper.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/file_helper.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/line_logger.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/log_msg.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/null_mutex.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/os.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/details/registry.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/formatter.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/logger.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/base_sink.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/file_sinks.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/null_sink.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/ostream_sink.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/sink.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/sinks/syslog_sink.h	/^namespace spdlog$/;"	n
spdlog	dnn/contrib/spdlog/spdlog.h	/^namespace spdlog$/;"	n
spdlog_ex	dnn/contrib/spdlog/common.h	/^    spdlog_ex(const std::string& msg) :_msg(msg) {}$/;"	f	class:spdlog::spdlog_ex
spdlog_ex	dnn/contrib/spdlog/common.h	/^class spdlog_ex : public std::exception$/;"	c	namespace:spdlog
spec	dnn/contrib/spdlog/details/format.cc	/^    const FormatSpec &spec() const {$/;"	f	class:fmt::internal::BasicArgFormatter
spec_	dnn/contrib/spdlog/details/format.cc	/^    FormatSpec &spec_;$/;"	m	class:fmt::internal::BasicArgFormatter	file:
spec_	dnn/contrib/spdlog/details/format.cc	/^    fmt::FormatSpec &spec_;$/;"	m	class:fmt::__anon32::WidthHandler	file:
specific_stream	dnn/util/random/pcg_random.hpp	/^    specific_stream(itype specific_seq)$/;"	f	class:pcg_detail::specific_stream
specific_stream	dnn/util/random/pcg_random.hpp	/^class specific_stream {$/;"	c	namespace:pcg_detail
spikesList	dnn/sim/network.h	/^	SpikesList& spikesList() {$/;"	f	class:dnn::Network
spikes_list	dnn/sim/network.h	/^	SpikesList spikes_list;$/;"	m	class:dnn::Network
split	dnn/util/util.cpp	/^vector<string> split(const string &s, char delim) {$/;"	f	namespace:dnn
splitBySubstr	dnn/util/util.cpp	/^vector<string> splitBySubstr(const string &s_inp, const string &delimiter) {$/;"	f	namespace:dnn
splitDist	shapelets/orderline.cpp	/^const double Orderline::splitDist(const size_t &split_pos) const {$/;"	f	class:dnn::shapelets::Orderline
split_dist	shapelets/orderline.h	/^        double split_dist;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
split_into	dnn/util/util.cpp	/^vector<string> split_into(const string &s, char delim, vector<string> &elems) {$/;"	f	namespace:dnn
split_position	shapelets/orderline.h	/^        size_t split_position;$/;"	m	struct:dnn::shapelets::Orderline::SplitStat
sprintf	dnn/contrib/spdlog/details/format.h	/^inline std::string sprintf(CStringRef format, ArgList args) {$/;"	f	namespace:fmt
squaredCumulativeSum	shapelets/stats.cpp	/^const vector<double>& Stats::squaredCumulativeSum(const size_t &ts_id, const size_t &dim) const {$/;"	f	class:dnn::shapelets::Stats
squaredCumulativeSums	shapelets/stats.h	/^    vector<vector<vector<double>>> squaredCumulativeSums;$/;"	m	class:dnn::shapelets::Stats
src_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:MemoryStream
src_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* src_;$/;"	m	struct:GenericInsituStringStream
src_	dnn/contrib/rapidjson/rapidjson.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:GenericStringStream
sround	dnn/contrib/kiss_fft/_kiss_fft_guts.h	65;"	d
ss	dnn/base/exceptions.h	/^  	stringstream ss;$/;"	m	struct:dnn::dnnException
ss	dnn/contrib/rapidjson/document.h	/^        ShortString ss;$/;"	m	union:GenericValue::Data
sstring	dnn/contrib/spdlog/details/format.h	/^        StringValue<signed char> sstring;$/;"	m	union:fmt::internal::Value::__anon25
stack	spikework/spikework.h	/^    	vector<Ptr<SerializableBase>> stack;$/;"	m	class:dnn::Spikework::Stack
stackEnd_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stackEnd_;$/;"	m	class:internal::Stack
stackStream	dnn/contrib/rapidjson/reader.h	/^        StackStream<char> stackStream;$/;"	m	class:GenericReader::NumberStream
stackTop_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stackTop_;$/;"	m	class:internal::Stack
stack_	dnn/contrib/rapidjson/document.h	/^    internal::Stack<StackAllocator> stack_;$/;"	m	class:GenericDocument
stack_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stack_;$/;"	m	class:internal::Stack
stack_	dnn/contrib/rapidjson/memorybuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	struct:GenericMemoryBuffer
stack_	dnn/contrib/rapidjson/reader.h	/^        internal::Stack<StackAllocator>& stack_;$/;"	m	class:GenericReader::StackStream
stack_	dnn/contrib/rapidjson/reader.h	/^    internal::Stack<StackAllocator> stack_;  \/\/!< A stack for storing decoded string temporarily during non-destructive parsing.$/;"	m	class:GenericReader
stack_	dnn/contrib/rapidjson/stringbuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	class:GenericStringBuffer
start	spikework/conv.cpp	/^void ConvProcessor::start(Spikework::Stack &s) {$/;"	f	class:dnn::ConvProcessor
start	spikework/io_processor.cpp	/^void IOProcessor::start(Spikework::Stack &s) {$/;"	f	class:dnn::IOProcessor
start	spikework/kernel.cpp	/^void KernelProcessor::start(Spikework::Stack &s) {$/;"	f	class:dnn::KernelProcessor
start	spikework/processor.h	/^	virtual void start(Spikework::Stack &s) {}$/;"	f	class:dnn::Processor
startSize	shapelets/shapelets_config.h	/^    size_t startSize;$/;"	m	struct:dnn::shapelets::ShapeletsConfig
start_	dnn/contrib/spdlog/details/format.h	/^    const Char *start_;$/;"	m	class:fmt::BasicFormatter
stat	dnn/learning_rules/learning_rule.h	/^	Statistics stat;$/;"	m	class:dnn::LearningRuleBase
stat	dnn/neurons/spike_neuron.h	/^	Statistics stat;$/;"	m	class:dnn::SpikeNeuronBase
stat	dnn/synapses/synapse.h	/^	Statistics stat;$/;"	m	class:dnn::SynapseBase
stat	dnn/weight_normalizations/weight_normalization.h	/^   	Statistics stat;$/;"	m	class:dnn::WeightNormalizationBase
stat	shapelets/shapelets_algo.cpp	/^    Orderline::SplitStat stat;$/;"	m	struct:dnn::shapelets::Split	file:
stat_names	dnn/util/statistics.h	/^	vector<string> stat_names;$/;"	m	struct:dnn::StatisticsInfo
stateDelegate	dnn/base/base.h	/^typedef FastDelegate0<> stateDelegate;$/;"	t	namespace:dnn
state_	dnn/util/random/pcg_random.hpp	/^    itype state_;$/;"	m	class:pcg_detail::engine
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::engine
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::no_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::oneseq_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::specific_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::unique_stream
states	dnn/contrib/kiss_fft/kiss_fftnd.c	/^    kiss_fft_cfg *states; \/* cfg states for each dimension *\/$/;"	m	struct:kiss_fftnd_state	file:
static_arbitrary_seed	dnn/util/random/pcg_extras.hpp	/^struct static_arbitrary_seed {$/;"	s	namespace:pcg_extras
stats	dnn/util/statistics.h	/^	map<string, Stat> stats;$/;"	m	class:dnn::Statistics
std	dnn/util/pretty_print.h	/^namespace std$/;"	n
stderr_logger_mt	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog
stderr_logger_st	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stderr_logger_st(const std::string& logger_name)$/;"	f	class:spdlog
stderr_sink	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^    stderr_sink() : ostream_sink<Mutex>(std::cerr, true) {}$/;"	f	class:spdlog::sinks::stderr_sink
stderr_sink	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^class stderr_sink : public ostream_sink<Mutex>$/;"	c	namespace:spdlog::sinks
stderr_sink_mt	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<std::mutex> stderr_sink_mt;$/;"	t	namespace:spdlog::sinks
stderr_sink_st	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^typedef stderr_sink<details::null_mutex> stderr_sink_st;$/;"	t	namespace:spdlog::sinks
stdout_logger_mt	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_mt(const std::string& logger_name)$/;"	f	class:spdlog
stdout_logger_st	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::stdout_logger_st(const std::string& logger_name)$/;"	f	class:spdlog
stdout_sink	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^    stdout_sink() : ostream_sink<Mutex>(std::cout, true) {}$/;"	f	class:spdlog::sinks::stdout_sink
stdout_sink	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^class stdout_sink : public ostream_sink<Mutex>$/;"	c	namespace:spdlog::sinks
stdout_sink_mt	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<std::mutex> stdout_sink_mt;$/;"	t	namespace:spdlog::sinks
stdout_sink_st	dnn/contrib/spdlog/sinks/stdout_sinks.h	/^typedef stdout_sink<details::null_mutex> stdout_sink_st;$/;"	t	namespace:spdlog::sinks
stepSize	shapelets/shapelets_config.h	/^    size_t stepSize;$/;"	m	struct:dnn::shapelets::ShapeletsConfig
step_	dnn/util/spinning_barrier.h	/^    std::atomic<unsigned int> step_;$/;"	m	class:dnn::SpinningBarrier
str	dnn/contrib/rapidjson/document.h	/^        Ch str[MaxChars];$/;"	m	struct:GenericValue::ShortString
str	dnn/contrib/rapidjson/document.h	/^        const Ch* str;$/;"	m	struct:GenericValue::String
str	dnn/contrib/spdlog/details/format.h	/^    const Char *str() const {$/;"	f	class:fmt::StrFormatSpec
str	dnn/contrib/spdlog/details/format.h	/^    std::basic_string<Char> str() const {$/;"	f	class:fmt::BasicWriter
str	dnn/contrib/spdlog/details/format.h	/^    std::string str() const {$/;"	f	class:fmt::FormatInt
str	dnn/contrib/spdlog/details/format.h	/^    std::string str() const {$/;"	f	class:fmt::internal::UTF16ToUTF8
str	dnn/contrib/spdlog/details/format.h	/^    std::wstring str() const {$/;"	f	class:fmt::internal::UTF8ToUTF16
strEndsWith	dnn/util/util.cpp	/^bool strEndsWith(const std::string &str, const std::string &suffix) {$/;"	f	namespace:dnn
strStartsWith	dnn/util/util.cpp	/^bool strStartsWith(const string &s, const string &prefix) {$/;"	f	namespace:dnn
str_	dnn/contrib/spdlog/details/format.h	/^    char *str_;$/;"	m	class:fmt::FormatInt
str_	dnn/contrib/spdlog/details/format.h	/^    const Char *str_;$/;"	m	class:fmt::StrFormatSpec
stream	dnn/util/pretty_print.h	/^        std::ostream & stream(std::ostream & s)$/;"	f	struct:pretty_print::custom_delims_wrapper
stream	dnn/util/pretty_print.h	/^        std::wostream & stream(std::wostream & s)$/;"	f	struct:pretty_print::custom_delims_wrapper
stream	dnn/util/random/pcg_random.hpp	/^    constexpr itype stream() const$/;"	f	class:pcg_detail::unique_stream
stream	dnn/util/random/pcg_random.hpp	/^    itype stream()$/;"	f	class:pcg_detail::specific_stream
stream	dnn/util/random/pcg_random.hpp	/^    static constexpr itype stream()$/;"	f	class:pcg_detail::oneseq_stream
stream_state	dnn/util/random/pcg_random.hpp	/^    typedef itype stream_state;$/;"	t	class:pcg_detail::specific_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::no_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::oneseq_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::specific_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::unique_stream
strerror_r	dnn/contrib/spdlog/details/format.cc	/^static inline fmt::internal::Null<> strerror_r(int, char *, ...) {$/;"	f	file:
strerror_s	dnn/contrib/spdlog/details/format.cc	/^static inline fmt::internal::Null<> strerror_s(char *, std::size_t, ...) {$/;"	f	file:
string	dnn/contrib/spdlog/details/format.h	/^        StringValue<char> string;$/;"	m	union:fmt::internal::Value::__anon25
stringLessThan	dnn/util/statistics.h	/^	stringLessThan() $/;"	f	struct:dnn::stringLessThan
stringLessThan	dnn/util/statistics.h	/^struct stringLessThan : public std::binary_function< string, string, bool >$/;"	s	namespace:dnn
stringify	dnn/util/json.h	/^	static string stringify(const Value &v) {$/;"	f	class:dnn::Json
strip_comments	dnn/util/util.cpp	/^string strip_comments(const string& input, const string& delimiters)$/;"	f	namespace:dnn
strip_white	dnn/util/util.cpp	/^string strip_white(const string& input)$/;"	f	namespace:dnn
strtoimax	dnn/contrib/rapidjson/msinttypes/inttypes.h	303;"	d
strtoumax	dnn/contrib/rapidjson/msinttypes/inttypes.h	304;"	d
structures	generate_protos.py	/^    structures = parseSources(args.source_path)$/;"	v
subsequence	shapelets/shapelets_algo.cpp	/^    Subsequence subsequence;$/;"	m	struct:dnn::shapelets::Split	file:
substate	dnn/contrib/kiss_fft/kiss_fftr.c	/^    kiss_fft_cfg substate;$/;"	m	struct:kiss_fftr_state	file:
subwithcarry	dnn/util/random/pcg_uint128.hpp	/^inline UInt subwithcarry(UInt x, UInt y, bool carryin, bool* carryout)$/;"	f	namespace:pcg_extras
super_twiddles	dnn/contrib/kiss_fft/kiss_fftr.c	/^    kiss_fft_cpx * super_twiddles;$/;"	m	struct:kiss_fftr_state	file:
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 0 };$/;"	e	enum:ASCII::__anon15
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:AutoUTF::__anon16
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF16::__anon13
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF32::__anon14
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF8::__anon12
swapInd	dnn/util/util.cpp	/^void swapInd(size_t *l, size_t *r) {$/;"	f	namespace:dnn
syn_id	dnn/base/base.h	/^    size_t syn_id;$/;"	m	struct:dnn::SynSpike
syn_id	dnn/sim/network.h	/^	size_t syn_id;$/;"	m	class:dnn::Conn
synapses	dnn/base/constants.h	/^	map<string, string> synapses;$/;"	m	struct:dnn::Constants
syns	dnn/neurons/spike_neuron.h	/^	ActVector<InterfacedPtr<SynapseBase>> syns;$/;"	m	class:dnn::SpikeNeuronBase
syslog_logger	dnn/contrib/spdlog/details/spdlog_impl.h	/^inline std::shared_ptr<spdlog::logger> spdlog::syslog_logger(const std::string& logger_name, const std::string& syslog_ident, int syslog_option)$/;"	f	class:spdlog
syslog_prio_from_level	dnn/contrib/spdlog/sinks/syslog_sink.h	/^    int syslog_prio_from_level(const details::log_msg &msg) const$/;"	f	class:spdlog::sinks::syslog_sink
syslog_sink	dnn/contrib/spdlog/sinks/syslog_sink.h	/^    syslog_sink(const std::string& ident = "", int syslog_option=0, int syslog_facility=LOG_USER):$/;"	f	class:spdlog::sinks::syslog_sink
syslog_sink	dnn/contrib/spdlog/sinks/syslog_sink.h	/^class syslog_sink : public sink$/;"	c	namespace:spdlog::sinks
t	dnn/base/base.h	/^    double t;$/;"	m	struct:dnn::SynSpike
t	dnn/base/base.h	/^    double t;$/;"	m	struct:dnn::Time
t	dnn/util/pretty_print.h	/^        const T & t;$/;"	m	struct:pretty_print::custom_delims_wrapper
t	mpl/mpl.h	/^	size_t t;$/;"	m	struct:dnn::mpl::FilterMatch
t_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class t_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
takeFunc_	dnn/contrib/rapidjson/encodedstream.h	/^    TakeFunc takeFunc_;$/;"	m	class:AutoUTFInputStream
target_rate	dnn/learning_rules/optimal_stdp.h	/^    double target_rate;$/;"	m	struct:dnn::OptimalStdpC
target_rate	dnn/weight_normalizations/sliding_ltd.h	/^    double target_rate;$/;"	m	struct:dnn::SlidingLtdC
target_rate_factor	dnn/learning_rules/optimal_stdp.h	/^    double target_rate_factor;$/;"	m	struct:dnn::OptimalStdpC
tau_adapt	dnn/neurons/adapt_integrate_and_fire.h	/^    double tau_adapt;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
tau_adapt	dnn/neurons/srm_neuron.h	/^    double tau_adapt;$/;"	m	struct:dnn::SRMNeuronC
tau_c	dnn/learning_rules/optimal_stdp.h	/^    double tau_c;$/;"	m	struct:dnn::OptimalStdpC
tau_d	dnn/synapses/std_synapse.h	/^    double tau_d;$/;"	m	struct:dnn::STDSynapseC
tau_m	dnn/neurons/adapt_integrate_and_fire.h	/^    double tau_m;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
tau_m	dnn/neurons/leaky_integrate_and_fire.h	/^    double tau_m;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
tau_mean	dnn/learning_rules/optimal_stdp.h	/^    double tau_mean;$/;"	m	struct:dnn::OptimalStdpC
tau_mean	dnn/weight_normalizations/sliding_ltd.h	/^    double tau_mean;$/;"	m	struct:dnn::SlidingLtdC
tau_mi_stat	dnn/learning_rules/optimal_stdp.h	/^    double tau_mi_stat;$/;"	m	struct:dnn::OptimalStdpC
tau_minus	dnn/learning_rules/stdp.h	/^    double tau_minus;$/;"	m	struct:dnn::StdpC
tau_minus	dnn/learning_rules/stdp_time.h	/^    double tau_minus;$/;"	m	struct:dnn::StdpTimeC
tau_minus	dnn/learning_rules/triple_stdp.h	/^    double tau_minus;$/;"	m	struct:dnn::TripleStdpC
tau_plus	dnn/learning_rules/stdp.h	/^    double tau_plus;$/;"	m	struct:dnn::StdpC
tau_plus	dnn/learning_rules/stdp_time.h	/^    double tau_plus;$/;"	m	struct:dnn::StdpTimeC
tau_plus	dnn/learning_rules/triple_stdp.h	/^    double tau_plus;$/;"	m	struct:dnn::TripleStdpC
tau_ref	dnn/neurons/adapt_integrate_and_fire.h	/^    double tau_ref;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
tau_ref	dnn/neurons/leaky_integrate_and_fire.h	/^    double tau_ref;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
tau_refr	dnn/neurons/srm_neuron.h	/^    double tau_refr;$/;"	m	struct:dnn::SRMNeuronC
tau_y	dnn/learning_rules/triple_stdp.h	/^    double tau_y;$/;"	m	struct:dnn::TripleStdpC
tchar	dnn/contrib/spdlog/common.h	/^typedef char tchar;$/;"	t
tchar	dnn/contrib/spdlog/common.h	/^typedef wchar_t tchar;$/;"	t
tee	spikework/io_processor.h	/^    bool tee;$/;"	m	class:dnn::IOProcessor
text	spikework/gram.h	/^    bool text;$/;"	m	class:dnn::GramProcessor
textRepr	dnn/util/matrix.h	/^    void textRepr(ostream &o) {$/;"	f	class:dnn::DoubleMatrix
thread_id	dnn/contrib/spdlog/details/async_log_helper.h	/^        size_t thread_id;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
thread_id	dnn/contrib/spdlog/details/log_msg.h	/^    size_t thread_id;$/;"	m	struct:spdlog::details::log_msg
thread_id	dnn/contrib/spdlog/details/os.h	/^inline size_t thread_id()$/;"	f	namespace:spdlog::details::os
threshold	dnn/act_functions/exp_threshold.h	/^    double threshold;$/;"	m	struct:dnn::ExpThresholdC
threshold	mpl/mpl.h	/^	double threshold;$/;"	m	struct:dnn::mpl::MatchingPursuitConfig
throw_if_bad_worker	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::throw_if_bad_worker()$/;"	f	class:spdlog::details::async_log_helper
time	dnn/contrib/spdlog/details/async_log_helper.h	/^        log_clock::time_point time;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
time	dnn/contrib/spdlog/details/log_msg.h	/^    log_clock::time_point time;$/;"	m	struct:spdlog::details::log_msg
tmpbuf	dnn/contrib/kiss_fft/kiss_fftnd.c	/^    kiss_fft_cpx * tmpbuf; \/*buffer capable of hold the entire input *\/$/;"	m	struct:kiss_fftnd_state	file:
tmpbuf	dnn/contrib/kiss_fft/kiss_fftndr.c	/^    void * tmpbuf;$/;"	m	struct:kiss_fftndr_state	file:
tmpbuf	dnn/contrib/kiss_fft/kiss_fftr.c	/^    kiss_fft_cpx * tmpbuf;$/;"	m	struct:kiss_fftr_state	file:
to	dnn/util/distributions.h	/^    double to;$/;"	m	class:dnn::UniformDistribution
to	dnn/util/util.h	/^    size_t to;$/;"	m	struct:dnn::IndexSlice
to12h	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^static int to12h(const tm& t)$/;"	f	namespace:spdlog::details
to_short_str	dnn/contrib/spdlog/common.h	/^inline const char* to_short_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level
to_str	dnn/contrib/spdlog/common.h	/^inline const char* to_str(spdlog::level::level_enum l)$/;"	f	namespace:spdlog::level
to_string	dnn/contrib/spdlog/details/format.h	/^    std::basic_string<Char> to_string() const {$/;"	f	class:fmt::BasicStringRef
topspare	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t topspare     = opbits;$/;"	m	namespace:pcg_detail
trace	dnn/contrib/spdlog/common.h	/^    trace    = 0,$/;"	e	enum:spdlog::level::__anon23
trace	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::trace()$/;"	f	class:spdlog::logger
trace	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::trace(const T& msg)$/;"	f	class:spdlog::logger
trace	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::trace(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^bitcount_t trailingzeros(const uint_x4<U,V>& v)$/;"	f	namespace:pcg_extras
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t trailingzeros(uint32_t v)$/;"	f	namespace:pcg_extras
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t trailingzeros(uint64_t v)$/;"	f	namespace:pcg_extras
traits	dnn/contrib/kiss_fft/kissfft.hh	/^struct traits$/;"	s	namespace:kissfft_utils
traits_type	dnn/contrib/kiss_fft/kissfft.hh	/^        typedef T_traits traits_type;$/;"	t	class:kissfft
transform	dnn/contrib/kiss_fft/kissfft.hh	/^        void transform(const cpx_type * src , cpx_type * dst)$/;"	f	class:kissfft
treshold	dnn/act_functions/determ.h	/^    double treshold;$/;"	m	struct:dnn::DetermC
trim	dnn/util/util.cpp	/^void trim(string &str, string symbols) {$/;"	f	namespace:dnn
trimC	dnn/util/util.cpp	/^string trimC(const string &str, string symbols) {$/;"	f	namespace:dnn
try_lock	dnn/contrib/spdlog/details/null_mutex.h	/^    bool try_lock()$/;"	f	struct:spdlog::details::null_mutex
ts	dnn/inputs/input_time_series.h	/^    InterfacedPtr<TimeSeries> ts;$/;"	m	class:dnn::InputTimeSeries
ts_id	shapelets/projection.h	/^    size_t ts_id;$/;"	m	struct:dnn::shapelets::Projection
ts_info	dnn/util/spikes_list.h	/^	TimeSeriesInfo ts_info;$/;"	m	struct:dnn::SpikesList
ts_set	shapelets/dataset.h	/^    vector<Ptr<TimeSeries>> ts_set;$/;"	m	class:dnn::shapelets::Dataset
tstring	dnn/contrib/spdlog/common.h	/^typedef std::string tstring;$/;"	t
tstring	dnn/contrib/spdlog/common.h	/^typedef std::wstring tstring;$/;"	t
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type & c, ostream_type & stream, Int<N>)$/;"	f	struct:pretty_print::print_container_helper::printer
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type & c, ostream_type & stream,$/;"	f	struct:pretty_print::print_container_helper::printer
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type &, ostream_type &, Int<sizeof...(Args)>)$/;"	f	struct:pretty_print::print_container_helper::printer
turnOn	dnn/util/statistics.h	/^	void turnOn() {$/;"	f	class:dnn::Statistics
turnOnStatistics	dnn/sim/builder.h	/^	static void turnOnStatistics(vector<InterfacedPtr<SpikeNeuronBase>> &neurons, const vector<size_t> &ids) {$/;"	f	class:dnn::Builder
turnOnStatistics	dnn/sim/sim.cpp	/^void Sim::turnOnStatistics() {$/;"	f	class:dnn::Sim
twiddle	dnn/contrib/kiss_fft/kissfft.hh	/^    const cpx_type twiddle(int i) { return _twiddles[i]; }$/;"	f	struct:kissfft_utils::traits
twiddles	dnn/contrib/kiss_fft/_kiss_fft_guts.h	/^    kiss_fft_cpx twiddles[1];$/;"	m	struct:kiss_fft_state
txt	dnn/contrib/spdlog/details/async_log_helper.h	/^        std::string txt;$/;"	m	struct:spdlog::details::async_log_helper::async_msg
type	dnn/contrib/spdlog/details/format.h	/^    Type type;$/;"	m	struct:fmt::internal::Arg
type	dnn/contrib/spdlog/details/format.h	/^    char type() const {$/;"	f	struct:fmt::AlignTypeSpec
type	dnn/contrib/spdlog/details/format.h	/^    char type() const {$/;"	f	struct:fmt::FormatSpec
type	dnn/contrib/spdlog/details/format.h	/^    char type() const {$/;"	f	struct:fmt::TypeSpec
type	dnn/contrib/spdlog/details/format.h	/^    internal::Arg::Type type(unsigned index) const {$/;"	f	class:fmt::ArgList
type	dnn/contrib/spdlog/details/format.h	/^    static uint64_t type(const NamedArg<Char_> &) {$/;"	f	class:fmt::internal::MakeValue
type	dnn/contrib/spdlog/details/format.h	/^    static uint64_t type(const T &) {$/;"	f	class:fmt::internal::MakeValue
type	dnn/contrib/spdlog/details/format.h	/^    static uint64_t type(long) {$/;"	f	class:fmt::internal::MakeValue
type	dnn/contrib/spdlog/details/format.h	/^    static uint64_t type(unsigned long) {$/;"	f	class:fmt::internal::MakeValue
type	dnn/contrib/spdlog/details/format.h	/^    static uint64_t type(wchar_t) {$/;"	f	class:fmt::internal::MakeValue
type	dnn/contrib/spdlog/details/format.h	/^    typedef F type;$/;"	t	struct:fmt::internal::Conditional
type	dnn/contrib/spdlog/details/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::Conditional
type	dnn/contrib/spdlog/details/format.h	/^    typedef T type;$/;"	t	struct:fmt::internal::EnableIf
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate0 type;$/;"	t	class:fastdelegate::FastDelegate0
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate1 type;$/;"	t	class:fastdelegate::FastDelegate1
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate2 type;$/;"	t	class:fastdelegate::FastDelegate2
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate3 type;$/;"	t	class:fastdelegate::FastDelegate3
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate4 type;$/;"	t	class:fastdelegate::FastDelegate4
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate5 type;$/;"	t	class:fastdelegate::FastDelegate5
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate6 type;$/;"	t	class:fastdelegate::FastDelegate6
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate7 type;$/;"	t	class:fastdelegate::FastDelegate7
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate8 type;$/;"	t	class:fastdelegate::FastDelegate8
type	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid { typedef T type; };$/;"	t	struct:fastdelegate::detail::DefaultVoidToVoid
type	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid<DefaultVoid> {	typedef void type; };$/;"	t	struct:fastdelegate::detail::DefaultVoidToVoid
type	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid { typedef T type; };$/;"	t	struct:fastdelegate::detail::VoidToDefaultVoid
type	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid<void> { typedef DefaultVoid type; };$/;"	t	struct:fastdelegate::detail::VoidToDefaultVoid
type_	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFInputStream
type_	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFOutputStream
type_	dnn/contrib/spdlog/details/format.cc	/^    wchar_t type_;$/;"	m	class:fmt::__anon32::ArgConverter	file:
type_	dnn/contrib/spdlog/details/format.h	/^    char type_;$/;"	m	struct:fmt::FormatSpec
typemap	dnn/base/factory.cpp	/^Factory::entity_map_type Factory::typemap;$/;"	m	class:dnn::Factory	file:
typemap	dnn/base/factory.h	/^    static entity_map_type typemap;$/;"	m	class:dnn::Factory
types_	dnn/contrib/spdlog/details/format.h	/^    uint64_t types_;$/;"	m	class:fmt::ArgList
u	dnn/contrib/rapidjson/document.h	/^            unsigned u;$/;"	m	struct:GenericValue::Number::U
u	dnn/contrib/rapidjson/document.h	/^        }u;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::U
u	dnn/contrib/rapidjson/internal/ieee754.h	/^        uint64_t u;$/;"	m	union:internal::Double::__anon9
u	dnn/neurons/adapt_integrate_and_fire.h	/^    double u;$/;"	m	struct:dnn::AdaptIntegrateAndFireState
u	dnn/neurons/leaky_integrate_and_fire.h	/^    double u;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
u	dnn/neurons/srm_neuron.h	/^    double u;  $/;"	m	struct:dnn::SRMNeuronState
u32toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* u32toa(uint32_t value, char* buffer) {$/;"	f	namespace:internal
u64	dnn/contrib/rapidjson/document.h	/^        uint64_t u64;$/;"	m	union:GenericValue::Number
u64toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* u64toa(uint64_t value, char* buffer) {$/;"	f	namespace:internal
u_rest	dnn/neurons/srm_neuron.h	/^    double u_rest;$/;"	m	struct:dnn::SRMNeuronC
uint16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uint_value	dnn/contrib/spdlog/details/format.h	/^        unsigned uint_value;$/;"	m	union:fmt::internal::Value::__anon25
uint_x4	dnn/util/random/pcg_uint128.hpp	/^    constexpr uint_x4(UInt v3, UInt v2, UInt v1, UInt v0)$/;"	f	class:pcg_extras::uint_x4
uint_x4	dnn/util/random/pcg_uint128.hpp	/^    constexpr uint_x4(UIntX2 v23, UIntX2 v01)$/;"	f	class:pcg_extras::uint_x4
uint_x4	dnn/util/random/pcg_uint128.hpp	/^class uint_x4 {$/;"	c	namespace:pcg_extras
uintmax_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
ulong_long_value	dnn/contrib/spdlog/details/format.h	/^        ULongLong ulong_long_value;$/;"	m	union:fmt::internal::Value::__anon25
uneven_copy	dnn/util/random/pcg_extras.hpp	/^inline SrcIter uneven_copy(SrcIter src_first,$/;"	f	namespace:pcg_extras
uneven_copy_impl	dnn/util/random/pcg_extras.hpp	/^SrcIter uneven_copy_impl($/;"	f	namespace:pcg_extras
uniqueLabels	dnn/util/matrix.h	/^    const vector<string>& uniqueLabels() {$/;"	f	class:dnn::DoubleMatrix
unique_labels	dnn/util/matrix.h	/^    vector<string> unique_labels;$/;"	m	class:dnn::DoubleMatrix
unique_labels	dnn/util/time_series.h	/^	vector<string> unique_labels;$/;"	m	struct:dnn::TimeSeriesInfo
unique_stream	dnn/util/random/pcg_random.hpp	/^class unique_stream {$/;"	c	namespace:pcg_detail
unlock	dnn/contrib/spdlog/details/null_mutex.h	/^    void unlock() {}$/;"	f	struct:spdlog::details::null_mutex
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate0::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate1::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate2::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate3::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate4::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate5::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate6::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate7::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate8::SafeBoolStruct
unxorshift	dnn/util/random/pcg_extras.hpp	/^inline itype unxorshift(itype x, bitcount_t bits, bitcount_t shift)$/;"	f	namespace:pcg_extras
upper_power_of_two	dnn/util/util.cpp	/^unsigned long upper_power_of_two(unsigned long v) {$/;"	f	namespace:dnn
usage	spikework/conv.cpp	/^void ConvProcessor::usage() {$/;"	f	class:dnn::ConvProcessor
usage	spikework/fft.cpp	/^void FFTProcessor::usage() {$/;"	f	class:dnn::FFTProcessor
usage	spikework/gram.cpp	/^void GramProcessor::usage() {$/;"	f	class:dnn::GramProcessor
usage	spikework/io_processor.cpp	/^void IOProcessor::usage() {$/;"	f	class:dnn::IOProcessor
usage	spikework/kernel.cpp	/^void EpspKernel::usage() {$/;"	f	class:dnn::EpspKernel
usage	spikework/kernel.cpp	/^void KernelProcessor::usage() {$/;"	f	class:dnn::KernelProcessor
usage	spikework/read.cpp	/^void ReadProcessor::usage() {$/;"	f	class:dnn::ReadProcessor
usage	tools/dnn_sim/dnn_sim.cpp	/^const char * usage = R"USAGE($/;"	v
usage	tools/dumptool/dumptool.cpp	/^const char * usage = R"USAGE($/;"	v
usage	tools/mpl/mpl_main.cpp	/^const char * usage = R"USAGE($/;"	v
usage	tools/shapelets/shapelets.cpp	/^const char * usage = R"USAGE($/;"	v
userBuffer_	dnn/contrib/rapidjson/allocators.h	/^    void *userBuffer_;          \/\/!< User supplied buffer.$/;"	m	class:MemoryPoolAllocator
ustring	dnn/contrib/spdlog/details/format.h	/^        StringValue<unsigned char> ustring;$/;"	m	union:fmt::internal::Value::__anon25
utc_minutes_offset	dnn/contrib/spdlog/details/os.h	/^inline int utc_minutes_offset(const std::tm& tm = details::os::localtime())$/;"	f	namespace:spdlog::details::os
v0	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v01	dnn/util/random/pcg_uint128.hpp	/^            UIntX2 v01, v23;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon3
v1	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v2	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v23	dnn/util/random/pcg_uint128.hpp	/^            UIntX2 v01, v23;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon3
v2dil	dnn/util/fastapprox/sse.h	59;"	d
v3	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v4sf	dnn/util/fastapprox/sse.h	/^typedef __m128 v4sf;$/;"	t	namespace:__anon4
v4sf_fabs	dnn/util/fastapprox/sse.h	76;"	d
v4sf_index	dnn/util/fastapprox/sse.h	63;"	d
v4sf_to_v4si	dnn/util/fastapprox/sse.h	56;"	d
v4sfindexer	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	t	namespace:__anon4	typeref:union:__anon4::__anon5
v4sfl	dnn/util/fastapprox/sse.h	58;"	d
v4sfv4sipun	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	t	namespace:__anon4	typeref:union:__anon4::__anon7
v4si	dnn/util/fastapprox/sse.h	/^typedef __m128i v4si;$/;"	t	namespace:__anon4
v4si_index	dnn/util/fastapprox/sse.h	69;"	d
v4si_to_v4sf	dnn/util/fastapprox/sse.h	55;"	d
v4siindexer	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	t	namespace:__anon4	typeref:union:__anon4::__anon6
v4sil	dnn/util/fastapprox/sse.h	60;"	d
vK	dnn/neurons/adapt_integrate_and_fire.h	/^    double vK;$/;"	m	struct:dnn::AdaptIntegrateAndFireC
v_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class v_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
value	dnn/contrib/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> value;    \/\/!< value of member.$/;"	m	struct:GenericMember
value	dnn/contrib/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	e	enum:STATIC_ASSERTION_FAILURE::__anon19
value	dnn/contrib/spdlog/details/format.h	/^        const Char *value;$/;"	m	struct:fmt::internal::Value::StringValue
value	dnn/contrib/spdlog/details/format.h	/^        const void *value;$/;"	m	struct:fmt::internal::Value::CustomValue
value	dnn/contrib/spdlog/details/format.h	/^    T value() const {$/;"	f	class:fmt::IntFormatSpec
value	dnn/contrib/spdlog/details/format.h	/^    enum { value = (sizeof(check(get())) == sizeof(yes)) };$/;"	e	enum:fmt::internal::IsConvertibleToInt::__anon26
value	dnn/util/pretty_print.h	/^            static const bool value = sizeof(test<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_const_iterator
value	dnn/util/random/pcg_extras.hpp	/^    static constexpr IntType value = fnv(IntType(2166136261U ^ sizeof(IntType)),$/;"	m	struct:pcg_extras::static_arbitrary_seed
valueCount	dnn/contrib/rapidjson/writer.h	/^        size_t valueCount;  \/\/!< number of values in this level$/;"	m	struct:Writer::Level
value_	dnn/contrib/spdlog/details/format.h	/^    T value_;$/;"	m	class:fmt::IntFormatSpec
value_type	dnn/util/pretty_print.h	/^        typedef T value_type;$/;"	t	struct:pretty_print::array_wrapper_n
values	dnn/util/matrix.h	/^	vector<double> values;$/;"	m	class:dnn::DoubleMatrix
values	dnn/util/pretty_print.h	/^        static const type values; $/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::multiset<T, TComp, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::set<T, TComp, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::set<T, TComp, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> const delimiters_values<char> delimiters<std::tuple<Args...>, char>::values = { "(", ", ", ")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> const delimiters_values<wchar_t> delimiters< ::std::tuple<Args...>, wchar_t>::values = { L"(", L", ", L")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters< ::std::tuple<Args...>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters<std::tuple<Args...>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> const delimiters_values<char> delimiters<std::pair<T1, T2>, char>::values = { "(", ", ", ")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> const delimiters_values<wchar_t> delimiters< ::std::pair<T1, T2>, wchar_t>::values = { L"(", L", ", L")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters<std::pair<T1, T2>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> const delimiters_values<char> delimiters<T, char>::values = { "[", ", ", "]" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> const delimiters_values<wchar_t> delimiters<T, wchar_t>::values = { L"[", L", ", L"]" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/spikes_list.h	/^	vector<double> values;$/;"	m	struct:dnn::SpikesSequence
values	dnn/util/statistics.h	/^	vector<double> values;$/;"	m	struct:dnn::Stat
values	dnn/util/time_series.h	/^	vector<complex<double>> values;$/;"	m	struct:dnn::TimeSeriesComplexData
values	dnn/util/time_series.h	/^	vector<double> values;$/;"	m	struct:dnn::TimeSeriesData
values_	dnn/contrib/spdlog/details/format.h	/^        const internal::Value *values_;$/;"	m	union:fmt::ArgList::__anon27
vfastcos	dnn/util/fastapprox/fasttrig.h	/^vfastcos (const v4sf x)$/;"	f
vfastcosfull	dnn/util/fastapprox/fasttrig.h	/^vfastcosfull (const v4sf x)$/;"	f
vfastercos	dnn/util/fastapprox/fasttrig.h	/^vfastercos (v4sf x)$/;"	f
vfastercosfull	dnn/util/fastapprox/fasttrig.h	/^vfastercosfull (const v4sf x)$/;"	f
vfasterexp	dnn/util/fastapprox/fastexp.h	/^vfasterexp (const v4sf p)$/;"	f
vfasterlog	dnn/util/fastapprox/fastlog.h	/^vfasterlog (v4sf x)$/;"	f
vfasterlog2	dnn/util/fastapprox/fastlog.h	/^vfasterlog2 (v4sf x)$/;"	f
vfasterpow	dnn/util/fastapprox/fastpow.h	/^vfasterpow (const v4sf x,$/;"	f
vfasterpow2	dnn/util/fastapprox/fastexp.h	/^vfasterpow2 (const v4sf p)$/;"	f
vfastersigmoid	dnn/util/fastapprox/fastsigmoid.h	/^vfastersigmoid (const v4sf x)$/;"	f
vfastersin	dnn/util/fastapprox/fasttrig.h	/^vfastersin (const v4sf x)$/;"	f
vfastersinfull	dnn/util/fastapprox/fasttrig.h	/^vfastersinfull (const v4sf x)$/;"	f
vfastertan	dnn/util/fastapprox/fasttrig.h	/^vfastertan (const v4sf x)$/;"	f
vfastertanfull	dnn/util/fastapprox/fasttrig.h	/^vfastertanfull (const v4sf x)$/;"	f
vfastexp	dnn/util/fastapprox/fastexp.h	/^vfastexp (const v4sf p)$/;"	f
vfastlog	dnn/util/fastapprox/fastlog.h	/^vfastlog (v4sf x)$/;"	f
vfastlog2	dnn/util/fastapprox/fastlog.h	/^vfastlog2 (v4sf x)$/;"	f
vfastpow	dnn/util/fastapprox/fastpow.h	/^vfastpow (const v4sf x,$/;"	f
vfastpow2	dnn/util/fastapprox/fastexp.h	/^vfastpow2 (const v4sf p)$/;"	f
vfastsigmoid	dnn/util/fastapprox/fastsigmoid.h	/^vfastsigmoid (const v4sf x)$/;"	f
vfastsin	dnn/util/fastapprox/fasttrig.h	/^vfastsin (const v4sf x)$/;"	f
vfastsinfull	dnn/util/fastapprox/fasttrig.h	/^vfastsinfull (const v4sf x)$/;"	f
vfasttan	dnn/util/fastapprox/fasttrig.h	/^vfasttan (const v4sf x)$/;"	f
vfasttanfull	dnn/util/fastapprox/fasttrig.h	/^vfasttanfull (const v4sf x)$/;"	f
visit	dnn/contrib/spdlog/details/format.h	/^    Result visit(const Arg &arg) {$/;"	f	class:fmt::internal::ArgVisitor
visit_any_double	dnn/contrib/spdlog/details/format.cc	/^    void visit_any_double(T value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_any_double	dnn/contrib/spdlog/details/format.h	/^    Result visit_any_double(T) {$/;"	f	class:fmt::internal::ArgVisitor
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    bool visit_any_int(T value) {$/;"	f	class:fmt::__anon32::IsZeroInt
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    int visit_any_int(T value) {$/;"	f	class:fmt::__anon32::PrecisionHandler
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    unsigned visit_any_int(T value) {$/;"	f	class:fmt::__anon32::WidthHandler
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    void visit_any_int(T value) {$/;"	f	class:fmt::__anon32::CharConverter
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    void visit_any_int(T value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_any_int	dnn/contrib/spdlog/details/format.cc	/^    void visit_any_int(U value) {$/;"	f	class:fmt::__anon32::ArgConverter
visit_any_int	dnn/contrib/spdlog/details/format.h	/^    Result visit_any_int(T) {$/;"	f	class:fmt::internal::ArgVisitor
visit_bool	dnn/contrib/spdlog/details/format.cc	/^    void visit_bool(bool value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_bool	dnn/contrib/spdlog/details/format.h	/^    Result visit_bool(bool value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_char	dnn/contrib/spdlog/details/format.cc	/^    void visit_char(int value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_char	dnn/contrib/spdlog/details/format.cc	/^    void visit_char(int value) {$/;"	f	class:fmt::internal::PrintfArgFormatter
visit_char	dnn/contrib/spdlog/details/format.h	/^    Result visit_char(int value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_custom	dnn/contrib/spdlog/details/format.cc	/^    void visit_custom(Arg::CustomValue c) {$/;"	f	class:fmt::internal::ArgFormatter
visit_custom	dnn/contrib/spdlog/details/format.h	/^    Result visit_custom(Arg::CustomValue) {$/;"	f	class:fmt::internal::ArgVisitor
visit_double	dnn/contrib/spdlog/details/format.h	/^    Result visit_double(double value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_int	dnn/contrib/spdlog/details/format.h	/^    Result visit_int(int value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_long_double	dnn/contrib/spdlog/details/format.h	/^    Result visit_long_double(long double value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_long_long	dnn/contrib/spdlog/details/format.h	/^    Result visit_long_long(LongLong value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_pointer	dnn/contrib/spdlog/details/format.cc	/^    void visit_pointer(const void *value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_pointer	dnn/contrib/spdlog/details/format.h	/^    Result visit_pointer(const void *) {$/;"	f	class:fmt::internal::ArgVisitor
visit_string	dnn/contrib/spdlog/details/format.cc	/^    void visit_string(Arg::StringValue<char> value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_string	dnn/contrib/spdlog/details/format.h	/^    Result visit_string(Arg::StringValue<char>) {$/;"	f	class:fmt::internal::ArgVisitor
visit_uint	dnn/contrib/spdlog/details/format.h	/^    Result visit_uint(unsigned value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_ulong_long	dnn/contrib/spdlog/details/format.h	/^    Result visit_ulong_long(ULongLong value) {$/;"	f	class:fmt::internal::ArgVisitor
visit_unhandled_arg	dnn/contrib/spdlog/details/format.h	/^    Result visit_unhandled_arg() {$/;"	f	class:fmt::internal::ArgVisitor
visit_wstring	dnn/contrib/spdlog/details/format.cc	/^    void visit_wstring(Arg::StringValue<Char> value) {$/;"	f	class:fmt::internal::BasicArgFormatter
visit_wstring	dnn/contrib/spdlog/details/format.h	/^    Result visit_wstring(Arg::StringValue<wchar_t>) {$/;"	f	class:fmt::internal::ArgVisitor
vtable_index	dnn/util/fast_delegate.h	/^	int vtable_index; \/\/ or 0 if no virtual inheritance$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
w	dnn/util/random/pcg_uint128.hpp	/^        } w;$/;"	m	union:pcg_extras::uint_x4::__anon1	typeref:struct:pcg_extras::uint_x4::__anon1::__anon2
w_max	dnn/learning_rules/stdp_time.h	/^    double w_max;$/;"	m	struct:dnn::StdpTimeC
w_min	dnn/learning_rules/stdp_time.h	/^    double w_min;$/;"	m	struct:dnn::StdpTimeC
wa	dnn/util/random/pcg_uint128.hpp	/^        UInt wa[4];$/;"	m	union:pcg_extras::uint_x4::__anon1
wait	dnn/util/barrier.h	/^    void wait()$/;"	f	class:Barrier
wait	dnn/util/spinning_barrier.h	/^    bool wait ()$/;"	f	class:dnn::SpinningBarrier
warn	dnn/contrib/spdlog/common.h	/^    warn     = 4,$/;"	e	enum:spdlog::level::__anon23
warn	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::warn()$/;"	f	class:spdlog::logger
warn	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::warn(const T& msg)$/;"	f	class:spdlog::logger
warn	dnn/contrib/spdlog/details/logger_impl.h	/^inline spdlog::details::line_logger spdlog::logger::warn(const char* fmt, const Args&... args)$/;"	f	class:spdlog::logger
wcstoimax	dnn/contrib/rapidjson/msinttypes/inttypes.h	307;"	d
wcstoumax	dnn/contrib/rapidjson/msinttypes/inttypes.h	308;"	d
weight	dnn/synapses/synapse.h	/^	double weight;$/;"	m	struct:dnn::SynapseInfo
weight	dnn/synapses/synapse.h	/^	inline const double& weight() const {$/;"	f	class:dnn::SynapseBase
weight_decay	dnn/learning_rules/optimal_stdp.h	/^    double weight_decay;$/;"	m	struct:dnn::OptimalStdpC
weight_normalization_is_set	dnn/learning_rules/learning_rule.h	/^	bool weight_normalization_is_set;$/;"	m	struct:dnn::LearningRuleInfo
weight_normalizations	dnn/base/constants.h	/^	map<string, string> weight_normalizations;$/;"	m	struct:dnn::Constants
what	dnn/base/exceptions.h	/^ 	const char * what () const throw () {$/;"	f	struct:dnn::dnnException
width	dnn/contrib/spdlog/details/format.h	/^    unsigned width() const {$/;"	f	struct:fmt::TypeSpec
width	dnn/contrib/spdlog/details/format.h	/^    unsigned width() const {$/;"	f	struct:fmt::WidthSpec
width_	dnn/contrib/spdlog/details/format.h	/^    unsigned width_;$/;"	m	struct:fmt::WidthSpec
winners_id	mpl/mpl.h	/^		vector<size_t> winners_id;$/;"	m	struct:dnn::mpl::MatchingPursuit::SubSeqRet
worker_loop	dnn/contrib/spdlog/details/async_log_helper.h	/^inline void spdlog::details::async_log_helper::worker_loop()$/;"	f	class:spdlog::details::async_log_helper
wrapped	dnn/util/random/pcg_random.hpp	/^    bool wrapped()$/;"	f	class:pcg_detail::engine
write	dnn/contrib/spdlog/details/file_helper.h	/^    void write(const log_msg& msg)$/;"	f	class:spdlog::details::file_helper
write	dnn/contrib/spdlog/details/format.h	/^    void write(BasicCStringRef<Char> format, ArgList args) {$/;"	f	class:fmt::BasicWriter
write	dnn/contrib/spdlog/details/format.h	/^    void write(BasicWriter<Char> &w, const Char *start, const Char *end) {$/;"	f	class:fmt::internal::FormatterBase
write	dnn/contrib/spdlog/details/line_logger.h	/^    void write(const char* fmt, const Args&... args)$/;"	f	class:spdlog::details::line_logger
write	dnn/contrib/spdlog/details/line_logger.h	/^    void write(const char* what)$/;"	f	class:spdlog::details::line_logger
writeBinaryMessage	dnn/io/stream.h	/^    void writeBinaryMessage(ProtoMessage mess, ostream *str) {$/;"	f	class:dnn::Stream
writeObject	dnn/io/stream.cpp	/^void Stream::writeObject(SerializableBase *b) {$/;"	f	class:dnn::Stream
write_double	dnn/contrib/spdlog/details/format.h	/^void BasicWriter<Char>::write_double($/;"	f	class:fmt::BasicWriter
write_int	dnn/contrib/spdlog/details/format.h	/^void BasicWriter<Char>::write_int(T value, Spec spec) {$/;"	f	class:fmt::BasicWriter
write_str	dnn/contrib/spdlog/details/format.cc	/^void fmt::BasicWriter<Char>::write_str($/;"	f	class:fmt::BasicWriter
write_str	dnn/contrib/spdlog/details/format.h	/^typename BasicWriter<Char>::CharPtr BasicWriter<Char>::write_str($/;"	f	class:fmt::BasicWriter
writer	dnn/contrib/spdlog/details/format.cc	/^    BasicWriter<Char> &writer() {$/;"	f	class:fmt::internal::BasicArgFormatter
writer	dnn/contrib/spdlog/details/format.h	/^    BasicWriter<Char> &writer() {$/;"	f	class:fmt::BasicFormatter
writer_	dnn/contrib/spdlog/details/format.cc	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::internal::BasicArgFormatter	file:
writer_	dnn/contrib/spdlog/details/format.h	/^    BasicWriter<Char> &writer_;$/;"	m	class:fmt::BasicFormatter
wstring	dnn/contrib/spdlog/details/format.h	/^        StringValue<wchar_t> wstring;$/;"	m	union:fmt::internal::Value::__anon25
x	dnn/learning_rules/stdp.h	/^    ActVector<double> x;$/;"	m	struct:dnn::StdpState
x	dnn/learning_rules/stdp_time.h	/^    ActVector<double> x;$/;"	m	struct:dnn::StdpTimeState
x	dnn/learning_rules/triple_stdp.h	/^    ActVector<double> x;$/;"	m	struct:dnn::TripleStdpState
xi	dnn/neurons/spike_neuron.cpp	/^const size_t& SpikeNeuronBase::xi() const {$/;"	f	class:dnn::SpikeNeuronBase
xi	dnn/neurons/spike_neuron.h	/^	size_t xi;$/;"	m	struct:dnn::SpikeNeuronInfo
xshift	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t xshift     = topspare + (xtypebits+maxrandshift)\/2;$/;"	m	namespace:pcg_detail
y	dnn/learning_rules/stdp.h	/^    double y;$/;"	m	struct:dnn::StdpState
y	dnn/learning_rules/stdp_time.h	/^    double y;$/;"	m	struct:dnn::StdpTimeState
y	dnn/learning_rules/triple_stdp.h	/^    double y;$/;"	m	struct:dnn::TripleStdpState
y	dnn/util/fast_delegate_bind.h	/^    Y * y,$/;"	m	namespace:fastdelegate
y_long	dnn/learning_rules/triple_stdp.h	/^    double y_long;$/;"	m	struct:dnn::TripleStdpState
yes	dnn/contrib/spdlog/details/format.h	/^    typedef char yes[1];$/;"	t	class:fmt::internal::IsConvertibleToInt
yi	dnn/neurons/spike_neuron.cpp	/^const size_t& SpikeNeuronBase::yi() const {$/;"	f	class:dnn::SpikeNeuronBase
yi	dnn/neurons/spike_neuron.h	/^	size_t yi;$/;"	m	struct:dnn::SpikeNeuronInfo
z_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    z_formatter() :_last_update(std::chrono::seconds(0)) {}$/;"	f	class:spdlog::details::z_formatter
z_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^class z_formatter :public flag_formatter$/;"	c	namespace:spdlog::details
zeroIn	dnn/io/stream.h	/^    IstreamInputStream *zeroIn;$/;"	m	class:dnn::Stream
zeroOut	dnn/io/stream.h	/^    OstreamOutputStream *zeroOut;$/;"	m	class:dnn::Stream
~BasicWriter	dnn/contrib/spdlog/details/format.h	/^    virtual ~BasicWriter() {}$/;"	f	class:fmt::BasicWriter
~Buffer	dnn/contrib/spdlog/details/format.h	/^    virtual ~Buffer() {}$/;"	f	class:fmt::Buffer
~ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^        ~ClearStackOnExit() { d_.ClearStack(); }$/;"	f	struct:GenericDocument::ClearStackOnExit
~ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^        ~ClearStackOnExit() { r_.ClearStack(); }$/;"	f	struct:GenericReader::ClearStackOnExit
~Dataset	shapelets/dataset.cpp	/^Dataset::~Dataset() {$/;"	f	class:dnn::shapelets::Dataset
~Factory	dnn/base/factory.cpp	/^Factory::~Factory() {$/;"	f	class:dnn::Factory
~GenericDocument	dnn/contrib/rapidjson/document.h	/^    ~GenericDocument() {$/;"	f	class:GenericDocument
~GenericValue	dnn/contrib/rapidjson/document.h	/^    ~GenericValue() {$/;"	f	class:GenericValue
~Kernel	spikework/kernel.h	/^    virtual ~Kernel() {}$/;"	f	class:dnn::Kernel
~KernelProcessor	spikework/kernel.cpp	/^KernelProcessor::~KernelProcessor() {$/;"	f	class:dnn::KernelProcessor
~MemoryBuffer	dnn/contrib/spdlog/details/format.h	/^    ~MemoryBuffer() {$/;"	f	class:fmt::internal::MemoryBuffer
~MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    ~MemoryPoolAllocator() {$/;"	f	class:MemoryPoolAllocator
~NumberStream	dnn/contrib/rapidjson/reader.h	/^        ~NumberStream() {}$/;"	f	class:GenericReader::NumberStream
~Object	dnn/base/base.h	/^    virtual ~Object() {}$/;"	f	class:dnn::Object
~Processor	spikework/processor.h	/^    virtual ~Processor() {}$/;"	f	class:dnn::Processor
~SerializableBase	dnn/io/serialize.h	/^    virtual ~SerializableBase() {$/;"	f	class:dnn::SerializableBase
~Spikework	spikework/spikework.cpp	/^Spikework::~Spikework() {$/;"	f	class:dnn::Spikework
~Stack	dnn/contrib/rapidjson/internal/stack.h	/^    ~Stack() {$/;"	f	class:internal::Stack
~Stats	shapelets/stats.cpp	/^Stats::~Stats() {$/;"	f	class:dnn::shapelets::Stats
~Stream	dnn/io/stream.h	/^    ~Stream() {$/;"	f	class:dnn::Stream
~StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    ~StreamLocalCopy() { original_ = s; }$/;"	f	class:internal::StreamLocalCopy
~async_log_helper	dnn/contrib/spdlog/details/async_log_helper.h	/^inline spdlog::details::async_log_helper::~async_log_helper()$/;"	f	class:spdlog::details::async_log_helper
~custom_delims_base	dnn/util/pretty_print.h	/^        virtual ~custom_delims_base() { }$/;"	f	struct:pretty_print::custom_delims_base
~file_helper	dnn/contrib/spdlog/details/file_helper.h	/^    ~file_helper()$/;"	f	class:spdlog::details::file_helper
~flag_formatter	dnn/contrib/spdlog/details/pattern_formatter_impl.h	/^    virtual ~flag_formatter() {}$/;"	f	class:spdlog::details::flag_formatter
~formatter	dnn/contrib/spdlog/formatter.h	/^    virtual ~formatter() {}$/;"	f	class:spdlog::formatter
~line_logger	dnn/contrib/spdlog/details/line_logger.h	/^    ~line_logger()$/;"	f	class:spdlog::details::line_logger
~mpmc_bounded_queue	dnn/contrib/spdlog/details/mpmc_bounded_q.h	/^    ~mpmc_bounded_queue()$/;"	f	class:spdlog::details::mpmc_bounded_queue
~sink	dnn/contrib/spdlog/sinks/sink.h	/^    virtual ~sink() {}$/;"	f	class:spdlog::sinks::sink
~syslog_sink	dnn/contrib/spdlog/sinks/syslog_sink.h	/^    ~syslog_sink()$/;"	f	class:spdlog::sinks::syslog_sink
