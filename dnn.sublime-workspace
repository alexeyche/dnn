{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"firi",
				"firingProbability"
			],
			[
				"fir",
				"firingProbability"
			],
			[
				"sig",
				"sigma_pos"
			],
			[
				"sigm",
				"sigma_neg"
			],
			[
				"exc_v",
				"exc_v_mut"
			],
			[
				"exc",
				"exceptions_mut"
			],
			[
				"right",
				"right_xi_circled"
			],
			[
				"left_",
				"left_xi_circled"
			],
			[
				"rig",
				"right_circled"
			],
			[
				"C",
				"C_id_it"
			],
			[
				"Fa",
				"FactoryCreationPolicy"
			],
			[
				"kern",
				"kern_res"
			],
			[
				"Ker",
				"KernelWorker"
			],
			[
				"res",
				"results"
			],
			[
				"row",
				"rowLabelsIds"
			],
			[
				"uni",
				"uniqueLabels"
			],
			[
				"data",
				"data_serial"
			],
			[
				"Kern",
				"KernelWorker"
			],
			[
				"create",
				"createObjectFactory"
			],
			[
				"arr",
				"arr_to_sort"
			],
			[
				"del",
				"delimiter"
			],
			[
				"getK",
				"getKernelPreprocessorsMap"
			],
			[
				"proc_map",
				"proc_map_type"
			],
			[
				"kerne",
				"kernel_map"
			],
			[
				"kernel_",
				"kernel_preproc_spec"
			],
			[
				"kernel",
				"kernel_map"
			],
			[
				"Rbf",
				"RbfDotKernel"
			],
			[
				"find_",
				"find_first_of"
			],
			[
				"Doub",
				"DoubleMatrix"
			],
			[
				"val",
				"values"
			],
			[
				"param",
				"param_name"
			],
			[
				"Epsp",
				"EpspKernel"
			],
			[
				"double",
				"doubleParser"
			],
			[
				"kernel_proc",
				"kernel_proc_map"
			],
			[
				"Kernel",
				"KernelFun"
			],
			[
				"IKe",
				"IKernelProcessor"
			],
			[
				"Kerne",
				"KernelBase"
			],
			[
				"Emp",
				"EmptyOptions"
			],
			[
				"conv",
				"convertMatchesToSpikes"
			],
			[
				"Spikes",
				"SpikesList"
			],
			[
				"match",
				"matches"
			],
			[
				"mem",
				"membrane"
			],
			[
				"Seri",
				"SerializableBase"
			],
			[
				"padd",
				"paddingNfft"
			],
			[
				"out",
				"out_size"
			],
			[
				"anot",
				"another_ts_di"
			],
			[
				"next",
				"next_pow2"
			],
			[
				"nff",
				"nfft_next"
			],
			[
				"spik",
				"spikework_args"
			],
			[
				"kiss",
				"kiss_fft_cpx"
			],
			[
				"kiss_fft_",
				"kiss_fft_scalar"
			],
			[
				"new_",
				"new_right_hist"
			],
			[
				"unord",
				"unordered_map"
			],
			[
				"pruned",
				"pruned_ig"
			],
			[
				"right_",
				"right_classes_hist"
			],
			[
				"max_",
				"max_further_ig"
			],
			[
				"class",
				"class_hist"
			],
			[
				"prun",
				"pruned_ig"
			],
			[
				"algo",
				"algo_stat"
			],
			[
				"best_",
				"best_split"
			],
			[
				"num",
				"numberOfPruned"
			],
			[
				"push",
				"push_back"
			],
			[
				"orde",
				"orderline"
			],
			[
				"unor",
				"unordered_map"
			],
			[
				"right_ma",
				"right_major_classes"
			],
			[
				"left_ma",
				"left_major_classes"
			],
			[
				"poor",
				"poorCache"
			],
			[
				"entrop",
				"entropy_right"
			],
			[
				"best_s",
				"best_subsequence"
			],
			[
				"Ser",
				"SerializableBase"
			],
			[
				"Seril",
				"SerializableBase"
			],
			[
				"better",
				"betterSplitStats"
			],
			[
				"dist",
				"distance"
			],
			[
				"split_po",
				"split_position"
			],
			[
				"split_",
				"split_stat"
			],
			[
				"prj",
				"projs"
			],
			[
				"Sub",
				"subsequence"
			],
			[
				"getVa",
				"getValueAt"
			],
			[
				"mean",
				"mean_prod"
			],
			[
				"cumS",
				"cumSumsSquared"
			],
			[
				"_id",
				"_id_from"
			],
			[
				"class_",
				"class_ids"
			],
			[
				"config",
				"config_file"
			],
			[
				"meaProd",
				"meanProdMatrix"
			],
			[
				"squ",
				"squaredCumulativeSums"
			],
			[
				"cum",
				"cumulativeSum"
			],
			[
				"_len",
				"_length"
			],
			[
				"cumu",
				"cumulativeSums"
			],
			[
				"curren",
				"currentTs"
			],
			[
				"sub",
				"subsequence"
			],
			[
				"refere",
				"referent"
			],
			[
				"serial",
				"serial_process"
			],
			[
				"curr",
				"currentTs"
			],
			[
				"Time",
				"TimeSeries"
			],
			[
				"TimeS",
				"TimeSeries"
			],
			[
				"time_",
				"time_series_stat"
			],
			[
				"chop",
				"chopped"
			],
			[
				"Tim",
				"TimeSeries"
			],
			[
				"read",
				"readObject"
			],
			[
				"input",
				"input_file"
			],
			[
				"struct",
				"structures"
			],
			[
				"sha",
				"shapeletsEndSize"
			],
			[
				"shap",
				"shapeletsStartSize"
			],
			[
				"Shap",
				"ShapeletsConfig"
			],
			[
				"print",
				"printNow"
			],
			[
				"spike",
				"spike_time"
			],
			[
				"mode",
				"mode_str"
			],
			[
				"dim",
				"dimenstions"
			],
			[
				"col",
				"col_labels_ids"
			],
			[
				"uniq",
				"unique_labels"
			],
			[
				"matr",
				"matrix_info"
			],
			[
				"labe",
				"labels_timeline"
			],
			[
				"row_",
				"row_labels_ids"
			],
			[
				"lab_",
				"lab_ptr"
			],
			[
				"elem",
				"elem_id"
			],
			[
				"ts",
				"ts_chopped"
			],
			[
				"gram",
				"gram_matrix"
			],
			[
				"strings",
				"stringstream"
			],
			[
				"repl",
				"repl_num"
			],
			[
				"spec",
				"specification"
			],
			[
				"TimeSer",
				"TimeSeries"
			],
			[
				"ker",
				"kernel_length"
			],
			[
				"Spike",
				"SpikesList"
			],
			[
				"filt",
				"filter"
			],
			[
				"Conv",
				"ConvProcessor"
			],
			[
				"filter",
				"filter_fname"
			],
			[
				"TimeSeriesC",
				"TimeSeriesComplexData"
			],
			[
				"dim_i",
				"dim_info"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dnn_project/dnn/neurons/adapt_integrate_and_fire.h",
			"settings":
			{
				"buffer_size": 2690,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/learning_rules/voltage_stdp.h",
			"settings":
			{
				"buffer_size": 3673,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/weight_normalizations/strict_bound.h",
			"settings":
			{
				"buffer_size": 1168,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/neurons/srm_neuron.h",
			"settings":
			{
				"buffer_size": 2076,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/util/statistics.h",
			"settings":
			{
				"buffer_size": 3228,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/neurons/spike_neuron.h",
			"settings":
			{
				"buffer_size": 6834,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dnn_project/dnn/neurons/spike_neuron.cpp",
			"settings":
			{
				"buffer_size": 5837,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 285.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Remove Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/alexeyche/prog/dnn/dnn_project",
		"/home/alexeyche/prog/dnn/dnn_project/dnn",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/R"
	],
	"file_history":
	[
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/srm_methods.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/stdp.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/util.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/srm_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/sim.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/triple_stdp.h",
		"/home/alexeyche/prog/dnn/dnn_project/system_const.json",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/factory.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/optimal_stdp.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/optimal_stdp.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/leaky_integrate_and_fire.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/voltage_stdp.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/synapses/synapse.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/learning_rule.h",
		"/home/alexeyche/prog/dnn/const.json",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/register.x",
		"/home/alexeyche/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/alexeyche/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/sim.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/builder.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/spikes_list.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/sigmoid.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/connections/difference_of_gaussians.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_neuron.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RSim.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RConstants.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/inputs/input_time_series.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/builder.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/connections/connection.h",
		"/home/alexeyche/prog/dnn/dnn_project/tools/dnn_sim/dnn_sim.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RKernel.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/interfaced_ptr.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/ptr.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/option_parser.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/global_ctx.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_sequence_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/option_parser.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/time_series.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/act_vector.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/factory.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/strict_bound.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/weight_normalization.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/sliding_ltd.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/exp_threshold.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/fastapprox/fastpow.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/pow_min_max.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/strict_bounds.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/protos/time_series.proto",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RProto.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RMpl.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/util.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RProto.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/time_series.h",
		"/home/alexeyche/prog/dnn/r_package/r_scripts/lda_test.R",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/network.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/inputs/input.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/constants.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements/input_classifier.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/reward_control.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/connections/ids_connection.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/synapses/static_synapse.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/protos/input.proto",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements/reinforcement.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RSim.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/conv.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/util.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/serialize.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/ptr.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/util.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/stream.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/stream.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/R/dataset_preparings.R",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RKernel.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/contrib/spdlog/details/logger_impl.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/spikework.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/io_worker.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/io_worker.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/log/log.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/contrib/spdlog/details/spdlog_impl.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/Makevars.in",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/shoe.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/entropy.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/rbf_dot.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/anova_dot.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/R/zzz.R",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/R/env.R",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/mod.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/constants.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/matrix.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/gammatone_fb.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/mod.h",
		"/home/alexeyche/prog/dnn/dnn_project/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/base.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/spikework.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/determ.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/protos/std_synapse.proto",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/act_function.h",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelets_algo.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelets_algo.h",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/orderline.cpp",
		"/home/alexeyche/prog/alexeyche-junk/scala/insertion_sort.scala",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/fft.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/func_param_parser.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/rbf_dot.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/func_param_parser.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel_factory.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel_factory.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/shoe.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/fastapprox/fastexp.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/anova_dot.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/entropy.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/dot.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/dot.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/epsp.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/epsp.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/worker.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/gram.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/gram.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/conv.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/fft.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/core.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/home/alexeyche/prog/dnn/r_package/Rdnn/src",
			"",
			"/home/alexeyche/prog/dnn/r_package/Rdnn/src",
			"",
			"/home/alexeyche/prog/dnn/dnn_project/shapelets",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"s.p",
			"s.u",
			"getMembranePotential",
			"u\", membranePotential());",
			"Potential",
			" \\\\",
			"\\\\",
			"\\",
			"learnin",
			"minus",
			";",
			",",
			"double",
			"minus",
			"TripleStdp",
			"Differ",
			"\\<a\\>",
			"a",
			"StaticSynapse",
			"xi",
			"right",
			"pre",
			"_colSize",
			"Can't deduce",
			"getFir",
			"add_opts",
			"no_learning",
			"no_l",
			"PowMinMax",
			"Bounds",
			"bounds",
			"SlidingLtd",
			"convertBack",
			"crea",
			"chop",
			"empla",
			"getInput",
			"getTime",
			"InputIn",
			"InputInfo",
			"\\+\\++",
			"convertBack",
			"kern_res",
			"thread",
			"set_level",
			"deque",
			"exp",
			"Got input spike",
			"reset",
			"convertToList",
			"SEXp",
			"DoubleMa",
			"dt",
			"what",
			"L_DE",
			"abs",
			"convertTo",
			"Serial",
			"Seri",
			"convertB",
			"conver",
			"treshold",
			"convertBack",
			"getDeaultLayerConf",
			"getLocalId",
			"serial",
			"createObject",
			"funDelegate",
			"name\\(",
			"name",
			"global_neuron_index",
			"setColLabel",
			"which",
			"kernel_ma",
			"RbfDot",
			"Rbf",
			"Dot",
			"const",
			"norm",
			"norma",
			"map",
			"eq_spl",
			"KernelProcessor",
			"setNo",
			"erase",
			"opts",
			"erase",
			"remove",
			"processor",
			"Preprocessor",
			"proc",
			"processor",
			"proc_map",
			"proc",
			"processors",
			"KernelOldProcessor",
			"\\<Kernel",
			"createOb",
			"convertToL",
			"conver",
			"Can't recogniz",
			"NumericMatrix",
			"wrap",
			"std::copy",
			"copy",
			"x[",
			"x\\[",
			"x",
			"setF",
			"norm",
			"x[x",
			"setNoColors",
			"FMT_HEADER_ONLY",
			"format.cc",
			"ERR",
			"Filter",
			"convertFi",
			"converFi",
			"convertBack",
			"getCachedObject",
			"createOb",
			"Error to cast",
			"error",
			"Error",
			"Error ",
			"Error cast object ",
			"MatchingPursuitConfig",
			"dnn::"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"firingProbability()",
			"membrane()",
			"getMembrane",
			"",
			"plus",
			"()",
			"",
			",",
			"plus",
			"VoltageStdp",
			"yi",
			"left",
			"post",
			"StrictBound",
			"Bound",
			"bound",
			"StrictBounds",
			"convertToR",
			"threshold",
			"Shoe",
			"Anova",
			"RbfDot",
			"Entropy",
			"KernelPreprocessor",
			"worker",
			"Processor",
			"worker",
			"work_map",
			"workers",
			"KernelProcessor",
			"KernelOld",
			"",
			"right",
			"after",
			"p.dist",
			"right",
			"New",
			"Base",
			"right",
			"",
			"right",
			"Subsequence",
			"Stats",
			"",
			"ReadProcessor",
			"values",
			"Conv",
			"TimeSeriesBase::info",
			"TimeSeriesBase::dim_info",
			"",
			"C_",
			"SRMNeuron",
			"n\\.",
			"const SpikeNeuronBase &n",
			"n.ref().",
			"ExpTheshold",
			";\n;",
			"SRMNeuron",
			"SpikeNeuronBase",
			"OptimalStdp",
			"Bike",
			"bike",
			"Bike",
			"'",
			"",
			"= m->",
			"rem_server_port",
			"td",
			"patch_stat",
			"self.args.",
			"self.args",
			"",
			"host",
			"output",
			"host",
			"output",
			"host",
			"",
			"StdpTime",
			"DifferenceOfGaussians",
			"SpikeSequenceNeuron",
			"InputFileNeuron",
			"}}",
			"{{",
			"}}",
			"{{",
			"worker",
			"InterfacedPtr<SpikeNeuronBase>",
			"InterfacedPtr2<SpikeNeuronBase>",
			"self.working_dir",
			"Stdp",
			"LearningRule",
			"out",
			"AdaptIntegrateAndFire",
			"messages->",
			"deleteCurrentMessage",
			"\\1currentMessage"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dnn_project/dnn/neurons/adapt_integrate_and_fire.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2690,
						"regions":
						{
						},
						"selection":
						[
							[
								1332,
								1332
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 578.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dnn_project/dnn/learning_rules/voltage_stdp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3673,
						"regions":
						{
						},
						"selection":
						[
							[
								2845,
								2845
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1275.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dnn_project/dnn/weight_normalizations/strict_bound.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1168,
						"regions":
						{
						},
						"selection":
						[
							[
								353,
								353
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dnn_project/dnn/neurons/srm_neuron.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2076,
						"regions":
						{
						},
						"selection":
						[
							[
								1625,
								1625
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 745.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dnn_project/dnn/util/statistics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3228,
						"regions":
						{
						},
						"selection":
						[
							[
								1656,
								1656
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 816.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dnn_project/dnn/neurons/spike_neuron.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6834,
						"regions":
						{
						},
						"selection":
						[
							[
								3336,
								3336
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1435.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "dnn_project/dnn/neurons/spike_neuron.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5837,
						"regions":
						{
						},
						"selection":
						[
							[
								846,
								846
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 184.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 118.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sbt":
	{
		"height": 0.0
	},
	"output.sbt_error":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "dnn.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"srm_",
				"dnn_project/dnn/learning_rules/srm_methods.h"
			],
			[
				"srm",
				"dnn_project/dnn/neurons/srm_neuron.h"
			],
			[
				"uti",
				"dnn_project/dnn/util/util.cpp"
			],
			[
				"stati",
				"dnn_project/dnn/util/statistics.h"
			],
			[
				"vol",
				"dnn_project/dnn/learning_rules/voltage_stdp.h"
			],
			[
				"le",
				"dnn_project/dnn/neurons/leaky_integrate_and_fire.h"
			],
			[
				"spi",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"lea",
				"dnn_project/dnn/neurons/leaky_integrate_and_fire.h"
			],
			[
				"spike_ne",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"opt",
				"dnn_project/dnn/learning_rules/optimal_stdp.cpp"
			],
			[
				"reg",
				"dnn_project/dnn/base/register.x"
			],
			[
				"fa",
				"dnn_project/dnn/base/factory.cpp"
			],
			[
				"spike_n",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"syna",
				"dnn_project/dnn/synapses/synapse.h"
			],
			[
				"std",
				"dnn_project/dnn/learning_rules/stdp.h"
			],
			[
				"diff",
				"dnn_project/dnn/connections/difference_of_gaussians.h"
			],
			[
				"sigmo",
				"dnn_project/dnn/act_functions/sigmoid.h"
			],
			[
				"spike",
				"dnn_project/dnn/util/spikes_list.h"
			],
			[
				"rco",
				"src/RConstants.h"
			],
			[
				"rsi",
				"src/RSim.cpp"
			],
			[
				"sim.c",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"bui",
				"dnn_project/dnn/sim/builder.cpp"
			],
			[
				"inpu",
				"dnn_project/dnn/inputs/input_time_series.h"
			],
			[
				"sim",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"rsim",
				"src/RSim.cpp"
			],
			[
				"conn",
				"dnn_project/dnn/connections/connection.h"
			],
			[
				"buil",
				"dnn_project/dnn/sim/builder.cpp"
			],
			[
				"leak",
				"dnn_project/dnn/neurons/leaky_integrate_and_fire.h"
			],
			[
				"sig",
				"dnn_project/dnn/act_functions/sigmoid.h"
			],
			[
				"dnns",
				"dnn_project/tools/dnn_sim/dnn_sim.cpp"
			],
			[
				"glo",
				"dnn_project/dnn/sim/global_ctx.h"
			],
			[
				"spike_se",
				"dnn_project/dnn/neurons/spike_sequence_neuron.h"
			],
			[
				"optio",
				"dnn_project/dnn/util/option_parser.h"
			],
			[
				"inter",
				"dnn_project/dnn/util/interfaced_ptr.h"
			],
			[
				"dnn_s",
				"dnn_project/tools/dnn_sim/dnn_sim.cpp"
			],
			[
				"strict",
				"dnn_project/dnn/weight_normalizations/strict_bound.h"
			],
			[
				"exp",
				"dnn_project/dnn/act_functions/exp_threshold.h"
			],
			[
				"ac",
				"dnn_project/dnn/util/act_vector.h"
			],
			[
				"fasp",
				"dnn_project/dnn/util/fastapprox/fastpow.h"
			],
			[
				"stri",
				"dnn_project/dnn/weight_normalizations/strict_bound.h"
			],
			[
				"sl",
				"dnn_project/dnn/weight_normalizations/sliding_ltd.h"
			],
			[
				"regi",
				"dnn_project/dnn/base/register.x"
			],
			[
				"pow",
				"dnn_project/dnn/weight_normalizations/pow_min_max.h"
			],
			[
				"sy",
				"dnn_project/dnn/synapses/synapse.h"
			],
			[
				"wei",
				"dnn_project/dnn/weight_normalizations/weight_normalization.h"
			],
			[
				"time",
				"dnn_project/dnn/protos/time_series.proto"
			],
			[
				"stdp",
				"dnn_project/dnn/learning_rules/stdp.h"
			],
			[
				"slii",
				"dnn_project/dnn/weight_normalizations/sliding_ltd.h"
			],
			[
				"rpro",
				"src/RProto.h"
			],
			[
				"rk",
				"src/RKernel.h"
			],
			[
				"rm",
				"src/RMpl.h"
			],
			[
				"rpr",
				"src/RProto.h"
			],
			[
				"ptr",
				"dnn_project/dnn/util/ptr.h"
			],
			[
				"tr",
				"r_scripts/lda_test.R"
			],
			[
				"sim.",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"input",
				"dnn_project/dnn/inputs/input_time_series.h"
			],
			[
				"stat",
				"dnn_project/dnn/synapses/static_synapse.h"
			],
			[
				"syn",
				"dnn_project/dnn/synapses/synapse.h"
			],
			[
				"ids",
				"dnn_project/dnn/connections/ids_connection.h"
			],
			[
				"rewa",
				"dnn_project/dnn/sim/reward_control.h"
			],
			[
				"build",
				"dnn_project/dnn/sim/builder.cpp"
			],
			[
				"net",
				"dnn_project/dnn/sim/network.h"
			],
			[
				"dnn",
				"dnn_project/tools/dnn_sim/dnn_sim.cpp"
			],
			[
				"spike_seq",
				"dnn_project/dnn/neurons/spike_sequence_neuron.h"
			],
			[
				"conv",
				"dnn_project/spikework/conv.cpp"
			],
			[
				"ker",
				"dnn_project/spikework/kernel.cpp"
			],
			[
				"ser",
				"dnn_project/dnn/io/serialize.h"
			],
			[
				"inp",
				"dnn_project/dnn/inputs/input_time_series.h"
			],
			[
				"ut",
				"dnn_project/dnn/util/util.cpp"
			],
			[
				"pt",
				"dnn_project/dnn/util/ptr.h"
			],
			[
				"spieq",
				"dnn_project/dnn/neurons/spike_sequence_neuron.h"
			],
			[
				"t",
				"dnn_project/dnn/util/time_series.cpp"
			],
			[
				"tim",
				"dnn_project/dnn/util/time_series.cpp"
			],
			[
				"ke",
				"dnn_project/spikework/kernel.cpp"
			],
			[
				"str",
				"dnn_project/dnn/io/stream.cpp"
			],
			[
				"io",
				"dnn_project/spikework/io_worker.h"
			],
			[
				"lo",
				"dnn_project/dnn/util/log/log.h"
			],
			[
				"kern",
				"dnn_project/spikework/kernel.h"
			],
			[
				"sp",
				"dnn_project/spikework/spikework.cpp"
			],
			[
				"ano",
				"dnn_project/spikework/kernels/anova_dot.cpp"
			],
			[
				"rbf",
				"dnn_project/spikework/kernels/rbf_dot.cpp"
			],
			[
				"shoe",
				"dnn_project/spikework/kernels/shoe.cpp"
			],
			[
				"make",
				"src/Makevars.in"
			],
			[
				"an",
				"dnn_project/spikework/kernels/anova_dot.cpp"
			],
			[
				"rmp",
				"src/RMpl.h"
			],
			[
				"rke",
				"src/RKernel.cpp"
			],
			[
				"rp",
				"src/RProto.h"
			],
			[
				"ma",
				"dnn_project/dnn/util/matrix.h"
			],
			[
				"mod",
				"src/mod.cpp"
			],
			[
				"ne",
				"dnn_project/dnn/sim/network.h"
			],
			[
				"",
				"src/RSim.cpp"
			],
			[
				"rs",
				"src/RSim.cpp"
			],
			[
				"fac",
				"dnn_project/dnn/base/factory.cpp"
			],
			[
				"ga",
				"dnn_project/dnn/util/gammatone_fb.h"
			],
			[
				"cons",
				"dnn_project/dnn/base/constants.h"
			],
			[
				"ba",
				"dnn_project/dnn/base/base.h"
			],
			[
				"mo",
				"src/mod.cpp"
			],
			[
				"r",
				"src/RConstants.h"
			],
			[
				"dte",
				"dnn_project/dnn/act_functions/determ.h"
			],
			[
				"spike_",
				"dnn_project/dnn/neurons/spike_neuron.cpp"
			],
			[
				"ex",
				"dnn_project/dnn/act_functions/exp_threshold.h"
			],
			[
				"base",
				"dnn_project/dnn/base/base.h"
			],
			[
				"seri",
				"dnn_project/dnn/io/serialize.h"
			],
			[
				"sha",
				"dnn_project/shapelets/shapelets_algo.cpp"
			],
			[
				"ord",
				"dnn_project/shapelets/orderline.cpp"
			],
			[
				"spa",
				"dnn_project/shapelets/shapelets_algo.cpp"
			],
			[
				"or",
				"dnn_project/shapelets/orderline.cpp"
			],
			[
				"sh",
				"dnn_project/shapelets/shapelets_algo.cpp"
			],
			[
				"fft",
				"dnn_project/spikework/fft.cpp"
			],
			[
				"fun",
				"dnn_project/dnn/util/func_param_parser.cpp"
			],
			[
				"sho",
				"dnn_project/spikework/kernels/shoe.cpp"
			],
			[
				"faste",
				"dnn_project/dnn/util/fastapprox/fastexp.h"
			],
			[
				"fas",
				"dnn_project/dnn/util/fastapprox/fastpow.h"
			],
			[
				"ep",
				"dnn_project/spikework/kernels/epsp.cpp"
			],
			[
				"dot",
				"dnn_project/spikework/kernels/dot.cpp"
			],
			[
				"do",
				"dnn_project/spikework/kernels/dot.h"
			],
			[
				"con",
				"dnn_project/spikework/conv.cpp"
			],
			[
				"gr",
				"dnn_project/spikework/gram.cpp"
			],
			[
				"gram",
				"dnn_project/spikework/gram.cpp"
			],
			[
				"core",
				"dnn_project/dnn/core.h"
			],
			[
				"log",
				"dnn_project/dnn/util/log/log.h"
			],
			[
				"act",
				"dnn_project/dnn/util/act_vector.h"
			],
			[
				"ff",
				"dnn_project/spikework/fft.h"
			],
			[
				"re",
				"dnn_project/spikework/read.h"
			],
			[
				"stre",
				"dnn_project/dnn/io/stream.cpp"
			],
			[
				"rmpl",
				"src/RMpl.h"
			],
			[
				"mpl",
				"dnn_project/tools/mpl/mpl_main.cpp"
			],
			[
				"spikes_l",
				"dnn_project/dnn/util/spikes_list.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 201.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
