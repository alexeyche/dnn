{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"input_s",
				"input_stream"
			],
			[
				"modul",
				"modulateReward"
			],
			[
				"SpikeN",
				"SpikeNeuronBase"
			],
			[
				"rein",
				"reinforce"
			],
			[
				"reinfo",
				"reinforce"
			],
			[
				"chec",
				"checkVal"
			],
			[
				"local",
				"localId"
			],
			[
				"reinfor",
				"reinforcements"
			],
			[
				"confg",
				"configureRewardControl"
			],
			[
				"seria",
				"serial_process"
			],
			[
				"output",
				"output_stream"
			],
			[
				"gath",
				"gathered_reward"
			],
			[
				"Rewa",
				"RewardControl"
			],
			[
				"tau_me",
				"tau_mean_trace"
			],
			[
				"Seri",
				"Serializable"
			],
			[
				"Spik",
				"SpikeSequenceNeuron"
			],
			[
				"getTime",
				"getInputTimeSeriesInfo"
			],
			[
				"labe",
				"labels_timeline"
			],
			[
				"TIme",
				"TimeSeries"
			],
			[
				"nam",
				"name2fname"
			],
			[
				"L_",
				"L_INFO"
			],
			[
				"TimeSeri",
				"TimeSeriesInfo"
			],
			[
				"TimeSer",
				"TimeSeriesInfo"
			],
			[
				"label",
				"labels_timeline"
			],
			[
				"defa",
				"default_const_json"
			],
			[
				"string",
				"stringify"
			],
			[
				"neuron",
				"neurons_to_listen"
			],
			[
				"sim_c",
				"sim_conf_doc"
			],
			[
				"do",
				"document"
			],
			[
				"const",
				"const_json"
			],
			[
				"clean",
				"cleanHeap"
			],
			[
				"Time",
				"TimeSeries"
			],
			[
				"lay",
				"layers"
			],
			[
				"Mem",
				"MemberEnd"
			],
			[
				"spec",
				"spec_json"
			],
			[
				"la",
				"layer_conf"
			],
			[
				"lear",
				"learning_rule"
			],
			[
				"den",
				"dendrite_delay"
			],
			[
				"Remove",
				"RemoveMember"
			],
			[
				"laye",
				"layer_conf_json"
			],
			[
				"fin",
				"FindMember"
			],
			[
				"layer_",
				"layer_spec"
			],
			[
				"layer",
				"layer_spec"
			],
			[
				"strin",
				"stringify"
			],
			[
				"Cha",
				"CharacterVector"
			],
			[
				"sec",
				"section"
			],
			[
				"simu",
				"simulation"
			],
			[
				"obj",
				"obj_name"
			],
			[
				"Fil",
				"FilterMatch"
			],
			[
				"Ma",
				"MatchingPursuitConfig"
			],
			[
				"Sp",
				"SpikeNeuronBase"
			],
			[
				"Subs",
				"Subsequence"
			],
			[
				"Sta",
				"Statistics"
			],
			[
				"mess",
				"messages"
			],
			[
				"null",
				"nullptr"
			],
			[
				"regi",
				"registerObject"
			],
			[
				"Serial",
				"SerializableBase"
			],
			[
				"Seria",
				"SerializableBase"
			],
			[
				"REG",
				"REG_FILE"
			],
			[
				"name",
				"namespace"
			],
			[
				"ded",
				"deduceType"
			],
			[
				"Fa",
				"Factory"
			],
			[
				"REG_",
				"REG_TYPE"
			],
			[
				"REG_T",
				"REG_TYPE_WITH_CONST"
			],
			[
				"del",
				"delimiter"
			],
			[
				"getK",
				"getKernelPreprocessorsMap"
			],
			[
				"Ker",
				"KernelFactory"
			],
			[
				"proc_map",
				"proc_map_type"
			],
			[
				"kerne",
				"kernel_map"
			],
			[
				"kern",
				"kernel_map"
			],
			[
				"kernel_",
				"kernel_preproc_spec"
			],
			[
				"kernel",
				"kernel_map"
			],
			[
				"Kern",
				"KernelFactory"
			],
			[
				"Rbf",
				"RbfDotKernel"
			],
			[
				"find_",
				"find_first_of"
			],
			[
				"Doub",
				"DoubleMatrix"
			],
			[
				"val",
				"values"
			],
			[
				"param",
				"param_name"
			],
			[
				"Epsp",
				"EpspKernel"
			],
			[
				"double",
				"doubleParser"
			],
			[
				"kernel_proc",
				"kernel_proc_map"
			],
			[
				"Kernel",
				"KernelFun"
			],
			[
				"IKe",
				"IKernelProcessor"
			],
			[
				"Kerne",
				"KernelBase"
			],
			[
				"Emp",
				"EmptyOptions"
			],
			[
				"conv",
				"convertMatchesToSpikes"
			],
			[
				"Spikes",
				"SpikesList"
			],
			[
				"match",
				"matches"
			],
			[
				"mem",
				"membrane"
			],
			[
				"padd",
				"paddingNfft"
			],
			[
				"out",
				"out_size"
			],
			[
				"anot",
				"another_ts_di"
			],
			[
				"next",
				"next_pow2"
			],
			[
				"nff",
				"nfft_next"
			],
			[
				"spik",
				"spikework_args"
			],
			[
				"kiss",
				"kiss_fft_cpx"
			],
			[
				"kiss_fft_",
				"kiss_fft_scalar"
			],
			[
				"new_",
				"new_right_hist"
			],
			[
				"unord",
				"unordered_map"
			],
			[
				"pruned",
				"pruned_ig"
			],
			[
				"right_",
				"right_classes_hist"
			],
			[
				"max_",
				"max_further_ig"
			],
			[
				"class",
				"class_hist"
			],
			[
				"prun",
				"pruned_ig"
			],
			[
				"algo",
				"algo_stat"
			],
			[
				"best_",
				"best_split"
			],
			[
				"num",
				"numberOfPruned"
			],
			[
				"push",
				"push_back"
			],
			[
				"orde",
				"orderline"
			],
			[
				"data",
				"dataset_entropy"
			],
			[
				"unor",
				"unordered_map"
			],
			[
				"right_ma",
				"right_major_classes"
			],
			[
				"left_ma",
				"left_major_classes"
			],
			[
				"poor",
				"poorCache"
			],
			[
				"entrop",
				"entropy_right"
			],
			[
				"best_s",
				"best_subsequence"
			],
			[
				"Ser",
				"SerializableBase"
			],
			[
				"Seril",
				"SerializableBase"
			],
			[
				"better",
				"betterSplitStats"
			],
			[
				"dist",
				"distance"
			],
			[
				"split_po",
				"split_position"
			],
			[
				"left_",
				"left_classes_hist"
			],
			[
				"split_",
				"split_stat"
			],
			[
				"prj",
				"projs"
			],
			[
				"Sub",
				"subsequence"
			],
			[
				"getVa",
				"getValueAt"
			],
			[
				"mean",
				"mean_prod"
			],
			[
				"cumS",
				"cumSumsSquared"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Packa",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/stream.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/json.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/json.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/constants.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/constants.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/register.x",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements/input_classifier.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/synapses/static_synapse.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/statistics.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/reward_control.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/builder.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/sim.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/optimal_stdp.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/builder.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/sim.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_neuron.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/stats.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements/reinforcement.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/sliding_ltd.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/weight_normalization.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/global_ctx.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/determ.h",
		"/home/alexeyche/prog/dnn/dnn_project/tools/dnn_sim/dnn_sim.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/factory.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/optimal_stdp.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/register_impl.x",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/weight_normalizations/nonlinear_min_max.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/network.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/spike_sequence_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/util.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/util.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/learning_rules/learning_rule.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/reinforcements/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/base.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/time_series.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/serialize.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/reinforcement/input_classification.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RProto.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RProto.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/const.json",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/spikes_list.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RSim.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RSim.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/inputs/input_time_series.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/leaky_integrate_and_fire.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/neurons/srm_neuron.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/option_parser.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/option_parser.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/protos/spike_sequence_neuron.proto",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/accum.h",
		"/home/alexeyche/prog/dnn/dnn_project/tools/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/subsequence.h",
		"/home/alexeyche/prog/dnn/dnn_project/tools/tests/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/tools/tests/test_constants.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/contrib/spdlog/details/format.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/ptr.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/R/zzz.R",
		"/home/alexeyche/prog/dnn/r_package/r_scripts/sim_api/fb_sim.R",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/factory.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/util.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/util.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/inputs/input.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RMpl.h",
		"/home/alexeyche/prog/dnn/dnn_project/mpl/mpl.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RcppExports.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RKernel.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/act_functions/act_function.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/mod.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RConstants.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/core.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/common.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RConstants.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/Makevars.in",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/gen_const.sh",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/protos/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/const.xdd",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/spikework.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/conv.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/deduce_type_impl.x",
		"/home/alexeyche/prog/dnn/dnn_project/mpl/mpl.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/stream.cpp",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/mod.h",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelets_algo.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/interfaced_ptr.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/io/serialize.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/mpl/mpl_register.x",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/io_worker.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/tools/mpl/mpl_main.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/tools/shapelets/shapelets.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/time_series.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelets_algo.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/subsequence.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/conv.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/fft.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/fft.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelets_config.h",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/shapelet_register.x",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/spikes_list.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/connections/connection.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/sim/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/shoe.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/spikework.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/shapelets/register.x",
		"/home/alexeyche/prog/dnn/dnn_project/tools/spikework/spikework.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/type_deducer.h",
		"/home/alexeyche/temp.x",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/base/forward_declarations.x",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/matrix.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/func_param_parser.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/rbf_dot.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/func_param_parser.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel_factory.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernel_factory.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/rbf_dot.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/io_worker.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/anova_dot.cpp",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/shoe.h",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/spikework/kernels/CMakeLists.txt",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/fastapprox/fastpow.h",
		"/home/alexeyche/prog/dnn/dnn_project/dnn/util/fastapprox/fastexp.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"",
			"/home/alexeyche/prog/dnn/r_package/Rdnn/src",
			"",
			"/home/alexeyche/prog/dnn/dnn_project/shapelets",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sim_info",
			"InputClassfier",
			"ReinforcementBase",
			"InputClassifier",
			"Null object from constants",
			"reinfo",
			"getString",
			"reinforcements",
			"NonLinearMinMax",
			"ActFunction",
			"float",
			"fill",
			"obj",
			"getCachedObject",
			"parse",
			"parseJ",
			"read",
			"SimInfo",
			"reco",
			"Can't re",
			"Can't recognize",
			"cast",
			"getVal",
			"Errors while finding field",
			"const_json",
			"replaceStr",
			"convertMatchesToSpikes",
			"createDynamic",
			"createDynamicObject",
			"convertToR",
			"destroy",
			"destroy\\(\\)",
			"destr",
			"destroy",
			"setCoordinates",
			"localId",
			"setAsIn",
			"DEBUG_LEVEL",
			"Calling inapropriate default interface function",
			"Calling inapproCalling inapropriate default interface function",
			"Calling inappro",
			"FindMember",
			"typ",
			"start_w",
			"conta",
			"Rf_isNull",
			"Rf_isNulll",
			"SetBoolean",
			"parseStr",
			"parse",
			"parseJs",
			"cptr",
			"SetString",
			"GetStr",
			"SetStr",
			"dnn::",
			"parseStr",
			"0x00",
			"string",
			"parse",
			"OptMods",
			"getHeader",
			"Trying to get header from empty messages",
			"Statistics",
			"Statist",
			"setAsInput",
			"setA",
			"ser",
			"I",
			"setA",
			"objects",
			"facto",
			"convertMatchesToSpikes",
			"conver",
			"ret",
			"convertBack",
			"conve",
			"convertBack",
			"convertFilterMatches",
			"as",
			"Facto",
			"ret",
			"Factory",
			"create",
			"writeObject",
			"readO",
			"setFi",
			"setFilter",
			"setI",
			"setWeightNormalization",
			"set",
			"setAc",
			"readOb",
			"readObj",
			"getCache",
			"buildObjectFromConstants",
			"readObject",
			"readBaseObject",
			"createObject",
			"_createObject",
			"readBaseObject",
			"createOb",
			"registr",
			"regi",
			"createObjectByName",
			"deduceType",
			"Facto",
			"shapelets_algo",
			"Fact",
			"TimeSer",
			"time_ser",
			"Fact",
			"Factory",
			"fa",
			"Factory",
			"factory",
			"Stream",
			"fact",
			"Fac",
			"INit",
			"REG_TYPE_WITH_STATE_AND_CONST",
			"enq",
			"setColLabel",
			"which",
			"kernel_ma",
			"RbfDot",
			"Rbf",
			"Dot"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"InputClassfier",
			"Reinforcement",
			"double",
			"createObject",
			"REG_TYPE_WITH_CONST_AND_STATE",
			"Shoe",
			"Anova",
			"RbfDot",
			"Entropy",
			"KernelPreprocessor",
			"worker",
			"Processor",
			"worker",
			"work_map",
			"workers",
			"KernelProcessor",
			"KernelOld",
			"",
			"right",
			"after",
			"p.dist",
			"right",
			"New",
			"Base",
			"right",
			"",
			"right",
			"Subsequence",
			"Stats",
			"",
			"ReadProcessor",
			"values",
			"Conv",
			"TimeSeriesBase::info",
			"TimeSeriesBase::dim_info",
			"",
			"C_",
			"SRMNeuron",
			"n\\.",
			"const SpikeNeuronBase &n",
			"n.ref().",
			"ExpTheshold",
			";\n;",
			"SRMNeuron",
			"SpikeNeuronBase",
			"OptimalStdp",
			"Bike",
			"bike",
			"Bike",
			"'",
			"",
			"= m->",
			"rem_server_port",
			"td",
			"patch_stat",
			"self.args.",
			"self.args",
			"",
			"host",
			"output",
			"host",
			"output",
			"host",
			"",
			"StdpTime",
			"DifferenceOfGaussians",
			"SpikeSequenceNeuron",
			"InputFileNeuron",
			"}}",
			"{{",
			"}}",
			"{{",
			"worker",
			"InterfacedPtr<SpikeNeuronBase>",
			"InterfacedPtr2<SpikeNeuronBase>",
			"self.working_dir",
			"Stdp",
			"LearningRule",
			"out",
			"AdaptIntegrateAndFire",
			"messages->",
			"deleteCurrentMessage",
			"\\1currentMessage"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 118.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sbt":
	{
		"height": 0.0
	},
	"output.sbt_error":
	{
		"height": 0.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"stati",
				"dnn_project/dnn/synapses/static_synapse.h"
			],
			[
				"sim.c",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"rew",
				"dnn_project/dnn/sim/reward_control.h"
			],
			[
				"stat",
				"dnn_project/shapelets/stats.h"
			],
			[
				"inpu",
				"dnn_project/dnn/reinforcements/input_classifier.h"
			],
			[
				"rein",
				"dnn_project/dnn/reinforcements/reinforcement.h"
			],
			[
				"spi",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"register",
				"dnn_project/dnn/base/register.x"
			],
			[
				"we",
				"dnn_project/dnn/weight_normalizations/weight_normalization.h"
			],
			[
				"regis",
				"dnn_project/dnn/base/register.x"
			],
			[
				"spik",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"sp",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"cons",
				"dnn_project/dnn/base/constants.cpp"
			],
			[
				"json",
				"dnn_project/dnn/util/json.cpp"
			],
			[
				"str",
				"dnn_project/dnn/io/stream.h"
			],
			[
				"bui",
				"dnn_project/dnn/sim/builder.cpp"
			],
			[
				"fa",
				"dnn_project/dnn/base/factory.cpp"
			],
			[
				"dnn",
				"dnn_project/tools/dnn_sim/dnn_sim.cpp"
			],
			[
				"opt",
				"dnn_project/dnn/learning_rules/optimal_stdp.h"
			],
			[
				"stai",
				"dnn_project/dnn/util/statistics.h"
			],
			[
				"sim",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"rewa",
				"dnn_project/dnn/sim/reward_control.h"
			],
			[
				"glo",
				"dnn_project/dnn/sim/global_ctx.h"
			],
			[
				"ba",
				"dnn_project/dnn/base/base.h"
			],
			[
				"le",
				"dnn_project/dnn/learning_rules/learning_rule.h"
			],
			[
				"uti",
				"dnn_project/dnn/util/util.cpp"
			],
			[
				"net",
				"dnn_project/dnn/sim/network.h"
			],
			[
				"buil",
				"dnn_project/dnn/sim/builder.h"
			],
			[
				"spike_ne",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"time",
				"dnn_project/dnn/util/time_series.h"
			],
			[
				"ser",
				"dnn_project/dnn/io/serialize.h"
			],
			[
				"spike_seq",
				"dnn_project/dnn/neurons/spike_sequence_neuron.h"
			],
			[
				"sike",
				"dnn_project/dnn/util/spikes_list.h"
			],
			[
				"stre",
				"dnn_project/dnn/io/stream.h"
			],
			[
				"ne",
				"dnn_project/dnn/sim/network.h"
			],
			[
				"spike",
				"dnn_project/dnn/util/spikes_list.h"
			],
			[
				"spike_s",
				"dnn_project/dnn/neurons/spike_sequence_neuron.h"
			],
			[
				"r",
				"src/RProto.cpp"
			],
			[
				"con",
				"dnn_project/const.json"
			],
			[
				"lea",
				"dnn_project/dnn/neurons/leaky_integrate_and_fire.h"
			],
			[
				"srm",
				"dnn_project/dnn/neurons/srm_neuron.h"
			],
			[
				"spik_s",
				"dnn_project/dnn/protos/spike_sequence_neuron.proto"
			],
			[
				"acc",
				"dnn_project/dnn/util/accum.h"
			],
			[
				"kern",
				"dnn_project/spikework/kernel.cpp"
			],
			[
				"sim.",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"sub",
				"dnn_project/shapelets/subsequence.h"
			],
			[
				"ptr",
				"dnn_project/dnn/util/ptr.h"
			],
			[
				"rsi",
				"src/RSim.cpp"
			],
			[
				"rpr",
				"src/RProto.h"
			],
			[
				"rm",
				"src/RMpl.h"
			],
			[
				"ker",
				"dnn_project/spikework/kernel.cpp"
			],
			[
				"build",
				"dnn_project/dnn/sim/builder.cpp"
			],
			[
				"base",
				"dnn_project/dnn/base/base.h"
			],
			[
				"core",
				"dnn_project/dnn/core.h"
			],
			[
				"ac",
				"dnn_project/dnn/act_functions/act_function.h"
			],
			[
				"mod",
				"src/mod.cpp"
			],
			[
				"mo",
				"src/mod.cpp"
			],
			[
				"js",
				"dnn_project/dnn/util/json.h"
			],
			[
				"rpro",
				"src/RProto.cpp"
			],
			[
				"rc",
				"src/RConstants.h"
			],
			[
				"ded",
				"dnn_project/dnn/base/deduce_type_impl.x"
			],
			[
				"mpl",
				"dnn_project/mpl/mpl.cpp"
			],
			[
				"spike_n",
				"dnn_project/dnn/neurons/spike_neuron.h"
			],
			[
				"conv",
				"dnn_project/spikework/conv.cpp"
			],
			[
				"rmpl",
				"src/RMpl.h"
			],
			[
				"mp",
				"dnn_project/mpl/mpl.cpp"
			],
			[
				"inte",
				"dnn_project/dnn/util/interfaced_ptr.h"
			],
			[
				"int",
				"dnn_project/dnn/util/interfaced_ptr.h"
			],
			[
				"strea",
				"dnn_project/dnn/io/stream.cpp"
			],
			[
				"shape",
				"dnn_project/shapelets/shapelets_algo.h"
			],
			[
				"mpl_m",
				"dnn_project/tools/mpl/mpl_main.cpp"
			],
			[
				"io_w",
				"dnn_project/spikework/io_worker.cpp"
			],
			[
				"conv.cp",
				"dnn_project/spikework/conv.cpp"
			],
			[
				"seri",
				"dnn_project/dnn/io/serialize.h"
			],
			[
				"inter",
				"dnn_project/dnn/util/interfaced_ptr.h"
			],
			[
				"interf",
				"dnn_project/dnn/util/interfaced_ptr.h"
			],
			[
				"sim.cp",
				"dnn_project/dnn/sim/sim.cpp"
			],
			[
				"fft",
				"dnn_project/spikework/fft.h"
			],
			[
				"ke",
				"dnn_project/spikework/kernel.h"
			],
			[
				"sha",
				"dnn_project/shapelets/shapelet_register.x"
			],
			[
				"shap",
				"dnn_project/shapelets/shapelets_config.h"
			],
			[
				"conn",
				"dnn_project/dnn/connections/connection.h"
			],
			[
				"spikes_l",
				"dnn_project/dnn/util/spikes_list.h"
			],
			[
				"type",
				"dnn_project/dnn/base/type_deducer.h"
			],
			[
				"reg",
				"dnn_project/dnn/base/register_impl.x"
			],
			[
				"for",
				"dnn_project/dnn/base/forward_declarations.x"
			],
			[
				"ma",
				"dnn_project/dnn/util/matrix.h"
			],
			[
				"sh",
				"dnn_project/spikework/kernels/shoe.cpp"
			],
			[
				"fun",
				"dnn_project/dnn/util/func_param_parser.cpp"
			],
			[
				"shoe",
				"dnn_project/spikework/kernels/shoe.cpp"
			],
			[
				"an",
				"dnn_project/spikework/kernels/anova_dot.cpp"
			],
			[
				"io",
				"dnn_project/spikework/io_worker.h"
			],
			[
				"sho",
				"dnn_project/spikework/kernels/shoe.cpp"
			],
			[
				"rbf",
				"dnn_project/spikework/kernels/rbf_dot.h"
			],
			[
				"faste",
				"dnn_project/dnn/util/fastapprox/fastexp.h"
			],
			[
				"fas",
				"dnn_project/dnn/util/fastapprox/fastpow.h"
			],
			[
				"ano",
				"dnn_project/spikework/kernels/anova_dot.cpp"
			],
			[
				"ep",
				"dnn_project/spikework/kernels/epsp.cpp"
			],
			[
				"dot",
				"dnn_project/spikework/kernels/dot.cpp"
			],
			[
				"do",
				"dnn_project/spikework/kernels/dot.h"
			],
			[
				"optio",
				"dnn_project/dnn/util/option_parser.cpp"
			],
			[
				"gr",
				"dnn_project/spikework/gram.cpp"
			],
			[
				"gram",
				"dnn_project/spikework/gram.cpp"
			],
			[
				"lo",
				"dnn_project/dnn/util/log/log.h"
			],
			[
				"log",
				"dnn_project/dnn/util/log/log.h"
			],
			[
				"std",
				"dnn_project/dnn/learning_rules/stdp.h"
			],
			[
				"act",
				"dnn_project/dnn/util/act_vector.h"
			],
			[
				"ff",
				"dnn_project/spikework/fft.h"
			],
			[
				"re",
				"dnn_project/spikework/read.h"
			],
			[
				"mpl_ma",
				"dnn_project/tools/mpl/mpl_main.cpp"
			],
			[
				"log.",
				"dnn_project/dnn/util/log/log.h"
			],
			[
				"comm",
				"src/common.h"
			],
			[
				"format.h",
				"dnn_project/dnn/contrib/spdlog/details/format.h"
			],
			[
				"format",
				"dnn_project/dnn/contrib/spdlog/details/format.h"
			],
			[
				"rs",
				"src/RSim.h"
			],
			[
				"rmp",
				"src/RMpl.h"
			],
			[
				"shae",
				"dnn_project/shapelets/shapelets_algo.cpp"
			],
			[
				"sio",
				"dnn_project/spikework/io_processor.cpp"
			],
			[
				"gra",
				"dnn_project/spikework/gram.cpp"
			],
			[
				"matr",
				"dnn_project/dnn/protos/matrix.proto"
			],
			[
				"mat",
				"dnn_project/dnn/protos/matrix.proto"
			],
			[
				"kiss",
				"dnn_project/dnn/contrib/kiss_fft/kiss_fftnd.h"
			],
			[
				"da",
				"dnn_project/shapelets/dataset.h"
			],
			[
				"pro",
				"dnn_project/shapelets/projection.h"
			],
			[
				"pr",
				"dnn_project/shapelets/projection.h"
			],
			[
				"di",
				"dnn_project/shapelets/dist.cpp"
			],
			[
				"data",
				"dnn_project/shapelets/dataset.h"
			],
			[
				"or",
				"dnn_project/shapelets/orderline.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 201.0,
	"status_bar_visible": true
}
