{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"push",
				"push_back"
			],
			[
				"ampl",
				"apply_amplitude"
			],
			[
				"amp",
				"amplitude"
			],
			[
				"name",
				"namespace"
			],
			[
				"inpu",
				"input_stream"
			],
			[
				"seri",
				"serial_process"
			],
			[
				"sim_",
				"sim_info"
			],
			[
				"getMe",
				"getMembranePotential"
			],
			[
				"Spike",
				"SpikeNeuronBase"
			],
			[
				"getF",
				"getFiringProbability"
			],
			[
				"conv",
				"convertBack"
			],
			[
				"Fil",
				"FilterMatch"
			],
			[
				"match",
				"matches_l"
			],
			[
				"Seri",
				"SerializableBase"
			],
			[
				"spikes",
				"spikes_file"
			],
			[
				"acc",
				"acc_error"
			],
			[
				"orig",
				"orig_val"
			],
			[
				"rest",
				"restored_ts"
			],
			[
				"res",
				"restored_ts"
			],
			[
				"dim",
				"dimension"
			],
			[
				"left",
				"left_protobin"
			],
			[
				"out",
				"output_ctx"
			],
			[
				"right",
				"right_protobin"
			],
			[
				"right_",
				"right_report"
			],
			[
				"left_",
				"left_report"
			],
			[
				"reg_",
				"reg_map_file"
			],
			[
				"uploads",
				"uploads_right"
			],
			[
				"uplo",
				"uploads_left"
			],
			[
				"down",
				"download"
			],
			[
				"job_",
				"job_logs"
			],
			[
				"Intege",
				"IntegerVector"
			],
			[
				"Num",
				"NumericVector"
			],
			[
				"upload",
				"upload_dst"
			],
			[
				"no",
				"no_split"
			],
			[
				"rep",
				"rep_txt"
			],
			[
				"proc",
				"processing_job_limit"
			],
			[
				"files",
				"files_counter"
			],
			[
				"file",
				"files_counter"
			],
			[
				"data",
				"data_dir"
			],
			[
				"geoa",
				"geoa_file"
			],
			[
				"wor",
				"working_dir"
			],
			[
				"outp",
				"output_protobin"
			],
			[
				"uploads_o",
				"uploads_output_dir"
			],
			[
				"wo",
				"working_dir"
			],
			[
				"act",
				"active_stages"
			],
			[
				"Up",
				"UploadStatus"
			],
			[
				"perf",
				"performed"
			],
			[
				"pre",
				"prepare_yt_sample"
			],
			[
				"prep",
				"prepare_samples"
			],
			[
				"sample",
				"sample_tables"
			],
			[
				"wait",
				"wait_all_uploads"
			],
			[
				"run_",
				"run_upload"
			],
			[
				"logg",
				"logging_conf"
			],
			[
				"stat",
				"staticmethod"
			],
			[
				"kwd",
				"kwdumpwork"
			],
			[
				"bin",
				"bindir"
			],
			[
				"UPLO",
				"UPLOAD_WAIT_TIMEOUT"
			],
			[
				"filter",
				"filter"
			],
			[
				"skyn",
				"skynetlibs"
			],
			[
				"noah_env",
				"noah_env_file"
			],
			[
				"noah_",
				"noah_env"
			],
			[
				"noah_en",
				"noah_env_file"
			],
			[
				"noah",
				"noah_env"
			],
			[
				"dst",
				"dst_kwworm"
			],
			[
				"sa",
				"sample_table"
			],
			[
				"sampl",
				"sample_tables"
			],
			[
				"Noa",
				"NoahStarted"
			],
			[
				"port",
				"port_shift"
			],
			[
				"op",
				"output"
			],
			[
				"yt_",
				"yt_node_exists"
			],
			[
				"add",
				"additional_args"
			],
			[
				"remove",
				"remove_yt_node"
			],
			[
				"filt",
				"filter_size"
			],
			[
				"resto",
				"restored"
			],
			[
				"set",
				"setElement"
			],
			[
				"futu",
				"futures"
			],
			[
				"fu",
				"futures"
			],
			[
				"run",
				"runOnSubSeq"
			],
			[
				"lear",
				"learning_rate"
			],
			[
				"mat",
				"matches_l"
			],
			[
				"Mat",
				"MatchingPursuit"
			],
			[
				"yt",
				"yt_dir"
			],
			[
				"cmd",
				"cmd_name"
			],
			[
				"sh",
				"shlex"
			],
			[
				"db_",
				"db_host"
			],
			[
				"db",
				"db_dir"
			],
			[
				"zodb",
				"zodb_start"
			],
			[
				"gen_",
				"gen_zodb_config"
			],
			[
				"convert",
				"convertToList"
			],
			[
				"Ma",
				"MatchingPursuit"
			],
			[
				"Tim",
				"TimeSeries"
			],
			[
				"Proc",
				"ProcessingOutput"
			],
			[
				"rem_st",
				"rem_status"
			],
			[
				"messa",
				"messages"
			],
			[
				"mess",
				"messages"
			],
			[
				"null",
				"nullptr"
			],
			[
				"pu",
				"public"
			],
			[
				"ser",
				"serial_process"
			],
			[
				"node",
				"node_names_to_ids"
			],
			[
				"out_",
				"out_nodes"
			],
			[
				"build_",
				"build_with_patch"
			],
			[
				"bs_t",
				"bs_thread_patched"
			],
			[
				"rec",
				"recurse_tag"
			],
			[
				"key",
				"key_name"
			],
			[
				"recu",
				"recurse_level"
			],
			[
				"doc",
				"doc_query"
			],
			[
				"get_",
				"get_prod_build_conf"
			],
			[
				"itera",
				"iterated_doc"
			],
			[
				"BUILD",
				"BUILD_CONF_URL"
			],
			[
				"mac",
				"macro_val"
			],
			[
				"macr",
				"macro_name"
			],
			[
				"oxygen",
				"oxygen_queries"
			],
			[
				"src_",
				"src_tables_args"
			],
			[
				"prob",
				"prob_selector"
			],
			[
				"tab",
				"table_index"
			],
			[
				"targ",
				"target_ctx"
			],
			[
				"for",
				"format"
			],
			[
				"class",
				"classmethod"
			],
			[
				"doc_d",
				"doc_dump"
			],
			[
				"tran",
				"transform_keys_to_scheme"
			],
			[
				"kwdu",
				"kwdumpwork_bin"
			],
			[
				"map",
				"map_cfg_content"
			],
			[
				"find",
				"find_dict_and_patch"
			],
			[
				"te",
				"temporary_file_name"
			],
			[
				"input",
				"input_protobin"
			],
			[
				"doc_du",
				"doc_dump_out"
			],
			[
				"keys",
				"keys_map_json"
			],
			[
				"giwi_do",
				"giwi_doc_keys_input"
			]
		]
	},
	"buffers":
	[
		{
			"file": "sources/dnn/synapses/static_synapse.h",
			"settings":
			{
				"buffer_size": 1092,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/neurons/srm_neuron.h",
			"settings":
			{
				"buffer_size": 2146,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/neurons/spike_neuron.cpp",
			"settings":
			{
				"buffer_size": 4756,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/learning_rules/srm_methods.h",
			"settings":
			{
				"buffer_size": 1344,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/util/json.cpp",
			"settings":
			{
				"buffer_size": 59,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/util/json.h",
			"settings":
			{
				"buffer_size": 6834,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 148 files for \"IsObject\" (regex, case sensitive)\n\n/home/alexeyche/prog/dnn/sources/.tags:\n  554  IsNull	dnn/contrib/rapidjson/document.h	/^    bool IsNull()   const { return flags_ == kNullFlag; }$/;\"	f	class:GenericValue\n  555  IsNumber	dnn/contrib/rapidjson/document.h	/^    bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }$/;\"	f	class:GenericValue\n  556: IsObject	dnn/contrib/rapidjson/document.h	/^    bool IsObject() const { return flags_ == kObjectFlag; }$/;\"	f	class:GenericValue\n  557  IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;\"	s	namespace:internal\n  558  IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;\"	s	namespace:internal\n  ...\n  632  MaybeAddConst	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;\"	s	namespace:internal\n  633  Member	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;\"	t	class:GenericValue\n  634: MemberBegin	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }$/;\"	f	class:GenericValue\n  635: MemberBegin	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }$/;\"	f	class:GenericValue\n  636: MemberCount	dnn/contrib/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;\"	f	class:GenericValue\n  637: MemberEnd	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }$/;\"	f	class:GenericValue\n  638: MemberEnd	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }$/;\"	f	class:GenericValue\n  639  MemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \\/\\/!< Member iterator for iterating in object.$/;\"	t	class:GenericValue\n  640  MemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;\"	t\n  ...\n  676  Object	dnn/base/base.h	/^class Object {$/;\"	c	namespace:dnn\n  677  Object	dnn/contrib/rapidjson/document.h	/^    struct Object {$/;\"	s	class:GenericValue\n  678: ObjectEmpty	dnn/contrib/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;\"	f	class:GenericValue\n  679  Offset	dnn/contrib/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;\"	f	struct:ParseResult\n  680  OptMods	dnn/base/base.h	/^typedef map<string, string> OptMods;$/;\"	t	namespace:dnn\n\n/home/alexeyche/prog/dnn/sources/.tags_sorted_by_file:\n  250  IsNull	dnn/contrib/rapidjson/document.h	/^    bool IsNull()   const { return flags_ == kNullFlag; }$/;\"	f	class:GenericValue\n  251  IsNumber	dnn/contrib/rapidjson/document.h	/^    bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }$/;\"	f	class:GenericValue\n  252: IsObject	dnn/contrib/rapidjson/document.h	/^    bool IsObject() const { return flags_ == kObjectFlag; }$/;\"	f	class:GenericValue\n  253  IsString	dnn/contrib/rapidjson/document.h	/^    bool IsString() const { return (flags_ & kStringFlag) != 0; }$/;\"	f	class:GenericValue\n  254  IsTrue	dnn/contrib/rapidjson/document.h	/^    bool IsTrue()   const { return flags_ == kTrueFlag; }$/;\"	f	class:GenericValue\n  ...\n  263  MaxSize	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \\/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;\"	e	enum:GenericValue::ShortString::__anon21\n  264  Member	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;\"	t	class:GenericValue\n  265: MemberBegin	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }$/;\"	f	class:GenericValue\n  266: MemberBegin	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }$/;\"	f	class:GenericValue\n  267: MemberCount	dnn/contrib/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;\"	f	class:GenericValue\n  268: MemberEnd	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }$/;\"	f	class:GenericValue\n  269: MemberEnd	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }$/;\"	f	class:GenericValue\n  270  MemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \\/\\/!< Member iterator for iterating in object.$/;\"	t	class:GenericValue\n  271  NonConstIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;\"	t	class:GenericMemberIterator\n  ...\n  273  Number	dnn/contrib/rapidjson/document.h	/^    union Number {$/;\"	u	class:GenericValue\n  274  Object	dnn/contrib/rapidjson/document.h	/^    struct Object {$/;\"	s	class:GenericValue\n  275: ObjectEmpty	dnn/contrib/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;\"	f	class:GenericValue\n  276  Parse	dnn/contrib/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;\"	f	class:GenericDocument\n  277  ParseInsitu	dnn/contrib/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;\"	f	class:GenericDocument\n\n/home/alexeyche/prog/dnn/sources/dnn/contrib/rapidjson/document.h:\n  762      bool IsTrue()   const { return flags_ == kTrueFlag; }\n  763      bool IsBool()   const { return (flags_ & kBoolFlag) != 0; }\n  764:     bool IsObject() const { return flags_ == kObjectFlag; }\n  765      bool IsArray()  const { return flags_ == kArrayFlag; }\n  766      bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }\n  ...\n  795  \n  796      //! Set this value as an empty object.\n  797:     /*! \\post IsObject() == true */\n  798      GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }\n  799  \n  800      //! Get the number of members in the object.\n  801:     SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }\n  802  \n  803      //! Check whether the object is empty.\n  804:     bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }\n  805  \n  806      //! Get a value from an object associated with the name.\n  807:     /*! \\pre IsObject() == true\n  808          \\tparam T Either \\c Ch or \\c const \\c Ch (template used for disambiguation with \\ref operator[](SizeType))\n  809          \\note In version 0.1x, if the member is not found, this function returns a null value. This makes issue 7.\n  ...\n  822  \n  823      //! Get a value from an object associated with the name.\n  824:     /*! \\pre IsObject() == true\n  825          \\tparam SourceAllocator Allocator of the \\c name value\n  826  \n  ...\n  845  \n  846      //! Const member iterator\n  847:     /*! \\pre IsObject() == true */\n  848:     ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }\n  849      //! Const \\em past-the-end member iterator\n  850:     /*! \\pre IsObject() == true */\n  851:     ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }\n  852      //! Member iterator\n  853:     /*! \\pre IsObject() == true */\n  854:     MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }\n  855      //! \\em Past-the-end member iterator\n  856:     /*! \\pre IsObject() == true */\n  857:     MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }\n  858  \n  859      //! Check whether a member exists in the object.\n  860      /*!\n  861          \\param name Member name to be searched.\n  862:         \\pre IsObject() == true\n  863          \\return Whether a member with that name exists.\n  864          \\note It is better to use FindMember() directly if you need the obtain the value as well.\n  ...\n  871          This version is faster because it does not need a StrLen(). It can also handle string with null character.\n  872          \\param name Member name to be searched.\n  873:         \\pre IsObject() == true\n  874          \\return Whether a member with that name exists.\n  875          \\note It is better to use FindMember() directly if you need the obtain the value as well.\n  ...\n  882      /*!\n  883          \\param name Member name to be searched.\n  884:         \\pre IsObject() == true\n  885          \\return Iterator to member, if it exists.\n  886              Otherwise returns \\ref MemberEnd().\n  ...\n  902          This version is faster because it does not need a StrLen(). It can also handle string with null character.\n  903          \\param name Member name to be searched.\n  904:         \\pre IsObject() == true\n  905          \\return Iterator to member, if it exists.\n  906              Otherwise returns \\ref MemberEnd().\n  ...\n  913      template <typename SourceAllocator>\n  914      MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {\n  915:         RAPIDJSON_ASSERT(IsObject());\n  916          RAPIDJSON_ASSERT(name.IsString());\n  917          MemberIterator member = MemberBegin();\n  ...\n  929          \\return The value itself for fluent API.\n  930          \\note The ownership of \\c name and \\c value will be transferred to this object on success.\n  931:         \\pre  IsObject() && name.IsString()\n  932          \\post name.IsNull() && value.IsNull()\n  933          \\note Amortized Constant time complexity.\n  934      */\n  935      GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {\n  936:         RAPIDJSON_ASSERT(IsObject());\n  937          RAPIDJSON_ASSERT(name.IsString());\n  938  \n  ...\n  978          \\return The value itself for fluent API.\n  979          \\note The ownership of \\c value will be transferred to this object on success.\n  980:         \\pre  IsObject()\n  981          \\post value.IsNull()\n  982          \\note Amortized Constant time complexity.\n  ...\n  992          \\param allocator    Allocator for reallocating memory. It must be the same one as used before. Commonly use GenericDocument::GetAllocator().\n  993          \\return The value itself for fluent API.\n  994:         \\pre  IsObject()\n  995          \\note This overload is needed to avoid clashes with the generic primitive type AddMember(StringRefType,T,Allocator&) overload below.\n  996          \\note Amortized Constant time complexity.\n  ...\n 1007          \\param allocator Allocator for reallocating memory. Commonly use GenericDocument::GetAllocator().\n 1008          \\return The value itself for fluent API.\n 1009:         \\pre  IsObject()\n 1010  \n 1011          \\note The source type \\c T explicitly disallows all pointer types,\n ....\n 1031      */\n 1032      void RemoveAllMembers() {\n 1033:         RAPIDJSON_ASSERT(IsObject()); \n 1034          for (MemberIterator m = MemberBegin(); m != MemberEnd(); ++m)\n 1035              m->~Member();\n ....\n 1070      */\n 1071      MemberIterator RemoveMember(MemberIterator m) {\n 1072:         RAPIDJSON_ASSERT(IsObject());\n 1073          RAPIDJSON_ASSERT(data_.o.size > 0);\n 1074          RAPIDJSON_ASSERT(data_.o.members != 0);\n ....\n 1090      //! Remove a member from an object by iterator.\n 1091      /*! \\param pos iterator to the member to remove\n 1092:         \\pre IsObject() == true && \\ref MemberBegin() <= \\c pos < \\ref MemberEnd()\n 1093          \\return Iterator following the removed element.\n 1094              If the iterator \\c pos refers to the last element, the \\ref MemberEnd() iterator is returned.\n ....\n 1104      /*! \\param first iterator to the first member to remove\n 1105          \\param last  iterator following the last member to remove\n 1106:         \\pre IsObject() == true && \\ref MemberBegin() <= \\c first <= \\c last <= \\ref MemberEnd()\n 1107          \\return Iterator following the last removed element.\n 1108          \\note This function preserves the relative order of the remaining object\n ....\n 1111      */\n 1112      MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {\n 1113:         RAPIDJSON_ASSERT(IsObject());\n 1114          RAPIDJSON_ASSERT(data_.o.size > 0);\n 1115          RAPIDJSON_ASSERT(data_.o.members != 0);\n\n/home/alexeyche/prog/dnn/sources/dnn/io/stream.cpp:\n   83  	bool has_object = false;\n   84  	for (Value::ConstMemberIterator itr = v.MemberBegin(); itr != v.MemberEnd(); ++itr) {\n   85: 		if (itr->value.IsObject()) {\n   86  			jsonReader(itr->name.GetString(), itr->value, messages);\n   87  			has_object = true;\n   ..\n  111  	}\n  112  	if (r == Text) {\n  113: 		if (!iterator->value.IsObject()) {\n  114  			throw dnnException()<< \"Fail to read \" << Json::stringify(iterator->value) << \". Expected object\\n\";\n  115  		}\n\n/home/alexeyche/prog/dnn/sources/dnn/io/stream.h:\n   39              string jstr((std::istreambuf_iterator<char>(*_input_str)), std::istreambuf_iterator<char>());\n   40              document = Json::parseString(jstr);\n   41:             assert(document.IsObject());\n   42              iterator = document.MemberBegin();\n   43          }\n\n48 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 14002,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "sources/dnn/io/stream.cpp",
			"settings":
			{
				"buffer_size": 3915,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sources/dnn/core.h",
			"settings":
			{
				"buffer_size": 1087,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Packa",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/alexeyche/prog/dnn/sources/dnn/util/json.h",
		"/home/alexeyche/prog/dnn/sources/dnn/learning_rules/stdp.h",
		"/home/alexeyche/prog/dnn/sources/dnn/learning_rules/srm_methods.h",
		"/home/alexeyche/prog/dnn/sources/dnn/base/factory.cpp",
		"/home/alexeyche/prog/dnn/sources/dnn/sim/sim.h",
		"/home/alexeyche/prog/dnn/sources/dnn/synapses/synapse.h",
		"/home/alexeyche/prog/dnn/sources/dnn/neurons/spike_neuron.h",
		"/home/alexeyche/prog/dnn/sources/dnn/learning_rules/optimal_stdp.cpp",
		"/home/alexeyche/prog/dnn/sources/dnn/connections/difference_of_gaussians.h",
		"/home/alexeyche/prog/dnn/sources/dnn/neurons/leaky_integrate_and_fire.h",
		"/home/alexeyche/prog/dnn/r_package/Rdnn/src/RProto.h",
		"/home/alexeyche/prog/dnn/sources/dnn/synapses/static_synapse.h",
		"/home/alexeyche/prog/dnn/sources/dnn/base/factory.h",
		"/home/alexeyche/prog/dnn/sources/dnn/neurons/srm_neuron.h",
		"/home/alexeyche/prog/dnn/sources/dnn/io/stream.h",
		"/home/alexeyche/prog/dnn/sources/dnn/learning_rules/optimal_stdp.h",
		"/home/alexeyche/prog/dnn/sources/dnn/sim/global_ctx.h",
		"/home/alexeyche/prog/dnn/sources/dnn/sim/global_ctx.cpp",
		"/home/alexeyche/prog/dnn/sources/dnn/util/ptr.h",
		"/home/alexeyche/prog/dnn/sources/dnn/sim/builder.h",
		"/home/alexeyche/prog/dnn/sources/tools/dnn_sim/dnn_sim.cpp",
		"/home/alexeyche/prog/dnn/sources/dnn/learning_rules/learning_rule.h",
		"/home/alexeyche/prog/dnn/sources/dnn/base/base.h",
		"/home/alexeyche/prog/dnn/sources/dnn/util/statistics.h",
		"/home/alexeyche/cpp/sources/tools/dnn_sim/dnn_sim.cpp",
		"/home/alexeyche/cpp/sources/dnn/sim/builder.h",
		"/home/alexeyche/cpp/r_package/Rdnn/src/RProto.h",
		"/home/alexeyche/cpp/sources/dnn/neurons/srm_neuron.h",
		"/home/alexeyche/cpp/sources/dnn/learning_rules/optimal_stdp.h",
		"/home/alexeyche/cpp/sources/dnn/learning_rules/stdp.h",
		"/home/alexeyche/cpp/sources/dnn/learning_rules/learning_rule.h",
		"/home/alexeyche/cpp/sources/dnn/util/ptr.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/neurons/srm_neuron.h",
		"/home/alexeyche/cpp/sources/dnn/act_functions/exp_threshold.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/neurons/neuron.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/neurons/neuron.cpp",
		"/home/alexeyche/cpp/sources/dnn/sim/sim.h",
		"/home/alexeyche/cpp/sources/dnn/util/interfaced_ptr.h",
		"/home/alexeyche/cpp/sources/dnn/neurons/spike_neuron.h",
		"/home/alexeyche/cpp/sources/dnn/learning_rules/stdp_time.h",
		"/home/alexeyche/cpp/sources/dnn/util/spikes_list.h",
		"/home/alexeyche/cpp/sources/dnn/base/constants.h",
		"/home/alexeyche/cpp/sources/dnn/util/json.h",
		"/home/alexeyche/cpp/sources/dnn/util/statistics.h",
		"/home/alexeyche/cpp/sources/dnn/protos/generated.proto",
		"/home/alexeyche/cpp/sources/dnn/neurons/leaky_integrate_and_fire.h",
		"/home/alexeyche/cpp/sources/dnn/act_functions/determ.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/act_funcs/exp_hennequin.h",
		"/home/alexeyche/cpp/sources/dnn/base/factory.cpp",
		"/home/alexeyche/cpp/sources/dnn/util/fastapprox/fastlog.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/config/constants.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/learning/srm_methods.h",
		"/home/alexeyche/cpp/sources/dnn/learning_rules/srm_methods.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/learning/optimal_stdp.h",
		"/home/alexeyche/cpp/sources/dnn/act_functions/act_function.h",
		"/home/alexeyche/cpp/sources/dnn/util/option_parser.h",
		"/home/alexeyche/cpp/sources/dnn/util/time_series.h",
		"/home/alexeyche/cpp/sources/dnn/util/matrix.h",
		"/home/alexeyche/cpp/sources/dnn/io/stream.h",
		"/home/alexeyche/cpp/sources/dnn/protos/CMakeLists.txt",
		"/home/alexeyche/cpp/sources/tools/mpl/mpl_main.cpp",
		"/home/alexeyche/cpp/sources/dnn/io/serialize.h",
		"/home/alexeyche/cpp/sources/dnn/io/stream.cpp",
		"/home/alexeyche/cpp/sources/dnn/mpl/mpl.h",
		"/home/alexeyche/cpp/r_package/Rdnn/src/RMpl.h",
		"/mnt/twalrus4/arc/local-oxy/tests/noah_test.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/oxygen_util.py",
		"/mnt/twalrus4/arc/local-oxy/core/doer.py",
		"/mnt/twalrus4/arc/local-oxy/tests/base_diff.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/master.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/noah.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/bike_handler.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/cm.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/bike.py",
		"/mnt/twalrus4/arc/local-oxy/local-oxy.py",
		"/mnt/twalrus4/arc/local-oxy/tests/noah_diff.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/tests_handlers/noah_diff_handler.py",
		"/mnt/twalrus4/arc/local-oxy/kiwi/kiwi.py",
		"/mnt/twalrus4/arc/local-oxy/util/util.py",
		"/mnt/twalrus4/arc/local-oxy/util/io.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/kiwi_handler.py",
		"/mnt/twalrus4/arc/local-oxy/core/local_oxy.py",
		"/mnt/twalrus4/arc/local-oxy/core/async.py",
		"/mnt/twalrus4/arc/local-oxy/tests/dispatcher_test.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/downloader_handler.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/tests_handlers/rollback_attr_handler.py",
		"/mnt/twalrus4/arc/local-oxy/tests/rollback_attr.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/kwworm.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/giwibranches.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/noah_handler.py",
		"/mnt/twalrus4/arc/local-oxy/tests/diff_tpl.html",
		"/mnt/twalrus4/arc/local-oxy/handlers/tests_handlers/noah_test_handler.py",
		"/mnt/twalrus4/arc/arcadia/check/robotcheck/kiwi/oxygen/dump_diff.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/noah_env.py",
		"/mnt/twalrus4/arc/local-oxy/core/errors.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/kwdumpwork.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/kwdumpwork_handler.py",
		"/mnt/twalrus4/arc/local-oxy/tests/uploads_test.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/downloader.py",
		"/mnt/twalrus4/arc/local-oxy/tests/build_shard.py",
		"/mnt/twalrus4/arc/local-oxy/oxygen/config_gen.py",
		"/mnt/twalrus4/arc/local-oxy/core/basic_config.py",
		"/home/alexeyche/cpp/sources/dnn/mpl/mpl_old.h",
		"/home/alexeyche/cpp/sources/dnn/util/util.cpp",
		"/home/alexeyche/cpp/mpl.h",
		"/home/alexeyche/cpp/sources/dnn/util/util.h",
		"/home/alexeyche/cpp/r_package/Rdnn/src/util.h",
		"/mnt/twalrus4/arc/local-oxy/core/builder.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/config_gen_handler.py",
		"/mnt/twalrus4/arc/local-oxy/handlers/tests_handlers/build_shard_handler.py",
		"/home/alexeyche/cpp/r_package/Rdnn/src/mod.cpp",
		"/home/alexeyche/cpp/r_package/Rdnn/src/mod.h",
		"/home/alexeyche/cpp/r_package/Rdnn/src/RSim.h",
		"/home/alexeyche/cpp/r_package/Rdnn/R/zzz.R",
		"/mnt/twalrus4/arc/local-oxy/oxygen/noah/conf.py",
		"/home/alexeyche/cpp/sources/tools/mpl/CMakeLists.txt",
		"/home/alexeyche/cpp/r_package/Rdnn/src/Makevars.in",
		"/home/alexeyche/cpp/r_package/Rdnn/src/RMpl.cpp",
		"/home/alexeyche/cpp/r_package/Rdnn/src/mpl.cpp",
		"/home/alexeyche/cpp/sources/dnn/io/serialize.cpp",
		"/mnt/twalrus4/arc/local-oxy/util/rem.py",
		"/mnt/twalrus4/arc/local-oxy/core/local_oxy_args.py",
		"/home/alexeyche/cpp/sources/dnn/core.h",
		"/home/alexeyche/cpp/sources/dnn/base/factory.h",
		"/home/alexeyche/prog/junk/min_ci/server/templates/tree.html",
		"/home/alexeyche/prog/junk/min_ci/humongolus/__init__.py",
		"/home/alexeyche/prog/junk/min_ci/humongolus/field.py",
		"/home/alexeyche/prog/junk/min_ci/server/static/tpl/NodeView.html"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"itera",
			"IsObject",
			"Is",
			"IsOb",
			"parseSt",
			"getRidOfComments",
			"readOb",
			"deser",
			"Sim",
			"x_",
			"SimInfo",
			"weight",
			"getFir",
			"getFi",
			"SpikeNeuronBase",
			"n->",
			"SpikeNeuronBase \\*n",
			"\n};",
			"setFired",
			"n->",
			"linkWithNeuron",
			"getRidOfComments",
			"parseSt",
			"comm",
			"setCo",
			"Stat",
			"__",
			"p_re",
			"Determ",
			"Spikes",
			"fastexp",
			"\\([.0-9]+\\)",
			"LeakyIntegrateAndFire",
			"Neuron",
			")\n",
			"getInfo",
			"Optimal",
			"Stdp",
			"spikes_f",
			"ts_in",
			"clean",
			"spikes",
			"filter_file",
			"restored",
			"dim\\.",
			"dim",
			"dim.",
			"dim",
			"err",
			"accum",
			"accu",
			"setp",
			"link",
			"start_distribution",
			"distr",
			"status_answer",
			"distr",
			"deploy_release_step",
			"deployPackage",
			"Noah",
			"noah",
			"Noah",
			"open_fd",
			"write",
			"waitMe",
			"\"",
			"apply",
			"json.dump",
			"random",
			"port_sh",
			"interr",
			"repor\n\nrepo",
			"repor\n\n",
			"get_uploads_names",
			"froma",
			"background_processes",
			"interrupted",
			"yt_find",
			"uploads_status",
			"wait_all_uploads",
			"uploads_test_root",
			"waiting_for_stage",
			"ATTEMPT",
			"sample_table",
			"skynetlibs",
			"python",
			"noah_env",
			"rem_server",
			"bin",
			"json.dump",
			"noah_env",
			"r",
			"viewer_por",
			"getNor",
			"seed",
			"__accu",
			"__acuu",
			"__acc",
			"env",
			"ti",
			"from",
			"x_start",
			"dispatchOnThreads",
			"get_oxygen_cfg",
			"config",
			"pkg",
			"self.",
			"scripts_dir",
			"\"\"",
			"self.",
			"zodb_server_conf",
			"20001",
			"20000",
			"= ",
			"readOb",
			"getSer",
			"self.server_port",
			"rem_dir",
			"readObject",
			"jsonR",
			"urlto",
			"URLTO",
			"tempo",
			"exc",
			"uploads_tables",
			"find_handlers",
			"find_han",
			"handler"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"C_",
			"SRMNeuron",
			"n\\.",
			"const SpikeNeuronBase &n",
			"n.ref().",
			"ExpTheshold",
			";\n;",
			"SRMNeuron",
			"SpikeNeuronBase",
			"OptimalStdp",
			"Bike",
			"bike",
			"Bike",
			"'",
			"",
			"= m->",
			"rem_server_port",
			"td",
			"patch_stat",
			"self.args.",
			"self.args",
			"",
			"host",
			"output",
			"host",
			"output",
			"host",
			"",
			"StdpTime",
			"DifferenceOfGaussians",
			"SpikeSequenceNeuron",
			"InputFileNeuron",
			"}}",
			"{{",
			"}}",
			"{{",
			"worker",
			"InterfacedPtr<SpikeNeuronBase>",
			"InterfacedPtr2<SpikeNeuronBase>",
			"self.working_dir",
			"Stdp",
			"LearningRule",
			"out",
			"AdaptIntegrateAndFire",
			"messages->",
			"deleteCurrentMessage",
			"\\1currentMessage"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "sources/dnn/synapses/static_synapse.h",
					"settings":
					{
						"buffer_size": 1092,
						"regions":
						{
						},
						"selection":
						[
							[
								851,
								851
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "sources/dnn/neurons/srm_neuron.h",
					"settings":
					{
						"buffer_size": 2146,
						"regions":
						{
						},
						"selection":
						[
							[
								1245,
								1245
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "sources/dnn/neurons/spike_neuron.cpp",
					"settings":
					{
						"buffer_size": 4756,
						"regions":
						{
						},
						"selection":
						[
							[
								4354,
								4354
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2512.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "sources/dnn/learning_rules/srm_methods.h",
					"settings":
					{
						"buffer_size": 1344,
						"regions":
						{
						},
						"selection":
						[
							[
								1332,
								1332
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "sources/dnn/util/json.cpp",
					"settings":
					{
						"buffer_size": 59,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "sources/dnn/util/json.h",
					"settings":
					{
						"buffer_size": 6834,
						"regions":
						{
						},
						"selection":
						[
							[
								5568,
								5568
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3284.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"settings":
					{
						"buffer_size": 14002,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										381,
										389
									],
									[
										434,
										442
									],
									[
										1224,
										1232
									],
									[
										1426,
										1434
									],
									[
										1612,
										1620
									],
									[
										1788,
										1796
									],
									[
										2003,
										2011
									],
									[
										2702,
										2710
									],
									[
										3318,
										3326
									],
									[
										3371,
										3379
									],
									[
										4170,
										4178
									],
									[
										4372,
										4380
									],
									[
										4558,
										4566
									],
									[
										4734,
										4742
									],
									[
										4949,
										4957
									],
									[
										5736,
										5744
									],
									[
										6268,
										6276
									],
									[
										6543,
										6551
									],
									[
										6804,
										6812
									],
									[
										6953,
										6961
									],
									[
										7090,
										7098
									],
									[
										7455,
										7463
									],
									[
										7623,
										7631
									],
									[
										7715,
										7723
									],
									[
										7849,
										7857
									],
									[
										7941,
										7949
									],
									[
										8067,
										8075
									],
									[
										8159,
										8167
									],
									[
										8282,
										8290
									],
									[
										8374,
										8382
									],
									[
										8602,
										8610
									],
									[
										8992,
										9000
									],
									[
										9275,
										9283
									],
									[
										9609,
										9617
									],
									[
										9917,
										9925
									],
									[
										10223,
										10231
									],
									[
										10509,
										10517
									],
									[
										10757,
										10765
									],
									[
										11100,
										11108
									],
									[
										11512,
										11520
									],
									[
										11702,
										11710
									],
									[
										11937,
										11945
									],
									[
										12200,
										12208
									],
									[
										12612,
										12620
									],
									[
										12997,
										13005
									],
									[
										13320,
										13328
									],
									[
										13501,
										13509
									],
									[
										13891,
										13899
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								13138,
								13138
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4006.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "sources/dnn/io/stream.cpp",
					"settings":
					{
						"buffer_size": 3915,
						"regions":
						{
						},
						"selection":
						[
							[
								2348,
								2348
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1214.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "sources/dnn/core.h",
					"settings":
					{
						"buffer_size": 1087,
						"regions":
						{
						},
						"selection":
						[
							[
								513,
								513
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 118.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"core",
				"sources/dnn/core.h"
			],
			[
				"jso",
				"sources/dnn/util/json.h"
			],
			[
				"srm",
				"sources/dnn/learning_rules/srm_methods.h"
			],
			[
				"spike",
				"sources/dnn/neurons/spike_neuron.cpp"
			],
			[
				"std",
				"sources/dnn/learning_rules/stdp.h"
			],
			[
				"diff",
				"sources/dnn/connections/difference_of_gaussians.h"
			],
			[
				"stat",
				"sources/dnn/synapses/static_synapse.h"
			],
			[
				"opti",
				"sources/dnn/learning_rules/optimal_stdp.cpp"
			],
			[
				"opt",
				"sources/dnn/learning_rules/optimal_stdp.cpp"
			],
			[
				"rpro",
				"src/RProto.h"
			],
			[
				"fa",
				"sources/dnn/base/factory.cpp"
			],
			[
				"sim.h",
				"sources/dnn/sim/sim.h"
			],
			[
				"glob",
				"sources/dnn/sim/global_ctx.h"
			],
			[
				"stre",
				"sources/dnn/io/stream.h"
			],
			[
				"p",
				"sources/dnn/util/ptr.h"
			],
			[
				"glo",
				"sources/dnn/sim/global_ctx.h"
			],
			[
				"simh",
				"sources/dnn/sim/sim.h"
			],
			[
				"sim",
				"sources/dnn/sim/sim.h"
			],
			[
				"bui",
				"sources/dnn/sim/builder.h"
			],
			[
				"dnn",
				"sources/tools/dnn_sim/dnn_sim.cpp"
			],
			[
				"le",
				"sources/dnn/learning_rules/learning_rule.h"
			],
			[
				"sta",
				"sources/dnn/synapses/static_synapse.h"
			],
			[
				"syn",
				"sources/dnn/synapses/synapse.h"
			],
			[
				"sp",
				"sources/dnn/neurons/spike_neuron.h"
			],
			[
				"ptr",
				"sources/dnn/util/ptr.h"
			],
			[
				"exp",
				"sources/dnn/act_functions/exp_threshold.h"
			],
			[
				"spik",
				"sources/dnn/neurons/spike_neuron.h"
			],
			[
				"inter",
				"sources/dnn/util/interfaced_ptr.h"
			],
			[
				"js",
				"sources/dnn/util/json.h"
			],
			[
				"cons",
				"sources/dnn/base/constants.h"
			],
			[
				"ne",
				"sources/dnn/neurons/spike_neuron.h"
			],
			[
				"buil",
				"sources/dnn/sim/builder.h"
			],
			[
				"rpr",
				"src/RProto.h"
			],
			[
				"faslo",
				"sources/dnn/util/fastapprox/fastlog.h"
			],
			[
				"det",
				"sources/dnn/act_functions/determ.h"
			],
			[
				"sr",
				"sources/dnn/neurons/srm_neuron.h"
			],
			[
				"ac",
				"sources/dnn/act_functions/act_function.h"
			],
			[
				"neu",
				"sources/dnn/neurons/spike_neuron.h"
			],
			[
				"op",
				"sources/dnn/learning_rules/optimal_stdp.h"
			],
			[
				"time",
				"sources/dnn/util/time_series.h"
			],
			[
				"mpl",
				"sources/tools/mpl/mpl_main.cpp"
			],
			[
				"ma",
				"sources/dnn/util/matrix.h"
			],
			[
				"ser",
				"sources/dnn/io/serialize.h"
			],
			[
				"r",
				"src/RMpl.h"
			],
			[
				"ut",
				"util/util.py"
			],
			[
				"ki",
				"kiwi/kiwi.py"
			],
			[
				"noa",
				"handlers/tests_handlers/noah_diff_handler.py"
			],
			[
				"lol",
				"local-oxy.py"
			],
			[
				"bike",
				"oxygen/bike.py"
			],
			[
				"cm",
				"oxygen/cm.py"
			],
			[
				"mas",
				"oxygen/master.py"
			],
			[
				"uti",
				"util/util.py"
			],
			[
				"base",
				"tests/base_diff.py"
			],
			[
				"kik",
				"kiwi/kiwi.py"
			],
			[
				"kiw",
				"handlers/kiwi_handler.py"
			],
			[
				"ox",
				"oxygen/oxygen_util.py"
			],
			[
				"io",
				"util/io.py"
			],
			[
				"no",
				"handlers/tests_handlers/noah_diff_handler.py"
			],
			[
				"doe",
				"core/doer.py"
			],
			[
				"down",
				"handlers/downloader_handler.py"
			],
			[
				"rol",
				"tests/rollback_attr.py"
			],
			[
				"kww",
				"oxygen/kwworm.py"
			],
			[
				"ro",
				"tests/rollback_attr.py"
			],
			[
				"",
				"handlers/tests_handlers/rollback_attr_handler.py"
			],
			[
				"giw",
				"oxygen/giwibranches.py"
			],
			[
				"as",
				"core/async.py"
			],
			[
				"doer",
				"core/doer.py"
			],
			[
				"loca",
				"core/local_oxy.py"
			],
			[
				"dis",
				"tests/dispatcher_test.py"
			],
			[
				"err",
				"core/errors.py"
			],
			[
				"bas",
				"tests/base_diff.py"
			],
			[
				"rm",
				"src/RMpl.h"
			],
			[
				"calc",
				"tests/calculate_all.py"
			],
			[
				"n",
				"tests/noah_test.py"
			],
			[
				"buid",
				"tests/build_shard.py"
			],
			[
				"kw",
				"oxygen/kwdumpwork.py"
			],
			[
				"uplo",
				"tests/uploads_test.py"
			],
			[
				"dow",
				"oxygen/downloader.py"
			],
			[
				"local",
				"core/local_oxy.py"
			],
			[
				"conf",
				"oxygen/config_gen.py"
			],
			[
				"kiwi",
				"kiwi/kiwi.py"
			],
			[
				"rmpl",
				"src/RMpl.h"
			],
			[
				"u",
				"sources/dnn/util/util.cpp"
			],
			[
				"mp",
				"sources/dnn/mpl/mpl.h"
			],
			[
				"build",
				"core/builder.py"
			],
			[
				"mod",
				"src/mod.h"
			],
			[
				"mo",
				"src/mod.h"
			],
			[
				"rsi",
				"src/RSim.h"
			],
			[
				"rp",
				"src/RProto.h"
			],
			[
				"kwd",
				"oxygen/kwdumpwork.py"
			],
			[
				"asy",
				"core/async.py"
			],
			[
				"hand",
				"core/handler.py"
			],
			[
				"rs",
				"src/RSim.h"
			],
			[
				"str",
				"dnn/io/stream.cpp"
			],
			[
				"rem",
				"util/rem.py"
			],
			[
				"re",
				"util/rem.py"
			],
			[
				"strea",
				"sources/dnn/io/stream.h"
			],
			[
				"node",
				"server/templates/node_details.html"
			],
			[
				"upl",
				"tests/uploads_test.py"
			],
			[
				"lo",
				"local-oxy.py"
			],
			[
				"std_",
				"dnn/synapses/std_synapse.h"
			],
			[
				"conn",
				"dnn/connections/difference_of_gaussians.h"
			],
			[
				"arc",
				"handlers/arc_commit_handler.py"
			],
			[
				"tree",
				"server/templates/tree.html"
			],
			[
				"ha",
				"handlers/handler.py"
			],
			[
				"mi",
				"min-ci.py"
			],
			[
				"ind",
				"server/templates/index.html"
			],
			[
				"in",
				"server/templates/index.html"
			],
			[
				"db",
				"db.py"
			],
			[
				"tr",
				"server/templates/tree.html"
			],
			[
				"fie",
				"humongolus/field.py"
			],
			[
				"__",
				"humongolus/__init__.py"
			],
			[
				"nod",
				"nodes.py"
			],
			[
				"tre",
				"server/templates/tree.html"
			],
			[
				"he",
				"server/templates/header.html"
			],
			[
				"inde",
				"server/templates/index.html"
			],
			[
				"nodev",
				"server/static/tpl/NodeView.html"
			],
			[
				"ba",
				"tests/base_diff.py"
			],
			[
				"uploa",
				"tests/uploads_test.py"
			],
			[
				"patch",
				"oxygen/patch_giwi_dump.py"
			],
			[
				"pro",
				"tests/prob_selector_mapper.py"
			],
			[
				"oxygen",
				"handlers/oxygen_handler.py"
			],
			[
				"pr",
				"tests/prob_selector_mapper.py"
			],
			[
				"patc",
				"oxygen/patch_giwi_dump.py"
			],
			[
				"conne",
				"dnn/connections/connection.h"
			],
			[
				"sa",
				"handlers/sandbox_handler.py"
			],
			[
				"han",
				"handlers/handler.py"
			],
			[
				"ar",
				"handlers/arc_commit_handler.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 195.0,
	"status_bar_visible": true
}
